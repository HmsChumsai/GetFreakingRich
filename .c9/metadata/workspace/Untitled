{"changed":true,"filter":false,"title":"Untitled","tooltip":"/Untitled","value":"var express = require('express')\n  , mongoskin = require('mongoskin')\n  , bodyParser = require('body-parser')\n\nvar app = express()\napp.use(bodyParser())\n\nvar db = mongoskin.db('mongodb://@localhost:27017/test', {safe:true})\n\napp.param('collectionName', function(req, res, next, collectionName){\n  req.collection = db.collection(collectionName)\n  return next()\n})\n\napp.get('/', function(req, res, next) {\n  res.send('please select a collection, e.g., /collections/messages')\n})\n\napp.get('/collections/:collectionName', function(req, res, next) {\n  req.collection.find({} ,{limit:10, sort: [['_id',-1]]}).toArray(function(e, results){\n    if (e) return next(e)\n    res.send(results)\n  })\n})\n\napp.post('/collections/:collectionName', function(req, res, next) {\n  req.collection.insert(req.body, {}, function(e, results){\n    if (e) return next(e)\n    res.send(results)\n  })\n})\n\napp.get('/collections/:collectionName/:id', function(req, res, next) {\n  req.collection.findById(req.params.id, function(e, result){\n    if (e) return next(e)\n    res.send(result)\n  })\n})\n\napp.put('/collections/:collectionName/:id', function(req, res, next) {\n  req.collection.updateById(req.params.id, {$set:req.body}, {safe:true, multi:false}, function(e, result){\n    if (e) return next(e)\n    res.send((result===1)?{msg:'success'}:{msg:'error'})\n  })\n})\n\napp.del('/collections/:collectionName/:id', function(req, res, next) {\n  req.collection.removeById(req.params.id, function(e, result){\n    if (e) return next(e)\n    res.send((result===1)?{msg:'success'}:{msg:'error'})\n  })\n})\n\napp.listen(3000)","undoManager":{"mark":-1,"position":2,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":32}},"text":"var express = require('express')"},{"action":"insertText","range":{"start":{"row":0,"column":32},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":53,"column":0}},"lines":["  , mongoskin = require('mongoskin')","  , bodyParser = require('body-parser')","","var app = express()","app.use(bodyParser())","","var db = mongoskin.db('mongodb://@localhost:27017/test', {safe:true})","","app.param('collectionName', function(req, res, next, collectionName){","  req.collection = db.collection(collectionName)","  return next()","})","","app.get('/', function(req, res, next) {","  res.send('please select a collection, e.g., /collections/messages')","})","","app.get('/collections/:collectionName', function(req, res, next) {","  req.collection.find({} ,{limit:10, sort: [['_id',-1]]}).toArray(function(e, results){","    if (e) return next(e)","    res.send(results)","  })","})","","app.post('/collections/:collectionName', function(req, res, next) {","  req.collection.insert(req.body, {}, function(e, results){","    if (e) return next(e)","    res.send(results)","  })","})","","app.get('/collections/:collectionName/:id', function(req, res, next) {","  req.collection.findById(req.params.id, function(e, result){","    if (e) return next(e)","    res.send(result)","  })","})","","app.put('/collections/:collectionName/:id', function(req, res, next) {","  req.collection.updateById(req.params.id, {$set:req.body}, {safe:true, multi:false}, function(e, result){","    if (e) return next(e)","    res.send((result===1)?{msg:'success'}:{msg:'error'})","  })","})","","app.del('/collections/:collectionName/:id', function(req, res, next) {","  req.collection.removeById(req.params.id, function(e, result){","    if (e) return next(e)","    res.send((result===1)?{msg:'success'}:{msg:'error'})","  })","})",""]},{"action":"insertText","range":{"start":{"row":53,"column":0},"end":{"row":53,"column":16}},"text":"app.listen(3000)"}]}]]},"ace":{"folds":[],"scrolltop":586,"scrollleft":0,"selection":{"start":{"row":53,"column":16},"end":{"row":53,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":33,"state":"start","mode":"ace/mode/text"}},"timestamp":1413297446000}