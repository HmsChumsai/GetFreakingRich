{"changed":true,"filter":false,"title":"amcharts.js","tooltip":"/amcharts/amcharts.js","value":"if (!AmCharts) var AmCharts = {\n    themes: {},\n    maps: {},\n    inheriting: {},\n    charts: [],\n    onReadyArray: [],\n    useUTC: !1,\n    updateRate: 40,\n    uid: 0,\n    lang: {},\n    translations: {},\n    mapTranslations: {},\n    windows: {},\n    initHandlers: []\n};\nAmCharts.Class = function(a) {\n    var b = function() {\n        arguments[0] !== AmCharts.inheriting && (this.events = {}, this.construct.apply(this, arguments))\n    };\n    a.inherits ? (b.prototype = new a.inherits(AmCharts.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function() {\n        for (var a = 0, b = arguments.length; a < b; a++) this.events[arguments[a]] = []\n    }, b.prototype.listenTo = function(a, b, c) {\n        this.removeListener(a, b, c);\n        a.events[b].push({\n            handler: c,\n            scope: this\n        })\n    }, b.prototype.addListener = function(a, b, c) {\n        this.removeListener(this,\n            a, b);\n        this.events[a].push({\n            handler: b,\n            scope: c\n        })\n    }, b.prototype.removeListener = function(a, b, c) {\n        if (a && a.events)\n            for (a = a.events[b], b = a.length - 1; 0 <= b; b--) a[b].handler === c && a.splice(b, 1)\n    }, b.prototype.fire = function(a, b) {\n        for (var c = this.events[a], g = 0, h = c.length; g < h; g++) {\n            var k = c[g];\n            k.handler.call(k.scope, b)\n        }\n    });\n    for (var c in a) b.prototype[c] = a[c];\n    return b\n};\nAmCharts.addChart = function(a) {\n    AmCharts.charts.push(a)\n};\nAmCharts.removeChart = function(a) {\n    for (var b = AmCharts.charts, c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1)\n};\nAmCharts.isModern = !0;\nAmCharts.getIEVersion = function() {\n    var a = 0;\n    if (\"Microsoft Internet Explorer\" == navigator.appName) {\n        var b = navigator.userAgent,\n            c = /MSIE ([0-9]{1,}[.0-9]{0,})/;\n        null != c.exec(b) && (a = parseFloat(RegExp.$1))\n    }\n    else \"Netscape\" == navigator.appName && (b = navigator.userAgent, c = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/, null != c.exec(b) && (a = parseFloat(RegExp.$1)));\n    return a\n};\nAmCharts.applyLang = function(a, b) {\n    var c = AmCharts.translations;\n    b.dayNames = AmCharts.dayNames;\n    b.shortDayNames = AmCharts.shortDayNames;\n    b.monthNames = AmCharts.monthNames;\n    b.shortMonthNames = AmCharts.shortMonthNames;\n    c && (c = c[a]) && (AmCharts.lang = c, c.monthNames && (b.dayNames = c.dayNames, b.shortDayNames = c.shortDayNames, b.monthNames = c.monthNames, b.shortMonthNames = c.shortMonthNames))\n};\nAmCharts.IEversion = AmCharts.getIEVersion();\n9 > AmCharts.IEversion && 0 < AmCharts.IEversion && (AmCharts.isModern = !1, AmCharts.isIE = !0);\nAmCharts.dx = 0;\nAmCharts.dy = 0;\nif (document.addEventListener || window.opera) AmCharts.isNN = !0, AmCharts.isIE = !1, AmCharts.dx = .5, AmCharts.dy = .5;\ndocument.attachEvent && (AmCharts.isNN = !1, AmCharts.isIE = !0, AmCharts.isModern || (AmCharts.dx = 0, AmCharts.dy = 0));\nwindow.chrome && (AmCharts.chrome = !0);\nAmCharts.handleResize = function() {\n    for (var a = AmCharts.charts, b = 0; b < a.length; b++) {\n        var c = a[b];\n        c && c.div && c.handleResize()\n    }\n};\nAmCharts.handleMouseUp = function(a) {\n    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {\n        var d = b[c];\n        d && d.handleReleaseOutside(a)\n    }\n};\nAmCharts.handleMouseMove = function(a) {\n    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {\n        var d = b[c];\n        d && d.handleMouseMove(a)\n    }\n};\nAmCharts.resetMouseOver = function() {\n    for (var a = AmCharts.charts, b = 0; b < a.length; b++) {\n        var c = a[b];\n        c && (c.mouseIsOver = !1)\n    }\n};\nAmCharts.ready = function(a) {\n    AmCharts.onReadyArray.push(a)\n};\nAmCharts.handleLoad = function() {\n    AmCharts.isReady = !0;\n    for (var a = AmCharts.onReadyArray, b = 0; b < a.length; b++) {\n        var c = a[b];\n        isNaN(AmCharts.processDelay) ? c() : setTimeout(c, AmCharts.processDelay * b)\n    }\n};\nAmCharts.addInitHandler = function(a, b) {\n    AmCharts.initHandlers.push({\n        method: a,\n        types: b\n    })\n};\nAmCharts.callInitHandler = function(a) {\n    var b = AmCharts.initHandlers;\n    if (AmCharts.initHandlers)\n        for (var c = 0; c < b.length; c++) {\n            var d = b[c];\n            d.types && -1 != d.types.indexOf(a.type) && d.method(a)\n        }\n};\nAmCharts.getUniqueId = function() {\n    AmCharts.uid++;\n    return \"AmChartsEl-\" + AmCharts.uid\n};\nAmCharts.isNN && (document.addEventListener(\"mousemove\", AmCharts.handleMouseMove, !0), window.addEventListener(\"resize\", AmCharts.handleResize, !0), document.addEventListener(\"mouseup\", AmCharts.handleMouseUp, !0), window.addEventListener(\"load\", AmCharts.handleLoad, !0));\nAmCharts.isIE && (document.attachEvent(\"onmousemove\", AmCharts.handleMouseMove), window.attachEvent(\"onresize\", AmCharts.handleResize), document.attachEvent(\"onmouseup\", AmCharts.handleMouseUp), window.attachEvent(\"onload\", AmCharts.handleLoad));\nAmCharts.clear = function() {\n    var a = AmCharts.charts;\n    if (a)\n        for (var b = 0; b < a.length; b++) a[b].clear();\n    AmCharts.charts = null;\n    AmCharts.isNN && (document.removeEventListener(\"mousemove\", AmCharts.handleMouseMove, !0), window.removeEventListener(\"resize\", AmCharts.handleResize, !0), document.removeEventListener(\"mouseup\", AmCharts.handleMouseUp, !0), window.removeEventListener(\"load\", AmCharts.handleLoad, !0));\n    AmCharts.isIE && (document.detachEvent(\"onmousemove\", AmCharts.handleMouseMove), window.detachEvent(\"onresize\", AmCharts.handleResize),\n        document.detachEvent(\"onmouseup\", AmCharts.handleMouseUp), window.detachEvent(\"onload\", AmCharts.handleLoad))\n};\nAmCharts.makeChart = function(a, b, c) {\n    var d = b.type,\n        e = b.theme;\n    AmCharts.isString(e) && (e = AmCharts.themes[e], b.theme = e);\n    var f;\n    switch (d) {\n        case \"serial\":\n            f = new AmCharts.AmSerialChart(e);\n            break;\n        case \"xy\":\n            f = new AmCharts.AmXYChart(e);\n            break;\n        case \"pie\":\n            f = new AmCharts.AmPieChart(e);\n            break;\n        case \"radar\":\n            f = new AmCharts.AmRadarChart(e);\n            break;\n        case \"gauge\":\n            f = new AmCharts.AmAngularGauge(e);\n            break;\n        case \"funnel\":\n            f = new AmCharts.AmFunnelChart(e);\n            break;\n        case \"map\":\n            f = new AmCharts.AmMap(e);\n            break;\n        case \"stock\":\n            f = new AmCharts.AmStockChart(e)\n    }\n    AmCharts.extend(f,\n        b);\n    AmCharts.isReady ? isNaN(c) ? f.write(a) : setTimeout(function() {\n        AmCharts.realWrite(f, a)\n    }, c) : AmCharts.ready(function() {\n        isNaN(c) ? f.write(a) : setTimeout(function() {\n            AmCharts.realWrite(f, a)\n        }, c)\n    });\n    return f\n};\nAmCharts.realWrite = function(a, b) {\n    a.write(b)\n};\nAmCharts.toBoolean = function(a, b) {\n    if (void 0 === a) return b;\n    switch (String(a).toLowerCase()) {\n        case \"true\":\n        case \"yes\":\n        case \"1\":\n            return !0;\n        case \"false\":\n        case \"no\":\n        case \"0\":\n        case null:\n            return !1;\n        default:\n            return Boolean(a)\n    }\n};\nAmCharts.removeFromArray = function(a, b) {\n    var c;\n    for (c = a.length - 1; 0 <= c; c--) a[c] == b && a.splice(c, 1)\n};\nAmCharts.getDecimals = function(a) {\n    var b = 0;\n    isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length));\n    return b\n};\nAmCharts.wrappedText = function(a, b, c, d, e, f, g, h, k) {\n    var l = AmCharts.text(a, b, c, d, e, f, g),\n        m = \"\\n\";\n    AmCharts.isModern || (m = \"<br>\");\n    if (10 < k) return l;\n    if (l) {\n        var n = l.getBBox();\n        if (n.width > h) {\n            l.remove();\n            for (var l = [], p = 0; - 1 < (index = b.indexOf(\" \", p));) l.push(index), p = index + 1;\n            for (var q = Math.round(b.length / 2), r = 1E3, s, p = 0; p < l.length; p++) {\n                var w = Math.abs(l[p] - q);\n                w < r && (s = l[p], r = w)\n            }\n            if (isNaN(s)) {\n                h = Math.ceil(n.width / h);\n                if (0 == k)\n                    for (p = 1; p < h; p++) s = Math.round(b.length / h * p), b = b.substr(0, s) + m + b.substr(s);\n                return AmCharts.text(a, b,\n                    c, d, e, f, g)\n            }\n            b = b.substr(0, s) + m + b.substr(s + 1);\n            return AmCharts.wrappedText(a, b, c, d, e, f, g, h, k + 1)\n        }\n        return l\n    }\n};\nAmCharts.getStyle = function(a, b) {\n    var c = \"\";\n    document.defaultView && document.defaultView.getComputedStyle ? c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b) : a.currentStyle && (b = b.replace(/\\-(\\w)/g, function(a, b) {\n        return b.toUpperCase()\n    }), c = a.currentStyle[b]);\n    return c\n};\nAmCharts.removePx = function(a) {\n    if (void 0 != a) return Number(a.substring(0, a.length - 2))\n};\nAmCharts.getURL = function(a, b) {\n    if (a)\n        if (\"_self\" != b && b)\n            if (\"_top\" == b && window.top) window.top.location.href = a;\n            else if (\"_parent\" == b && window.parent) window.parent.location.href = a;\n    else if (\"_blank\" == b) window.open(a);\n    else {\n        var c = document.getElementsByName(b)[0];\n        c ? c.src = a : (c = AmCharts.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : AmCharts.windows[b] = window.open(a) : AmCharts.windows[b] = window.open(a)\n    }\n    else window.location.href = a\n};\nAmCharts.ifArray = function(a) {\n    return a && 0 < a.length ? !0 : !1\n};\nAmCharts.callMethod = function(a, b) {\n    var c;\n    for (c = 0; c < b.length; c++) {\n        var d = b[c];\n        if (d) {\n            if (d[a]) d[a]();\n            var e = d.length;\n            if (0 < e) {\n                var f;\n                for (f = 0; f < e; f++) {\n                    var g = d[f];\n                    if (g && g[a]) g[a]()\n                }\n            }\n        }\n    }\n};\nAmCharts.toNumber = function(a) {\n    return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\"))\n};\nAmCharts.toColor = function(a) {\n    if (\"\" !== a && void 0 !== a)\n        if (-1 != a.indexOf(\",\")) {\n            a = a.split(\",\");\n            var b;\n            for (b = 0; b < a.length; b++) {\n                var c = a[b].substring(a[b].length - 6, a[b].length);\n                a[b] = \"#\" + c\n            }\n        }\n        else a = a.substring(a.length - 6, a.length), a = \"#\" + a;\n    return a\n};\nAmCharts.toCoordinate = function(a, b, c) {\n    var d;\n    void 0 !== a && (a = String(a), c && c < b && (b = c), d = Number(a), -1 != a.indexOf(\"!\") && (d = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (d = b * Number(a.substr(0, a.length - 1)) / 100));\n    return d\n};\nAmCharts.fitToBounds = function(a, b, c) {\n    a < b && (a = b);\n    a > c && (a = c);\n    return a\n};\nAmCharts.isDefined = function(a) {\n    return void 0 === a ? !1 : !0\n};\nAmCharts.stripNumbers = function(a) {\n    return a.replace(/[0-9]+/g, \"\")\n};\nAmCharts.roundTo = function(a, b) {\n    if (0 > b) return a;\n    var c = Math.pow(10, b);\n    return Math.round(a * c) / c\n};\nAmCharts.toFixed = function(a, b) {\n    var c = String(Math.round(a * Math.pow(10, b)));\n    if (0 < b) {\n        var d = c.length;\n        if (d < b) {\n            var e;\n            for (e = 0; e < b - d; e++) c = \"0\" + c\n        }\n        d = c.substring(0, c.length - b);\n        \"\" === d && (d = 0);\n        return d + \".\" + c.substring(c.length - b, c.length)\n    }\n    return String(c)\n};\nAmCharts.formatDuration = function(a, b, c, d, e, f) {\n    var g = AmCharts.intervals,\n        h = f.decimalSeparator;\n    if (a >= g[b].contains) {\n        var k = a - Math.floor(a / g[b].contains) * g[b].contains;\n        \"ss\" == b && (k = AmCharts.formatNumber(k, f), 1 == k.split(h)[0].length && (k = \"0\" + k));\n        (\"mm\" == b || \"hh\" == b) && 10 > k && (k = \"0\" + k);\n        c = k + \"\" + d[b] + \"\" + c;\n        a = Math.floor(a / g[b].contains);\n        b = g[b].nextInterval;\n        return AmCharts.formatDuration(a, b, c, d, e, f)\n    }\n    \"ss\" == b && (a = AmCharts.formatNumber(a, f), 1 == a.split(h)[0].length && (a = \"0\" + a));\n    (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a);\n    c = a + \"\" +\n        d[b] + \"\" + c;\n    if (g[e].count > g[b].count)\n        for (a = g[b].count; a < g[e].count; a++) b = g[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + d[b] + \"\" + c : \"DD\" == b && (c = \"0\" + d[b] + \"\" + c);\n    \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));\n    return c\n};\nAmCharts.formatNumber = function(a, b, c, d, e) {\n    a = AmCharts.roundTo(a, b.precision);\n    isNaN(c) && (c = b.precision);\n    var f = b.decimalSeparator;\n    b = b.thousandsSeparator;\n    var g;\n    g = 0 > a ? \"-\" : \"\";\n    a = Math.abs(a);\n    var h = String(a),\n        k = !1; - 1 != h.indexOf(\"e\") && (k = !0);\n    0 <= c && !k && (h = AmCharts.toFixed(a, c));\n    var l = \"\";\n    if (k) l = h;\n    else {\n        var h = h.split(\".\"),\n            k = String(h[0]),\n            m;\n        for (m = k.length; 0 <= m; m -= 3) l = m != k.length ? 0 !== m ? k.substring(m - 3, m) + b + l : k.substring(m - 3, m) + l : k.substring(m - 3, m);\n        void 0 !== h[1] && (l = l + f + h[1]);\n        void 0 !== c && 0 < c && \"0\" != l && (l = AmCharts.addZeroes(l,\n            f, c))\n    }\n    l = g + l;\n    \"\" === g && !0 === d && 0 !== a && (l = \"+\" + l);\n    !0 === e && (l += \"%\");\n    return l\n};\nAmCharts.addZeroes = function(a, b, c) {\n    a = a.split(b);\n    void 0 === a[1] && 0 < c && (a[1] = \"0\");\n    return a[1].length < c ? (a[1] += \"0\", AmCharts.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0]\n};\nAmCharts.scientificToNormal = function(a) {\n    var b;\n    a = String(a).split(\"e\");\n    var c;\n    if (\"-\" == a[1].substr(0, 1)) {\n        b = \"0.\";\n        for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += \"0\";\n        b += a[0].split(\".\").join(\"\")\n    }\n    else {\n        var d = 0;\n        b = a[0].split(\".\");\n        b[1] && (d = b[1].length);\n        b = a[0].split(\".\").join(\"\");\n        for (c = 0; c < Math.abs(Number(a[1])) - d; c++) b += \"0\"\n    }\n    return b\n};\nAmCharts.toScientific = function(a, b) {\n    if (0 === a) return \"0\";\n    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E);\n    Math.pow(10, c);\n    mantissa = String(mantissa).split(\".\").join(b);\n    return String(mantissa) + \"e\" + c\n};\nAmCharts.randomColor = function() {\n    return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6)\n};\nAmCharts.hitTest = function(a, b, c) {\n    var d = !1,\n        e = a.x,\n        f = a.x + a.width,\n        g = a.y,\n        h = a.y + a.height,\n        k = AmCharts.isInRectangle;\n    d || (d = k(e, g, b));\n    d || (d = k(e, h, b));\n    d || (d = k(f, g, b));\n    d || (d = k(f, h, b));\n    d || !0 === c || (d = AmCharts.hitTest(b, a, !0));\n    return d\n};\nAmCharts.isInRectangle = function(a, b, c) {\n    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1\n};\nAmCharts.isPercents = function(a) {\n    if (-1 != String(a).indexOf(\"%\")) return !0\n};\nAmCharts.findPosX = function(a) {\n    var b = a,\n        c = a.offsetLeft;\n    if (a.offsetParent) {\n        for (; a = a.offsetParent;) c += a.offsetLeft;\n        for (;\n            (b = b.parentNode) && b != document.body;) c -= b.scrollLeft || 0\n    }\n    return c\n};\nAmCharts.findPosY = function(a) {\n    var b = a,\n        c = a.offsetTop;\n    if (a.offsetParent) {\n        for (; a = a.offsetParent;) c += a.offsetTop;\n        for (;\n            (b = b.parentNode) && b != document.body;) c -= b.scrollTop || 0\n    }\n    return c\n};\nAmCharts.findIfFixed = function(a) {\n    if (a.offsetParent)\n        for (; a = a.offsetParent;)\n            if (\"fixed\" == AmCharts.getStyle(a, \"position\")) return !0;\n    return !1\n};\nAmCharts.findIfAuto = function(a) {\n    return a.style && \"auto\" == AmCharts.getStyle(a, \"overflow\") ? !0 : a.parentNode ? AmCharts.findIfAuto(a.parentNode) : !1\n};\nAmCharts.findScrollLeft = function(a, b) {\n    a.scrollLeft && (b += a.scrollLeft);\n    return a.parentNode ? AmCharts.findScrollLeft(a.parentNode, b) : b\n};\nAmCharts.findScrollTop = function(a, b) {\n    a.scrollTop && (b += a.scrollTop);\n    return a.parentNode ? AmCharts.findScrollTop(a.parentNode, b) : b\n};\nAmCharts.formatValue = function(a, b, c, d, e, f, g, h) {\n    if (b) {\n        void 0 === e && (e = \"\");\n        var k;\n        for (k = 0; k < c.length; k++) {\n            var l = c[k],\n                m = b[l];\n            void 0 !== m && (m = f ? AmCharts.addPrefix(m, h, g, d) : AmCharts.formatNumber(m, d), a = a.replace(new RegExp(\"\\\\[\\\\[\" + e + \"\" + l + \"\\\\]\\\\]\", \"g\"), m))\n        }\n    }\n    return a\n};\nAmCharts.formatDataContextValue = function(a, b) {\n    if (a) {\n        var c = a.match(/\\[\\[.*?\\]\\]/g),\n            d;\n        for (d = 0; d < c.length; d++) {\n            var e = c[d],\n                e = e.substr(2, e.length - 4);\n            void 0 !== b[e] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + e + \"\\\\]\\\\]\", \"g\"), b[e]))\n        }\n    }\n    return a\n};\nAmCharts.massReplace = function(a, b) {\n    for (var c in b)\n        if (b.hasOwnProperty(c)) {\n            var d = b[c];\n            void 0 === d && (d = \"\");\n            a = a.replace(c, d)\n        }\n    return a\n};\nAmCharts.cleanFromEmpty = function(a) {\n    return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\")\n};\nAmCharts.addPrefix = function(a, b, c, d, e) {\n    var f = AmCharts.formatNumber(a, d),\n        g = \"\",\n        h, k, l;\n    if (0 === a) return \"0\";\n    0 > a && (g = \"-\");\n    a = Math.abs(a);\n    if (1 < a)\n        for (h = b.length - 1; - 1 < h; h--) {\n            if (a >= b[h].number && (k = a / b[h].number, l = Number(d.precision), 1 > l && (l = 1), c = AmCharts.roundTo(k, l), l = AmCharts.formatNumber(c, {\n                precision: -1,\n                decimalSeparator: d.decimalSeparator,\n                thousandsSeparator: d.thousandsSeparator\n            }), !e || k == c)) {\n                f = g + \"\" + l + \"\" + b[h].prefix;\n                break\n            }\n        }\n    else\n        for (h = 0; h < c.length; h++)\n            if (a <= c[h].number) {\n                k = a / c[h].number;\n                l = Math.abs(Math.round(Math.log(k) *\n                    Math.LOG10E));\n                k = AmCharts.roundTo(k, l);\n                f = g + \"\" + k + \"\" + c[h].prefix;\n                break\n            } return f\n};\nAmCharts.remove = function(a) {\n    a && a.remove()\n};\nAmCharts.recommended = function() {\n    var a = \"js\";\n    document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") || swfobject && swfobject.hasFlashPlayerVersion(\"8\") && (a = \"flash\");\n    return a\n};\nAmCharts.getEffect = function(a) {\n    \">\" == a && (a = \"easeOutSine\");\n    \"<\" == a && (a = \"easeInSine\");\n    \"elastic\" == a && (a = \"easeOutElastic\");\n    return a\n};\nAmCharts.getObjById = function(a, b) {\n    var c, d;\n    for (d = 0; d < a.length; d++) {\n        var e = a[d];\n        e.id == b && (c = e)\n    }\n    return c\n};\nAmCharts.applyTheme = function(a, b, c) {\n    b || (b = AmCharts.theme);\n    b && b[c] && AmCharts.extend(a, b[c])\n};\nAmCharts.isString = function(a) {\n    return \"string\" == typeof a ? !0 : !1\n};\nAmCharts.extend = function(a, b, c) {\n    for (var d in b) c ? a.hasOwnProperty(d) || (a[d] = b[d]) : a[d] = b[d];\n    return a\n};\nAmCharts.copyProperties = function(a, b) {\n    for (var c in a) a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c])\n};\nAmCharts.processObject = function(a, b, c) {\n    !1 === a instanceof b && (a = AmCharts.extend(new b(c), a));\n    return a\n};\nAmCharts.fixNewLines = function(a) {\n    var b = RegExp(\"\\\\n\", \"g\");\n    a && (a = a.replace(b, \"<br />\"));\n    return a\n};\nAmCharts.fixBrakes = function(a) {\n    if (AmCharts.isModern) {\n        var b = RegExp(\"<br>\", \"g\");\n        a && (a = a.replace(b, \"\\n\"))\n    }\n    else a = AmCharts.fixNewLines(a);\n    return a\n};\nAmCharts.deleteObject = function(a, b) {\n    if (a) {\n        if (void 0 === b || null === b) b = 20;\n        if (0 !== b)\n            if (\"[object Array]\" === Object.prototype.toString.call(a))\n                for (var c = 0; c < a.length; c++) AmCharts.deleteObject(a[c], b - 1), a[c] = null;\n            else if (a && !a.tagName) try {\n            for (c in a) a[c] && (\"object\" == typeof a[c] && AmCharts.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null))\n        }\n        catch (d) {}\n    }\n};\nAmCharts.bounce = function(a, b, c, d, e) {\n    return (b /= e) < 1 / 2.75 ? 7.5625 * d * b * b + c : b < 2 / 2.75 ? d * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? d * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : d * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c\n};\nAmCharts.easeInSine = function(a, b, c, d, e) {\n    return -d * Math.cos(b / e * (Math.PI / 2)) + d + c\n};\nAmCharts.easeOutSine = function(a, b, c, d, e) {\n    return d * Math.sin(b / e * (Math.PI / 2)) + c\n};\nAmCharts.easeOutElastic = function(a, b, c, d, e) {\n    a = 1.70158;\n    var f = 0,\n        g = d;\n    if (0 === b) return c;\n    if (1 == (b /= e)) return c + d;\n    f || (f = .3 * e);\n    g < Math.abs(d) ? (g = d, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(d / g);\n    return g * Math.pow(2, -10 * b) * Math.sin(2 * (b * e - a) * Math.PI / f) + d + c\n};\nAmCharts.AxisBase = AmCharts.Class({\n    construct: function(a) {\n        this.createEvents(\"clickItem\", \"rollOverItem\", \"rollOutItem\");\n        this.viY = this.viX = this.y = this.x = this.dy = this.dx = 0;\n        this.axisThickness = 1;\n        this.axisColor = \"#000000\";\n        this.axisAlpha = 1;\n        this.gridCount = this.tickLength = 5;\n        this.gridAlpha = .15;\n        this.gridThickness = 1;\n        this.gridColor = \"#000000\";\n        this.dashLength = 0;\n        this.labelFrequency = 1;\n        this.showLastLabel = this.showFirstLabel = !0;\n        this.fillColor = \"#FFFFFF\";\n        this.fillAlpha = 0;\n        this.labelsEnabled = !0;\n        this.labelRotation = 0;\n        this.autoGridCount = !0;\n        this.valueRollOverColor = \"#CC0000\";\n        this.offset = 0;\n        this.guides = [];\n        this.visible = !0;\n        this.counter = 0;\n        this.guides = [];\n        this.ignoreAxisWidth = this.inside = !1;\n        this.minHorizontalGap = 75;\n        this.minVerticalGap = 35;\n        this.titleBold = !0;\n        this.minorGridEnabled = !1;\n        this.minorGridAlpha = .07;\n        this.autoWrap = !1;\n        this.titleAlign = \"middle\";\n        this.labelOffset = 0;\n        AmCharts.applyTheme(this, a, \"AxisBase\")\n    },\n    zoom: function(a, b) {\n        this.start = a;\n        this.end = b;\n        this.dataChanged = !0;\n        this.draw()\n    },\n    fixAxisPosition: function() {\n        var a = this.position;\n        \"H\" == this.orientation ?\n            (\"left\" == a && (a = \"bottom\"), \"right\" == a && (a = \"top\")) : (\"bottom\" == a && (a = \"left\"), \"top\" == a && (a = \"right\"));\n        this.position = a\n    },\n    draw: function() {\n        var a = this.chart;\n        this.allLabels = [];\n        this.counter = 0;\n        this.destroy();\n        this.fixAxisPosition();\n        this.labels = [];\n        var b = a.container,\n            c = b.set();\n        a.gridSet.push(c);\n        this.set = c;\n        b = b.set();\n        a.axesLabelsSet.push(b);\n        this.labelsSet = b;\n        this.axisLine = new this.axisRenderer(this);\n        this.autoGridCount ? (\"V\" == this.orientation ? (a = this.height / this.minVerticalGap, 3 > a && (a = 3)) : a = this.width / this.minHorizontalGap,\n            this.gridCountR = Math.max(a, 1)) : this.gridCountR = this.gridCount;\n        this.axisWidth = this.axisLine.axisWidth;\n        this.addTitle()\n    },\n    setOrientation: function(a) {\n        this.orientation = a ? \"H\" : \"V\"\n    },\n    addTitle: function() {\n        var a = this.title;\n        if (a) {\n            var b = this.chart,\n                c = this.titleColor;\n            void 0 === c && (c = b.color);\n            var d = this.titleFontSize;\n            isNaN(d) && (d = b.fontSize + 1);\n            this.titleLabel = AmCharts.text(b.container, a, c, b.fontFamily, d, this.titleAlign, this.titleBold)\n        }\n    },\n    positionTitle: function() {\n        var a = this.titleLabel;\n        if (a) {\n            var b, c, d = this.labelsSet,\n                e = {};\n            0 < d.length() ? e = d.getBBox() : (e.x = 0, e.y = 0, e.width = this.viW, e.height = this.viH);\n            d.push(a);\n            var d = e.x,\n                f = e.y;\n            AmCharts.VML && (this.rotate ? d -= this.x : f -= this.y);\n            var g = e.width,\n                e = e.height,\n                h = this.viW,\n                k = this.viH,\n                l = 0,\n                m = a.getBBox().height / 2,\n                n = this.inside,\n                p = this.titleAlign;\n            switch (this.position) {\n                case \"top\":\n                    b = \"left\" == p ? -1 : \"right\" == p ? h : h / 2;\n                    c = f - 10 - m;\n                    break;\n                case \"bottom\":\n                    b = \"left\" == p ? -1 : \"right\" == p ? h : h / 2;\n                    c = f + e + 10 + m;\n                    break;\n                case \"left\":\n                    b = d - 10 - m;\n                    n && (b -= 5);\n                    c = \"left\" == p ? k + 1 : \"right\" == p ? -1 : k / 2;\n                    l = -90;\n                    break;\n                case \"right\":\n                    b = d + g + 10 +\n                        m - 3, n && (b += 7), c = \"left\" == p ? k + 2 : \"right\" == p ? -2 : k / 2, l = -90\n            }\n            this.marginsChanged ? (a.translate(b, c), this.tx = b, this.ty = c) : a.translate(this.tx, this.ty);\n            this.marginsChanged = !1;\n            0 !== l && a.rotate(l)\n        }\n    },\n    pushAxisItem: function(a, b) {\n        var c = this,\n            d = a.graphics();\n        0 < d.length() && (b ? c.labelsSet.push(d) : c.set.push(d));\n        if (d = a.getLabel()) this.labelsSet.push(d), d.click(function(b) {\n            c.handleMouse(b, a, \"clickItem\")\n        }).mouseover(function(b) {\n            c.handleMouse(b, a, \"rollOverItem\")\n        }).mouseout(function(b) {\n            c.handleMouse(b, a, \"rollOutItem\")\n        })\n    },\n    handleMouse: function(a,\n        b, c) {\n        this.fire(c, {\n            type: c,\n            value: b.value,\n            serialDataItem: b.serialDataItem,\n            axis: this,\n            target: b.label,\n            chart: this.chart,\n            event: a\n        })\n    },\n    addGuide: function(a) {\n        for (var b = this.guides, c = !1, d = 0; d < b.length; d++) b[d] == a && (c = !0);\n        c || b.push(a)\n    },\n    removeGuide: function(a) {\n        var b = this.guides,\n            c;\n        for (c = 0; c < b.length; c++) b[c] == a && b.splice(c, 1)\n    },\n    handleGuideOver: function(a) {\n        clearTimeout(this.chart.hoverInt);\n        var b = a.graphics.getBBox(),\n            c = b.x + b.width / 2,\n            b = b.y + b.height / 2,\n            d = a.fillColor;\n        void 0 === d && (d = a.lineColor);\n        this.chart.showBalloon(a.balloonText,\n            d, !0, c, b)\n    },\n    handleGuideOut: function(a) {\n        this.chart.hideBalloon()\n    },\n    addEventListeners: function(a, b) {\n        var c = this;\n        a.mouseover(function() {\n            c.handleGuideOver(b)\n        });\n        a.mouseout(function() {\n            c.handleGuideOut(b)\n        })\n    },\n    getBBox: function() {\n        var a = this.labelsSet.getBBox();\n        AmCharts.VML || (a = {\n            x: a.x + this.x,\n            y: a.y + this.y,\n            width: a.width,\n            height: a.height\n        });\n        return a\n    },\n    destroy: function() {\n        AmCharts.remove(this.set);\n        AmCharts.remove(this.labelsSet);\n        var a = this.axisLine;\n        a && AmCharts.remove(a.set);\n        AmCharts.remove(this.grid0)\n    }\n});\nAmCharts.ValueAxis = AmCharts.Class({\n    inherits: AmCharts.AxisBase,\n    construct: function(a) {\n        this.cname = \"ValueAxis\";\n        this.createEvents(\"axisChanged\", \"logarithmicAxisFailed\", \"axisSelfZoomed\", \"axisZoomed\");\n        AmCharts.ValueAxis.base.construct.call(this, a);\n        this.dataChanged = !0;\n        this.stackType = \"none\";\n        this.position = \"left\";\n        this.unitPosition = \"right\";\n        this.recalculateToPercents = this.includeHidden = this.includeGuidesInMinMax = this.integersOnly = !1;\n        this.durationUnits = {\n            DD: \"d. \",\n            hh: \":\",\n            mm: \":\",\n            ss: \"\"\n        };\n        this.scrollbar = !1;\n        this.baseValue =\n            0;\n        this.radarCategoriesEnabled = !0;\n        this.gridType = \"polygons\";\n        this.useScientificNotation = !1;\n        this.axisTitleOffset = 10;\n        this.minMaxMultiplier = 1;\n        this.logGridLimit = 2;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    updateData: function() {\n        0 >= this.gridCountR && (this.gridCountR = 1);\n        this.totals = [];\n        this.data = this.chart.chartData;\n        var a = this.chart;\n        \"xy\" != a.type && (this.stackGraphs(\"smoothedLine\"), this.stackGraphs(\"line\"), this.stackGraphs(\"column\"), this.stackGraphs(\"step\"));\n        this.recalculateToPercents && this.recalculate();\n        this.synchronizationMultiplier &&\n            this.synchronizeWith ? (AmCharts.isString(this.synchronizeWith) && (this.synchronizeWith = a.getValueAxisById(this.synchronizeWith)), this.synchronizeWith && (this.synchronizeWithAxis(this.synchronizeWith), this.foundGraphs = !0)) : (this.foundGraphs = !1, this.getMinMax())\n    },\n    draw: function() {\n        AmCharts.ValueAxis.base.draw.call(this);\n        var a = this.chart,\n            b = this.set;\n        \"duration\" == this.type && (this.duration = \"ss\");\n        !0 === this.dataChanged && (this.updateData(), this.dataChanged = !1);\n        if (this.logarithmic && (0 >= this.getMin(0, this.data.length -\n            1) || 0 >= this.minimum)) this.fire(\"logarithmicAxisFailed\", {\n            type: \"logarithmicAxisFailed\",\n            chart: a\n        });\n        else {\n            this.grid0 = null;\n            var c, d, e = a.dx,\n                f = a.dy,\n                g = !1,\n                h = this.logarithmic;\n            if (isNaN(this.min) || isNaN(this.max) || !this.foundGraphs || Infinity == this.min || -Infinity == this.max) g = !0;\n            else {\n                var k = this.labelFrequency,\n                    l = this.showFirstLabel,\n                    m = this.showLastLabel,\n                    n = 1,\n                    p = 0,\n                    q = Math.round((this.max - this.min) / this.step) + 1,\n                    r;\n                !0 === h ? (r = Math.log(this.max) * Math.LOG10E - Math.log(this.minReal) * Math.LOG10E, this.stepWidth = this.axisWidth / r,\n                    r > this.logGridLimit && (q = Math.ceil(Math.log(this.max) * Math.LOG10E) + 1, p = Math.round(Math.log(this.minReal) * Math.LOG10E), q > this.gridCountR && (n = Math.ceil(q / this.gridCountR)))) : this.stepWidth = this.axisWidth / (this.max - this.min);\n                var s = 0;\n                1 > this.step && -1 < this.step && (s = AmCharts.getDecimals(this.step));\n                this.integersOnly && (s = 0);\n                s > this.maxDecCount && (s = this.maxDecCount);\n                var w = this.precision;\n                isNaN(w) || (s = w);\n                this.max = AmCharts.roundTo(this.max, this.maxDecCount);\n                this.min = AmCharts.roundTo(this.min, this.maxDecCount);\n                d = {};\n                d.precision = s;\n                d.decimalSeparator = a.nf.decimalSeparator;\n                d.thousandsSeparator = a.nf.thousandsSeparator;\n                this.numberFormatter = d;\n                var v, t = this.guides;\n                c = t.length;\n                if (0 < c) {\n                    var u = this.fillAlpha;\n                    for (d = this.fillAlpha = 0; d < c; d++) {\n                        var x = t[d],\n                            E = NaN,\n                            A = x.above;\n                        isNaN(x.toValue) || (E = this.getCoordinate(x.toValue), v = new this.axisItemRenderer(this, E, \"\", !0, NaN, NaN, x), this.pushAxisItem(v, A));\n                        var z = NaN;\n                        isNaN(x.value) || (z = this.getCoordinate(x.value), v = new this.axisItemRenderer(this, z, x.label, !0, NaN, (E - z) / 2, x), this.pushAxisItem(v,\n                            A));\n                        isNaN(E - z) || (v = new this.guideFillRenderer(this, z, E, x), this.pushAxisItem(v, A), v = v.graphics(), x.graphics = v, x.balloonText && this.addEventListeners(v, x))\n                    }\n                    this.fillAlpha = u\n                }\n                this.exponential = !1;\n                for (d = p; d < q; d += n) t = AmCharts.roundTo(this.step * d + this.min, s), -1 != String(t).indexOf(\"e\") && (this.exponential = !0, String(t).split(\"e\"));\n                this.duration && (this.maxInterval = AmCharts.getMaxInterval(this.max, this.duration));\n                var s = this.step,\n                    H, t = this.minorGridAlpha;\n                this.minorGridEnabled && (H = this.getMinorGridStep(s, this.stepWidth *\n                    s));\n                for (d = p; d < q; d += n)\n                    if (p = s * d + this.min, h && this.max - this.min > 5 * this.min && (p -= this.min), p = AmCharts.roundTo(p, this.maxDecCount + 1), !this.integersOnly || Math.round(p) == p)\n                        if (isNaN(w) || Number(AmCharts.toFixed(p, w)) == p) {\n                            !0 === h && (0 === p && (p = this.minReal), r > this.logGridLimit && (p = Math.pow(10, d)));\n                            v = this.formatValue(p, !1, d);\n                            Math.round(d / k) != d / k && (v = void 0);\n                            if (0 === d && !l || d == q - 1 && !m) v = \" \";\n                            c = this.getCoordinate(p);\n                            v = new this.axisItemRenderer(this, c, v, void 0, void 0, void 0, void 0, this.boldLabels);\n                            this.pushAxisItem(v);\n                            if (p == this.baseValue && \"radar\" != a.type) {\n                                var F, G, x = this.viW,\n                                    A = this.viH;\n                                v = this.viX;\n                                u = this.viY;\n                                \"H\" == this.orientation ? 0 <= c && c <= x + 1 && (F = [c, c, c + e], G = [A, 0, f]) : 0 <= c && c <= A + 1 && (F = [0, x, x + e], G = [c, c, c + f]);\n                                F && (c = AmCharts.fitToBounds(2 * this.gridAlpha, 0, 1), c = AmCharts.line(a.container, F, G, this.gridColor, c, 1, this.dashLength), c.translate(v, u), this.grid0 = c, a.axesSet.push(c), c.toBack())\n                            }\n                            if (!isNaN(H) && 0 < t && d < q - 1) {\n                                v = this.gridAlpha;\n                                this.gridAlpha = this.minorGridAlpha;\n                                for (c = 1; c < s / H; c++) u = this.getCoordinate(p + H * c), u = new this.axisItemRenderer(this,\n                                    u, \"\", !1, 0, 0, !1, !1, 0, !0), this.pushAxisItem(u);\n                                this.gridAlpha = v\n                            }\n                        }\n                e = this.baseValue;\n                this.min > this.baseValue && this.max > this.baseValue && (e = this.min);\n                this.min < this.baseValue && this.max < this.baseValue && (e = this.max);\n                h && e < this.minReal && (e = this.minReal);\n                this.baseCoord = this.getCoordinate(e);\n                e = {\n                    type: \"axisChanged\",\n                    target: this,\n                    chart: a\n                };\n                e.min = h ? this.minReal : this.min;\n                e.max = this.max;\n                this.fire(\"axisChanged\", e);\n                this.axisCreated = !0\n            }\n            h = this.axisLine.set;\n            e = this.labelsSet;\n            this.positionTitle();\n            \"radar\" != a.type ? (a = this.viX, f =\n                this.viY, b.translate(a, f), e.translate(a, f)) : h.toFront();\n            !this.visible || g ? (b.hide(), h.hide(), e.hide()) : (b.show(), h.show(), e.show());\n            this.axisY = this.y - this.viY;\n            this.axisX = this.x - this.viX\n        }\n    },\n    formatValue: function(a, b, c) {\n        var d = this.exponential,\n            e = this.logarithmic,\n            f = this.numberFormatter,\n            g = this.chart;\n        !0 === this.logarithmic && (d = -1 != String(a).indexOf(\"e\") ? !0 : !1);\n        this.useScientificNotation && (d = !0);\n        this.usePrefixes && (d = !1);\n        d ? (valueText = -1 == String(a).indexOf(\"e\") ? a.toExponential(15) : String(a), c = valueText.split(\"e\"),\n            b = Number(c[0]), c = Number(c[1]), b = AmCharts.roundTo(b, 14), 10 == b && (b = 1, c += 1), valueText = b + \"e\" + c, 0 === a && (valueText = \"0\"), 1 == a && (valueText = \"1\")) : (e && (d = String(a).split(\".\"), d[1] ? (f.precision = d[1].length, 0 > c && (f.precision = Math.abs(c))) : f.precision = -1), valueText = this.usePrefixes ? AmCharts.addPrefix(a, g.prefixesOfBigNumbers, g.prefixesOfSmallNumbers, f, !b) : AmCharts.formatNumber(a, f, f.precision));\n        this.duration && (valueText = AmCharts.formatDuration(a, this.duration, \"\", this.durationUnits, this.maxInterval, f));\n        this.recalculateToPercents ?\n            valueText += \"%\" : (f = this.unit) && (valueText = \"left\" == this.unitPosition ? f + valueText : valueText + f);\n        this.labelFunction && (valueText = this.labelFunction(a, valueText, this).toString());\n        return valueText\n    },\n    getMinorGridStep: function(a, b) {\n        var c = [5, 4, 2];\n        60 > b && c.shift();\n        for (var d = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), e = 0; e < c.length; e++) {\n            var f = a / c[e],\n                g = Math.floor(Math.log(Math.abs(f)) * Math.LOG10E);\n            if (!(0 < Math.abs(d - g)))\n                if (1 > a) {\n                    if (g = Math.pow(10, -g) * f, g == Math.round(g)) return f\n                }\n                else if (f == Math.round(f)) return f\n        }\n    },\n    stackGraphs: function(a) {\n        var b = this.stackType;\n        \"stacked\" == b && (b = \"regular\");\n        \"line\" == b && (b = \"none\");\n        \"100% stacked\" == b && (b = \"100%\");\n        this.stackType = b;\n        var c = [],\n            d = [],\n            e = [],\n            f = [],\n            g, h = this.chart.graphs,\n            k, l, m, n, p = this.baseValue,\n            q = !1;\n        if (\"line\" == a || \"step\" == a || \"smoothedLine\" == a) q = !0;\n        if (q && (\"regular\" == b || \"100%\" == b))\n            for (n = 0; n < h.length; n++) m = h[n], m.hidden || (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable && (k && (m.stackGraph = k), k = m));\n        for (k = this.start; k <= this.end; k++) {\n            var r = 0;\n            for (n = 0; n < h.length; n++)\n                if (m =\n                    h[n], m.hidden) m.newStack && (e[k] = NaN, d[k] = NaN);\n                else if (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable)\n                if (l = this.data[k].axes[this.id].graphs[m.id], g = l.values.value, isNaN(g)) m.newStack && (e[k] = NaN, d[k] = NaN);\n                else {\n                    var s = AmCharts.getDecimals(g);\n                    r < s && (r = s);\n                    isNaN(f[k]) ? f[k] = Math.abs(g) : f[k] += Math.abs(g);\n                    f[k] = AmCharts.roundTo(f[k], r);\n                    s = m.fillToGraph;\n                    q && s && (s = this.data[k].axes[this.id].graphs[s.id]) && (l.values.open = s.values.value);\n                    \"regular\" == b && (q && (isNaN(c[k]) ? (c[k] = g, l.values.close = g,\n                        l.values.open = this.baseValue) : (isNaN(g) ? l.values.close = c[k] : l.values.close = g + c[k], l.values.open = c[k], c[k] = l.values.close)), \"column\" == a && (m.newStack && (e[k] = NaN, d[k] = NaN), l.values.close = g, 0 > g ? (l.values.close = g, isNaN(d[k]) ? l.values.open = p : (l.values.close += d[k], l.values.open = d[k]), d[k] = l.values.close) : (l.values.close = g, isNaN(e[k]) ? l.values.open = p : (l.values.close += e[k], l.values.open = e[k]), e[k] = l.values.close)))\n                }\n        }\n        for (k = this.start; k <= this.end; k++)\n            for (n = 0; n < h.length; n++)(m = h[n], m.hidden) ? m.newStack && (e[k] =\n                NaN, d[k] = NaN) : (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable && (l = this.data[k].axes[this.id].graphs[m.id], g = l.values.value, isNaN(g) || (c = g / f[k] * 100, l.values.percents = c, l.values.total = f[k], m.newStack && (e[k] = NaN, d[k] = NaN), \"100%\" == b && (isNaN(d[k]) && (d[k] = 0), isNaN(e[k]) && (e[k] = 0), 0 > c ? (l.values.close = AmCharts.fitToBounds(c + d[k], -100, 100), l.values.open = d[k], d[k] = l.values.close) : (l.values.close = AmCharts.fitToBounds(c + e[k], -100, 100), l.values.open = e[k], e[k] = l.values.close)))))\n    },\n    recalculate: function() {\n        var a =\n            this.chart,\n            b = a.graphs,\n            c;\n        for (c = 0; c < b.length; c++) {\n            var d = b[c];\n            if (d.valueAxis == this) {\n                var e = \"value\";\n                if (\"candlestick\" == d.type || \"ohlc\" == d.type) e = \"open\";\n                var f, g, h = this.end + 2,\n                    h = AmCharts.fitToBounds(this.end + 1, 0, this.data.length - 1),\n                    k = this.start;\n                0 < k && k--;\n                var l;\n                g = this.start;\n                d.compareFromStart && (g = 0);\n                if (!isNaN(a.startTime) && (l = a.categoryAxis)) {\n                    minDuration = l.minDuration();\n                    var m = new Date(a.startTime + minDuration / 2),\n                        n = AmCharts.resetDateToMin(new Date(a.startTime), l.minPeriod).getTime();\n                    AmCharts.resetDateToMin(new Date(m),\n                        l.minPeriod).getTime() > n && g++\n                }\n                if (l = a.recalculateFromDate) a.dataDateFormat && (l = AmCharts.stringToDate(l, a.dataDateFormat)), g = a.getClosestIndex(a.chartData, \"time\", l.getTime(), !0, 0, a.chartData.length), h = a.chartData.length - 1;\n                for (l = g; l <= h && (g = this.data[l].axes[this.id].graphs[d.id], f = g.values[e], isNaN(f)); l++);\n                this.recBaseValue = f;\n                for (e = k; e <= h; e++) {\n                    g = this.data[e].axes[this.id].graphs[d.id];\n                    g.percents = {};\n                    var k = g.values,\n                        p;\n                    for (p in k) g.percents[p] = \"percents\" != p ? k[p] / f * 100 - 100 : k[p]\n                }\n            }\n        }\n    },\n    getMinMax: function() {\n        var a = !1,\n            b = this.chart,\n            c = b.graphs,\n            d;\n        for (d = 0; d < c.length; d++) {\n            var e = c[d].type;\n            (\"line\" == e || \"step\" == e || \"smoothedLine\" == e) && this.expandMinMax && (a = !0)\n        }\n        a && (0 < this.start && this.start--, this.end < this.data.length - 1 && this.end++);\n        \"serial\" == b.type && (!0 !== b.categoryAxis.parseDates || a || this.end < this.data.length - 1 && this.end++);\n        a = this.minMaxMultiplier;\n        this.min = this.getMin(this.start, this.end);\n        this.max = this.getMax();\n        a = (this.max - this.min) * (a - 1);\n        this.min -= a;\n        this.max += a;\n        a = this.guides.length;\n        if (this.includeGuidesInMinMax && 0 < a)\n            for (b =\n                0; b < a; b++) c = this.guides[b], c.toValue < this.min && (this.min = c.toValue), c.value < this.min && (this.min = c.value), c.toValue > this.max && (this.max = c.toValue), c.value > this.max && (this.max = c.value);\n        isNaN(this.minimum) || (this.min = this.minimum);\n        isNaN(this.maximum) || (this.max = this.maximum);\n        this.min > this.max && (a = this.max, this.max = this.min, this.min = a);\n        isNaN(this.minTemp) || (this.min = this.minTemp);\n        isNaN(this.maxTemp) || (this.max = this.maxTemp);\n        this.minReal = this.min;\n        this.maxReal = this.max;\n        0 === this.min && 0 === this.max && (this.max =\n            9);\n        this.min > this.max && (this.min = this.max - 1);\n        a = this.min;\n        b = this.max;\n        c = this.max - this.min;\n        d = 0 === c ? Math.pow(10, Math.floor(Math.log(Math.abs(this.max)) * Math.LOG10E)) / 10 : Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;\n        isNaN(this.maximum) && isNaN(this.maxTemp) && (this.max = Math.ceil(this.max / d) * d + d);\n        isNaN(this.minimum) && isNaN(this.minTemp) && (this.min = Math.floor(this.min / d) * d - d);\n        0 > this.min && 0 <= a && (this.min = 0);\n        0 < this.max && 0 >= b && (this.max = 0);\n        \"100%\" == this.stackType && (this.min = 0 > this.min ? -100 : 0, this.max =\n            0 > this.max ? 0 : 100);\n        c = this.max - this.min;\n        d = Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;\n        this.step = Math.ceil(c / this.gridCountR / d) * d;\n        c = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E));\n        c = this.fixStepE(c);\n        d = Math.ceil(this.step / c);\n        5 < d && (d = 10);\n        5 >= d && 2 < d && (d = 5);\n        this.step = Math.ceil(this.step / (c * d)) * c * d;\n        1 > c ? (this.maxDecCount = Math.abs(Math.log(Math.abs(c)) * Math.LOG10E), this.maxDecCount = Math.round(this.maxDecCount), this.step = AmCharts.roundTo(this.step, this.maxDecCount + 1)) : this.maxDecCount =\n            0;\n        this.min = this.step * Math.floor(this.min / this.step);\n        this.max = this.step * Math.ceil(this.max / this.step);\n        0 > this.min && 0 <= a && (this.min = 0);\n        0 < this.max && 0 >= b && (this.max = 0);\n        1 < this.minReal && 1 < this.max - this.minReal && (this.minReal = Math.floor(this.minReal));\n        c = Math.pow(10, Math.floor(Math.log(Math.abs(this.minReal)) * Math.LOG10E));\n        0 === this.min && (this.minReal = c);\n        0 === this.min && 1 < this.minReal && (this.minReal = 1);\n        0 < this.min && 0 < this.minReal - this.step && (this.minReal = this.min + this.step < this.minReal ? this.min + this.step : this.min);\n        c = Math.log(b) * Math.LOG10E - Math.log(a) * Math.LOG10E;\n        this.logarithmic && (2 < c ? (this.minReal = this.min = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)), this.max = Math.pow(10, Math.ceil(Math.log(Math.abs(b)) * Math.LOG10E))) : (b = Math.pow(10, Math.floor(Math.log(Math.abs(this.min)) * Math.LOG10E)) / 10, a = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)) / 10, b < a && (this.minReal = this.min = 10 * a)))\n    },\n    fixStepE: function(a) {\n        a = a.toExponential(0).split(\"e\");\n        var b = Number(a[1]);\n        9 == Number(a[0]) && b++;\n        return this.generateNumber(1,\n            b)\n    },\n    generateNumber: function(a, b) {\n        var c = \"\",\n            d;\n        d = 0 > b ? Math.abs(b) - 1 : Math.abs(b);\n        var e;\n        for (e = 0; e < d; e++) c += \"0\";\n        return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c)\n    },\n    getMin: function(a, b) {\n        var c, d;\n        for (d = a; d <= b; d++) {\n            var e = this.data[d].axes[this.id].graphs,\n                f;\n            for (f in e)\n                if (e.hasOwnProperty(f)) {\n                    var g = this.chart.getGraphById(f);\n                    if (g.includeInMinMax && (!g.hidden || this.includeHidden)) {\n                        isNaN(c) && (c = Infinity);\n                        this.foundGraphs = !0;\n                        g = e[f].values;\n                        this.recalculateToPercents && (g = e[f].percents);\n                        var h;\n                        if (this.minMaxField) h =\n                            g[this.minMaxField], h < c && (c = h);\n                        else\n                            for (var k in g) g.hasOwnProperty(k) && \"percents\" != k && \"total\" != k && (h = g[k], h < c && (c = h))\n                    }\n                }\n        }\n        return c\n    },\n    getMax: function() {\n        var a, b;\n        for (b = this.start; b <= this.end; b++) {\n            var c = this.data[b].axes[this.id].graphs,\n                d;\n            for (d in c)\n                if (c.hasOwnProperty(d)) {\n                    var e = this.chart.getGraphById(d);\n                    if (e.includeInMinMax && (!e.hidden || this.includeHidden)) {\n                        isNaN(a) && (a = -Infinity);\n                        this.foundGraphs = !0;\n                        e = c[d].values;\n                        this.recalculateToPercents && (e = c[d].percents);\n                        var f;\n                        if (this.minMaxField) f = e[this.minMaxField],\n                            f > a && (a = f);\n                        else\n                            for (var g in e) e.hasOwnProperty(g) && \"percents\" != g && \"total\" != g && (f = e[g], f > a && (a = f))\n                    }\n                }\n        }\n        return a\n    },\n    dispatchZoomEvent: function(a, b) {\n        var c = {\n            type: \"axisZoomed\",\n            startValue: a,\n            endValue: b,\n            target: this,\n            chart: this.chart\n        };\n        this.fire(c.type, c)\n    },\n    zoomToValues: function(a, b) {\n        if (b < a) {\n            var c = b;\n            b = a;\n            a = c\n        }\n        a < this.min && (a = this.min);\n        b > this.max && (b = this.max);\n        c = {\n            type: \"axisSelfZoomed\"\n        };\n        c.chart = this.chart;\n        c.valueAxis = this;\n        c.multiplier = this.axisWidth / Math.abs(this.getCoordinate(b) - this.getCoordinate(a));\n        c.position = \"V\" ==\n            this.orientation ? this.reversed ? this.getCoordinate(a) : this.getCoordinate(b) : this.reversed ? this.getCoordinate(b) : this.getCoordinate(a);\n        this.fire(c.type, c)\n    },\n    coordinateToValue: function(a) {\n        if (isNaN(a)) return NaN;\n        var b = this.axisWidth,\n            c = this.stepWidth,\n            d = this.reversed,\n            e = this.rotate,\n            f = this.min,\n            g = this.minReal;\n        return !0 === this.logarithmic ? Math.pow(10, (e ? !0 === d ? (b - a) / c : a / c : !0 === d ? a / c : (b - a) / c) + Math.log(g) * Math.LOG10E) : !0 === d ? e ? f - (a - b) / c : a / c + f : e ? a / c + f : f - (a - b) / c\n    },\n    getCoordinate: function(a) {\n        if (isNaN(a)) return NaN;\n        var b = this.rotate,\n            c = this.reversed,\n            d = this.axisWidth,\n            e = this.stepWidth,\n            f = this.min,\n            g = this.minReal;\n        !0 === this.logarithmic ? (a = Math.log(a) * Math.LOG10E - Math.log(g) * Math.LOG10E, b = b ? !0 === c ? d - e * a : e * a : !0 === c ? e * a : d - e * a) : b = !0 === c ? b ? d - e * (a - f) : e * (a - f) : b ? e * (a - f) : d - e * (a - f);\n        b = this.rotate ? b + (this.x - this.viX) : b + (this.y - this.viY);\n        1E7 < Math.abs(b) && (b = 1E7 * (b / Math.abs(b)));\n        return Math.round(b)\n    },\n    synchronizeWithAxis: function(a) {\n        this.synchronizeWith = a;\n        this.listenTo(this.synchronizeWith, \"axisChanged\", this.handleSynchronization)\n    },\n    handleSynchronization: function(a) {\n        var b = this.synchronizeWith;\n        a = b.min;\n        var c = b.max,\n            b = b.step,\n            d = this.synchronizationMultiplier;\n        d && (this.min = a * d, this.max = c * d, this.step = b * d, a = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)), a = Math.abs(Math.log(Math.abs(a)) * Math.LOG10E), this.maxDecCount = a = Math.round(a), this.draw())\n    }\n});\nAmCharts.RecAxis = AmCharts.Class({\n    construct: function(a) {\n        var b = a.chart,\n            c = a.axisThickness,\n            d = a.axisColor,\n            e = a.axisAlpha,\n            f = a.offset,\n            g = a.dx,\n            h = a.dy,\n            k = a.viX,\n            l = a.viY,\n            m = a.viH,\n            n = a.viW,\n            p = b.container;\n        \"H\" == a.orientation ? (d = AmCharts.line(p, [0, n], [0, 0], d, e, c), this.axisWidth = a.width, \"bottom\" == a.position ? (a = c / 2 + f + m + l - 1, c = k) : (a = -c / 2 - f + l + h, c = g + k)) : (this.axisWidth = a.height, \"right\" == a.position ? (d = AmCharts.line(p, [0, 0, -g], [0, m, m - h], d, e, c), a = l + h, c = c / 2 + f + g + n + k - 1) : (d = AmCharts.line(p, [0, 0], [0, m], d, e, c), a = l, c = -c / 2 - f + k));\n        d.translate(c,\n            a);\n        b.axesSet.push(d);\n        this.set = d\n    }\n});\nAmCharts.RecItem = AmCharts.Class({\n    construct: function(a, b, c, d, e, f, g, h, k, l, m) {\n        b = Math.round(b);\n        this.value = c;\n        void 0 == c && (c = \"\");\n        k || (k = 0);\n        void 0 == d && (d = !0);\n        var n = a.chart.fontFamily,\n            p = a.fontSize;\n        void 0 == p && (p = a.chart.fontSize);\n        var q = a.color;\n        void 0 == q && (q = a.chart.color);\n        void 0 !== m && (q = m);\n        var r = a.chart.container,\n            s = r.set();\n        this.set = s;\n        var w = a.axisThickness,\n            v = a.axisColor,\n            t = a.axisAlpha,\n            u = a.tickLength,\n            x = a.gridAlpha,\n            E = a.gridThickness,\n            A = a.gridColor,\n            z = a.dashLength,\n            H = a.fillColor,\n            F = a.fillAlpha,\n            G = a.labelsEnabled;\n        m = a.labelRotation;\n        var V = a.counter,\n            N = a.inside,\n            ia = a.labelOffset,\n            da = a.dx,\n            ba = a.dy,\n            Sa = a.orientation,\n            na = a.position,\n            ta = a.previousCoord,\n            L = a.viH,\n            Y = a.viW,\n            $ = a.offset,\n            oa, W;\n        g ? (G = !0, isNaN(g.tickLength) || (u = g.tickLength), void 0 != g.lineColor && (A = g.lineColor), void 0 != g.color && (q = g.color), isNaN(g.lineAlpha) || (x = g.lineAlpha), isNaN(g.dashLength) || (z = g.dashLength), isNaN(g.lineThickness) || (E = g.lineThickness), !0 === g.inside && (N = !0), isNaN(g.labelRotation) || (m = g.labelRotation), isNaN(g.fontSize) || (p = g.fontSize), g.position && (na = g.position), void 0 !==\n            g.boldLabel && (h = g.boldLabel), isNaN(g.labelOffset) || (ia = g.labelOffset)) : \"\" === c && (u = 0);\n        W = \"start\";\n        e && (W = \"middle\");\n        var Z = m * Math.PI / 180,\n            pa, I = 0,\n            D = 0,\n            aa = 0,\n            S = pa = 0,\n            Ta = 0;\n        \"V\" == Sa && (m = 0);\n        var T;\n        G && (T = a.autoWrap && 0 === m ? AmCharts.wrappedText(r, c, q, n, p, W, h, e, 0) : AmCharts.text(r, c, q, n, p, W, h), W = T.getBBox(), S = W.width, Ta = W.height);\n        if (\"H\" == Sa) {\n            if (0 <= b && b <= Y + 1 && (0 < u && 0 < t && b + k <= Y + 1 && (oa = AmCharts.line(r, [b + k, b + k], [0, u], v, t, E), s.push(oa)), 0 < x && (W = AmCharts.line(r, [b, b + da, b + da], [L, L + ba, ba], A, x, E, z), s.push(W))), D = 0, I = b, g && 90 ==\n                m && N && (I -= p), !1 === d ? (W = \"start\", D = \"bottom\" == na ? N ? D + u : D - u : N ? D - u : D + u, I += 3, e && (I += e / 2 - 3, W = \"middle\"), 0 < m && (W = \"middle\")) : W = \"middle\", 1 == V && 0 < F && !g && !l && ta < Y && (d = AmCharts.fitToBounds(b, 0, Y), ta = AmCharts.fitToBounds(ta, 0, Y), pa = d - ta, 0 < pa && (fill = AmCharts.rect(r, pa, a.height, H, F), fill.translate(d - pa + da, ba), s.push(fill))), \"bottom\" == na ? (D += L + p / 2 + $, N ? (0 < m ? (D = L - S / 2 * Math.sin(Z) - u - 3, I += S / 2 * Math.cos(Z) - 4 + 2) : 0 > m ? (D = L + S * Math.sin(Z) - u - 3 + 2, I += -S * Math.cos(Z) - Ta * Math.sin(Z) - 4) : D -= u + p + 3 + 3, D -= ia) : (0 < m ? (D = L + S / 2 * Math.sin(Z) + u +\n                    3, I -= S / 2 * Math.cos(Z)) : 0 > m ? (D = L + u + 3 - S / 2 * Math.sin(Z) + 2, I += S / 2 * Math.cos(Z)) : D += u + w + 3 + 3, D += ia)) : (D += ba + p / 2 - $, I += da, N ? (0 < m ? (D = S / 2 * Math.sin(Z) + u + 3, I -= S / 2 * Math.cos(Z)) : D += u + 3, D += ia) : (0 < m ? (D = -(S / 2) * Math.sin(Z) - u - 6, I += S / 2 * Math.cos(Z)) : D -= u + p + 3 + w + 3, D -= ia)), \"bottom\" == na ? pa = (N ? L - u - 1 : L + w - 1) + $ : (aa = da, pa = (N ? ba : ba - u - w + 1) - $), f && (I += f), f = I, 0 < m && (f += S / 2 * Math.cos(Z)), T && (p = 0, N && (p = S / 2 * Math.cos(Z)), f + p > Y + 2 || 0 > f)) T.remove(), T = null\n        }\n        else {\n            0 <= b && b <= L + 1 && (0 < u && 0 < t && b + k <= L + 1 && (oa = AmCharts.line(r, [0, u], [b + k, b + k], v, t, E), s.push(oa)),\n                0 < x && (W = AmCharts.line(r, [0, da, Y + da], [b, b + ba, b + ba], A, x, E, z), s.push(W)));\n            W = \"end\";\n            if (!0 === N && \"left\" == na || !1 === N && \"right\" == na) W = \"start\";\n            D = b - p / 2;\n            1 == V && 0 < F && !g && !l && (d = AmCharts.fitToBounds(b, 0, L), ta = AmCharts.fitToBounds(ta, 0, L), Z = d - ta, fill = AmCharts.polygon(r, [0, a.width, a.width, 0], [0, 0, Z, Z], H, F), fill.translate(da, d - Z + ba), s.push(fill));\n            D += p / 2;\n            \"right\" == na ? (I += da + Y + $, D += ba, N ? (f || (D -= p / 2 + 3), I = I - (u + 4) - ia) : (I += u + 4 + w, D -= 2, I += ia)) : N ? (I += u + 4 - $, f || (D -= p / 2 + 3), g && (I += da, D += ba), I += ia) : (I += -u - w - 4 - 2 - $, D -= 2, I -= ia);\n            oa &&\n                (\"right\" == na ? (aa += da + $ + Y, pa += ba, aa = N ? aa - w : aa + w) : (aa -= $, N || (aa -= u + w)));\n            f && (D += f);\n            N = -3;\n            \"right\" == na && (N += ba);\n            T && (D > L + 1 || D < N) && (T.remove(), T = null)\n        }\n        oa && oa.translate(aa, pa);\n        !1 === a.visible && (oa && oa.remove(), T && (T.remove(), T = null));\n        T && (T.attr({\n            \"text-anchor\": W\n        }), T.translate(I, D), 0 !== m && T.rotate(-m, a.chart.backgroundColor), a.allLabels.push(T), \" \" != c && (this.label = T));\n        l || (a.counter = 0 === V ? 1 : 0, a.previousCoord = b);\n        0 === this.set.node.childNodes.length && this.set.remove()\n    },\n    graphics: function() {\n        return this.set\n    },\n    getLabel: function() {\n        return this.label\n    }\n});\nAmCharts.RecFill = AmCharts.Class({\n    construct: function(a, b, c, d) {\n        var e = a.dx,\n            f = a.dy,\n            g = a.orientation,\n            h = 0;\n        if (c < b) {\n            var k = b;\n            b = c;\n            c = k\n        }\n        var l = d.fillAlpha;\n        isNaN(l) && (l = 0);\n        k = a.chart.container;\n        d = d.fillColor;\n        \"V\" == g ? (b = AmCharts.fitToBounds(b, 0, a.viH), c = AmCharts.fitToBounds(c, 0, a.viH)) : (b = AmCharts.fitToBounds(b, 0, a.viW), c = AmCharts.fitToBounds(c, 0, a.viW));\n        c -= b;\n        isNaN(c) && (c = 4, h = 2, l = 0);\n        0 > c && \"object\" == typeof d && (d = d.join(\",\").split(\",\").reverse());\n        \"V\" == g ? (a = AmCharts.rect(k, a.width, c, d, l), a.translate(e, b - h + f)) : (a = AmCharts.rect(k,\n            c, a.height, d, l), a.translate(b - h + e, f));\n        this.set = k.set([a])\n    },\n    graphics: function() {\n        return this.set\n    },\n    getLabel: function() {}\n});\nAmCharts.AmChart = AmCharts.Class({\n    construct: function(a) {\n        this.theme = a;\n        this.version = \"3.11.1\";\n        AmCharts.addChart(this);\n        this.createEvents(\"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\");\n        this.height = this.width = \"100%\";\n        this.dataChanged = !0;\n        this.chartCreated = !1;\n        this.previousWidth = this.previousHeight = 0;\n        this.backgroundColor = \"#FFFFFF\";\n        this.borderAlpha = this.backgroundAlpha = 0;\n        this.color = this.borderColor = \"#000000\";\n        this.fontFamily = \"Verdana\";\n        this.fontSize = 11;\n        this.usePrefixes = !1;\n        this.precision = -1;\n        this.percentPrecision =\n            2;\n        this.decimalSeparator = \".\";\n        this.thousandsSeparator = \",\";\n        this.labels = [];\n        this.allLabels = [];\n        this.titles = [];\n        this.marginRight = this.marginLeft = this.autoMarginOffset = 0;\n        this.timeOuts = [];\n        this.creditsPosition = \"top-left\";\n        var b = document.createElement(\"div\"),\n            c = b.style;\n        c.overflow = \"hidden\";\n        c.position = \"relative\";\n        c.textAlign = \"left\";\n        this.chartDiv = b;\n        b = document.createElement(\"div\");\n        c = b.style;\n        c.overflow = \"hidden\";\n        c.position = \"relative\";\n        c.textAlign = \"left\";\n        this.legendDiv = b;\n        this.titleHeight = 0;\n        this.hideBalloonTime = 150;\n        this.handDrawScatter =\n            2;\n        this.handDrawThickness = 1;\n        this.prefixesOfBigNumbers = [{\n            number: 1E3,\n            prefix: \"k\"\n        }, {\n            number: 1E6,\n            prefix: \"M\"\n        }, {\n            number: 1E9,\n            prefix: \"G\"\n        }, {\n            number: 1E12,\n            prefix: \"T\"\n        }, {\n            number: 1E15,\n            prefix: \"P\"\n        }, {\n            number: 1E18,\n            prefix: \"E\"\n        }, {\n            number: 1E21,\n            prefix: \"Z\"\n        }, {\n            number: 1E24,\n            prefix: \"Y\"\n        }];\n        this.prefixesOfSmallNumbers = [{\n            number: 1E-24,\n            prefix: \"y\"\n        }, {\n            number: 1E-21,\n            prefix: \"z\"\n        }, {\n            number: 1E-18,\n            prefix: \"a\"\n        }, {\n            number: 1E-15,\n            prefix: \"f\"\n        }, {\n            number: 1E-12,\n            prefix: \"p\"\n        }, {\n            number: 1E-9,\n            prefix: \"n\"\n        }, {\n            number: 1E-6,\n            prefix: \"μ\"\n        }, {\n            number: .001,\n            prefix: \"m\"\n        }];\n        this.panEventsEnabled = !0;\n        AmCharts.bezierX = 3;\n        AmCharts.bezierY = 6;\n        this.product = \"amcharts\";\n        this.animations = [];\n        this.balloon = new AmCharts.AmBalloon(this.theme);\n        this.balloon.chart = this;\n        AmCharts.applyTheme(this, a, \"AmChart\")\n    },\n    drawChart: function() {\n        this.drawBackground();\n        this.redrawLabels();\n        this.drawTitles();\n        this.brr()\n    },\n    drawBackground: function() {\n        AmCharts.remove(this.background);\n        var a = this.container,\n            b = this.backgroundColor,\n            c = this.backgroundAlpha,\n            d = this.set;\n        AmCharts.isModern || 0 !== c || (c = .001);\n        var e = this.updateWidth();\n        this.realWidth = e;\n        var f = this.updateHeight();\n        this.realHeight = f;\n        this.background = b = AmCharts.polygon(a, [0, e - 1, e - 1, 0], [0, 0, f - 1, f - 1], b, c, 1, this.borderColor, this.borderAlpha);\n        d.push(b);\n        if (b = this.backgroundImage) this.path && (b = this.path + b), this.bgImg = a = a.image(b, 0, 0, e, f), d.push(a)\n    },\n    drawTitles: function() {\n        var a = this.titles;\n        if (AmCharts.ifArray(a)) {\n            var b = 20,\n                c;\n            for (c = 0; c < a.length; c++) {\n                var d = a[c],\n                    e = d.color;\n                void 0 === e && (e = this.color);\n                var f = d.size;\n                isNaN(f) && (f = this.fontSize + 2);\n                isNaN(d.alpha);\n                var g = this.marginLeft,\n                    e = AmCharts.text(this.container,\n                        d.text, e, this.fontFamily, f);\n                e.translate(g + (this.realWidth - this.marginRight - g) / 2, b);\n                e.node.style.pointerEvents = \"none\";\n                g = !0;\n                void 0 !== d.bold && (g = d.bold);\n                g && e.attr({\n                    \"font-weight\": \"bold\"\n                });\n                e.attr({\n                    opacity: d.alpha\n                });\n                b += f + 6;\n                this.freeLabelsSet.push(e)\n            }\n        }\n    },\n    write: function(a) {\n        if (a = \"object\" != typeof a ? document.getElementById(a) : a) {\n            a.innerHTML = \"\";\n            this.div = a;\n            a.style.overflow = \"hidden\";\n            a.style.textAlign = \"left\";\n            var b = this.chartDiv,\n                c = this.legendDiv,\n                d = this.legend,\n                e = c.style,\n                f = b.style;\n            this.measure();\n            var g, h = document.createElement(\"div\");\n            g = h.style;\n            g.position = \"relative\";\n            this.containerDiv = h;\n            a.appendChild(h);\n            var k = this.exportConfig;\n            k && AmCharts.AmExport && !this.AmExport && (this.AmExport = new AmCharts.AmExport(this, k));\n            this.amExport && AmCharts.AmExport && (this.AmExport = AmCharts.extend(this.amExport, new AmCharts.AmExport(this), !0));\n            this.AmExport && this.AmExport.init && this.AmExport.init();\n            if (d) switch (d = this.addLegend(d, d.divId), d.position) {\n                case \"bottom\":\n                    h.appendChild(b);\n                    h.appendChild(c);\n                    break;\n                case \"top\":\n                    h.appendChild(c);\n                    h.appendChild(b);\n                    break;\n                case \"absolute\":\n                    g.width = a.style.width;\n                    g.height = a.style.height;\n                    e.position = \"absolute\";\n                    f.position = \"absolute\";\n                    void 0 !== d.left && (e.left = d.left + \"px\");\n                    void 0 !== d.right && (e.right = d.right + \"px\");\n                    void 0 !== d.top && (e.top = d.top + \"px\");\n                    void 0 !== d.bottom && (e.bottom = d.bottom + \"px\");\n                    d.marginLeft = 0;\n                    d.marginRight = 0;\n                    h.appendChild(b);\n                    h.appendChild(c);\n                    break;\n                case \"right\":\n                    g.width = a.style.width;\n                    g.height = a.style.height;\n                    e.position = \"relative\";\n                    f.position = \"absolute\";\n                    h.appendChild(b);\n                    h.appendChild(c);\n                    break;\n                case \"left\":\n                    g.width = a.style.width;\n                    g.height = a.style.height;\n                    e.position = \"absolute\";\n                    f.position = \"relative\";\n                    h.appendChild(b);\n                    h.appendChild(c);\n                    break;\n                case \"outside\":\n                    h.appendChild(b)\n            }\n            else h.appendChild(b);\n            this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);\n            this.initChart()\n        }\n    },\n    createLabelsSet: function() {\n        AmCharts.remove(this.labelsSet);\n        this.labelsSet = this.container.set();\n        this.freeLabelsSet.push(this.labelsSet)\n    },\n    initChart: function() {\n        AmCharts.callInitHandler(this);\n        AmCharts.applyLang(this.language, this);\n        var a = this.numberFormatter;\n        a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));\n        (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision);\n        this.nf = {\n            precision: this.precision,\n            thousandsSeparator: this.thousandsSeparator,\n            decimalSeparator: this.decimalSeparator\n        };\n        this.pf = {\n            precision: this.percentPrecision,\n            thousandsSeparator: this.thousandsSeparator,\n            decimalSeparator: this.decimalSeparator\n        };\n        this.divIsFixed = AmCharts.findIfFixed(this.chartDiv);\n        this.previousHeight = this.divRealHeight;\n        this.previousWidth = this.divRealWidth;\n        this.destroy();\n        this.startInterval();\n        a = 0;\n        document.attachEvent && !window.opera && (a = 1);\n        this.dmouseX = this.dmouseY = 0;\n        var b = document.getElementsByTagName(\"html\")[0];\n        b && window.getComputedStyle && (b = window.getComputedStyle(b, null)) && (this.dmouseY = AmCharts.removePx(b.getPropertyValue(\"margin-top\")), this.dmouseX = AmCharts.removePx(b.getPropertyValue(\"margin-left\")));\n        this.mouseMode = a;\n        (a = this.container) ? (a.container.innerHTML = \"\", this.chartDiv.appendChild(a.container), a.setSize(this.realWidth, this.realHeight)) : a = new AmCharts.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this);\n        AmCharts.VML || AmCharts.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, this.container = a, this.set && this.set.remove(), this.set = a.set(), this.gridSet && this.gridSet.remove(), this.gridSet = a.set(), this.cursorLineSet && this.cursorLineSet.remove(),\n                this.cursorLineSet = a.set(), this.graphsBehindSet && this.graphsBehindSet.remove(), this.graphsBehindSet = a.set(), this.bulletBehindSet && this.bulletBehindSet.remove(), this.bulletBehindSet = a.set(), this.columnSet && this.columnSet.remove(), this.columnSet = a.set(), this.graphsSet && this.graphsSet.remove(), this.graphsSet = a.set(), this.trendLinesSet && this.trendLinesSet.remove(), this.trendLinesSet = a.set(), this.axesLabelsSet && this.axesLabelsSet.remove(), this.axesLabelsSet = a.set(), this.axesSet && this.axesSet.remove(),\n                this.axesSet = a.set(), this.cursorSet && this.cursorSet.remove(), this.cursorSet = a.set(), this.scrollbarsSet && this.scrollbarsSet.remove(), this.scrollbarsSet = a.set(), this.bulletSet && this.bulletSet.remove(), this.bulletSet = a.set(), this.freeLabelsSet && this.freeLabelsSet.remove(), this.freeLabelsSet = a.set(), this.balloonsSet && this.balloonsSet.remove(), this.balloonsSet = a.set(), this.zoomButtonSet && this.zoomButtonSet.remove(), this.zoomButtonSet = a.set(), this.linkSet && this.linkSet.remove(), this.linkSet = a.set(), this.renderFix()) :\n            this.fire(\"failed\", {\n                type: \"failed\",\n                chart: this\n            })\n    },\n    measure: function() {\n        var a = this.div;\n        if (a) {\n            var b = this.chartDiv,\n                c = a.offsetWidth,\n                d = a.offsetHeight,\n                e = this.container;\n            a.clientHeight && (c = a.clientWidth, d = a.clientHeight);\n            var f = AmCharts.removePx(AmCharts.getStyle(a, \"padding-left\")),\n                g = AmCharts.removePx(AmCharts.getStyle(a, \"padding-right\")),\n                h = AmCharts.removePx(AmCharts.getStyle(a, \"padding-top\")),\n                k = AmCharts.removePx(AmCharts.getStyle(a, \"padding-bottom\"));\n            isNaN(f) || (c -= f);\n            isNaN(g) || (c -= g);\n            isNaN(h) || (d -= h);\n            isNaN(k) ||\n                (d -= k);\n            f = a.style;\n            a = f.width;\n            f = f.height; - 1 != a.indexOf(\"px\") && (c = AmCharts.removePx(a)); - 1 != f.indexOf(\"px\") && (d = AmCharts.removePx(f));\n            a = AmCharts.toCoordinate(this.width, c);\n            f = AmCharts.toCoordinate(this.height, d);\n            this.balloon = AmCharts.processObject(this.balloon, AmCharts.AmBalloon, this.theme);\n            this.balloon.chart = this;\n            (a != this.previousWidth || f != this.previousHeight) && 0 < a && 0 < f && (b.style.width = a + \"px\", b.style.height = f + \"px\", e && e.setSize(a, f));\n            this.balloon.setBounds(2, 2, a - 2, f);\n            this.realWidth = a;\n            this.realHeight = f;\n            this.divRealWidth = c;\n            this.divRealHeight = d\n        }\n    },\n    destroy: function() {\n        this.chartDiv.innerHTML = \"\";\n        this.clearTimeOuts();\n        this.interval && clearInterval(this.interval);\n        this.interval = NaN\n    },\n    clearTimeOuts: function() {\n        var a = this.timeOuts;\n        if (a) {\n            var b;\n            for (b = 0; b < a.length; b++) clearTimeout(a[b])\n        }\n        this.timeOuts = []\n    },\n    clear: function(a) {\n        AmCharts.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);\n        this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;\n        this.clearTimeOuts();\n        this.interval && clearInterval(this.interval);\n        this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));\n        a || AmCharts.removeChart(this)\n    },\n    setMouseCursor: function(a) {\n        \"auto\" == a && AmCharts.isNN && (a = \"default\");\n        this.chartDiv.style.cursor = a;\n        this.legendDiv.style.cursor = a\n    },\n    redrawLabels: function() {\n        this.labels = [];\n        var a = this.allLabels;\n        this.createLabelsSet();\n        var b;\n        for (b = 0; b < a.length; b++) this.drawLabel(a[b])\n    },\n    drawLabel: function(a) {\n        if (this.container) {\n            var b = a.y,\n                c = a.text,\n                d = a.align,\n                e =\n                a.size,\n                f = a.color,\n                g = a.rotation,\n                h = a.alpha,\n                k = a.bold,\n                l = AmCharts.toCoordinate(a.x, this.realWidth),\n                b = AmCharts.toCoordinate(b, this.realHeight);\n            l || (l = 0);\n            b || (b = 0);\n            void 0 === f && (f = this.color);\n            isNaN(e) && (e = this.fontSize);\n            d || (d = \"start\");\n            \"left\" == d && (d = \"start\");\n            \"right\" == d && (d = \"end\");\n            \"center\" == d && (d = \"middle\", g ? b = this.realHeight - b + b / 2 : l = this.realWidth / 2 - l);\n            void 0 === h && (h = 1);\n            void 0 === g && (g = 0);\n            b += e / 2;\n            c = AmCharts.text(this.container, c, f, this.fontFamily, e, d, k, h);\n            c.translate(l, b);\n            0 !== g && c.rotate(g);\n            a.url ? (c.setAttr(\"cursor\",\n                \"pointer\"), c.click(function() {\n                AmCharts.getURL(a.url)\n            })) : c.node.style.pointerEvents = \"none\";\n            this.labelsSet.push(c);\n            this.labels.push(c)\n        }\n    },\n    addLabel: function(a, b, c, d, e, f, g, h, k, l) {\n        a = {\n            x: a,\n            y: b,\n            text: c,\n            align: d,\n            size: e,\n            color: f,\n            alpha: h,\n            rotation: g,\n            bold: k,\n            url: l\n        };\n        this.container && this.drawLabel(a);\n        this.allLabels.push(a)\n    },\n    clearLabels: function() {\n        var a = this.labels,\n            b;\n        for (b = a.length - 1; 0 <= b; b--) a[b].remove();\n        this.labels = [];\n        this.allLabels = []\n    },\n    updateHeight: function() {\n        var a = this.divRealHeight,\n            b = this.legend;\n        if (b) {\n            var c = this.legendDiv.offsetHeight,\n                b = b.position;\n            if (\"top\" == b || \"bottom\" == b) {\n                a -= c;\n                if (0 > a || isNaN(a)) a = 0;\n                this.chartDiv.style.height = a + \"px\"\n            }\n        }\n        return a\n    },\n    updateWidth: function() {\n        var a = this.divRealWidth,\n            b = this.divRealHeight,\n            c = this.legend;\n        if (c) {\n            var d = this.legendDiv,\n                e = d.offsetWidth;\n            isNaN(c.width) || (e = c.width);\n            var f = d.offsetHeight,\n                d = d.style,\n                g = this.chartDiv.style,\n                c = c.position;\n            if (\"right\" == c || \"left\" == c) {\n                a -= e;\n                if (0 > a || isNaN(a)) a = 0;\n                g.width = a + \"px\";\n                \"left\" == c ? g.left = e + \"px\" : d.left = a + \"px\";\n                b > f && (d.top = (b - f) / 2 + \"px\")\n            }\n        }\n        return a\n    },\n    getTitleHeight: function() {\n        var a =\n            0,\n            b = this.titles;\n        if (0 < b.length) {\n            var a = 15,\n                c;\n            for (c = 0; c < b.length; c++) {\n                var d = b[c].size;\n                isNaN(d) && (d = this.fontSize + 2);\n                a += d + 6\n            }\n        }\n        return a\n    },\n    addTitle: function(a, b, c, d, e) {\n        isNaN(b) && (b = this.fontSize + 2);\n        a = {\n            text: a,\n            size: b,\n            color: c,\n            alpha: d,\n            bold: e\n        };\n        this.titles.push(a);\n        return a\n    },\n    addMouseWheel: function() {\n        var a = this;\n        window.addEventListener && !a.wheelAdded && (window.addEventListener(\"DOMMouseScroll\", function(b) {\n            a.handleWheel.call(a, b)\n        }, !1), document.addEventListener(\"mousewheel\", function(b) {\n            a.handleWheel.call(a, b)\n        }, !1), a.wheelAdded = !0)\n    },\n    handleWheel: function(a) {\n        if (this.mouseIsOver) {\n            var b = 0;\n            a || (a = window.event);\n            a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);\n            b && this.handleWheelReal(b, a.shiftKey);\n            a.preventDefault && a.preventDefault()\n        }\n    },\n    handleWheelReal: function(a) {},\n    addListeners: function() {\n        var a = this,\n            b = a.chartDiv;\n        document.addEventListener ? (a.panEventsEnabled && (b.style.msTouchAction = \"none\", \"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function(b) {\n            a.handleTouchMove.call(a, b);\n            a.handleTouchStart.call(a,\n                b)\n        }, !0), b.addEventListener(\"touchmove\", function(b) {\n            a.handleTouchMove.call(a, b)\n        }, !0), b.addEventListener(\"touchend\", function(b) {\n            a.handleTouchEnd.call(a, b)\n        }, !0))), b.addEventListener(\"mousedown\", function(b) {\n            a.mouseIsOver = !0;\n            a.handleMouseMove.call(a, b);\n            a.handleMouseDown.call(a, b)\n        }, !0), b.addEventListener(\"mouseover\", function(b) {\n            a.handleMouseOver.call(a, b)\n        }, !0), b.addEventListener(\"mouseout\", function(b) {\n            a.handleMouseOut.call(a, b)\n        }, !0)) : (b.attachEvent(\"onmousedown\", function(b) {\n                a.handleMouseDown.call(a, b)\n            }),\n            b.attachEvent(\"onmouseover\", function(b) {\n                a.handleMouseOver.call(a, b)\n            }), b.attachEvent(\"onmouseout\", function(b) {\n                a.handleMouseOut.call(a, b)\n            }))\n    },\n    dispDUpd: function() {\n        var a;\n        this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, a = \"dataUpdated\", this.fire(a, {\n            type: a,\n            chart: this\n        }));\n        this.chartCreated || (a = \"init\", this.fire(a, {\n            type: a,\n            chart: this\n        }));\n        this.chartRendered || (a = \"rendered\", this.fire(a, {\n            type: a,\n            chart: this\n        }), this.chartRendered = !0);\n        a = \"drawn\";\n        this.fire(a, {\n            type: a,\n            chart: this\n        })\n    },\n    validateSize: function() {\n        var a = this;\n        a.measure();\n        var b = a.legend;\n        if ((a.realWidth != a.previousWidth || a.realHeight != a.previousHeight) && 0 < a.realWidth && 0 < a.realHeight) {\n            a.sizeChanged = !0;\n            if (b) {\n                clearTimeout(a.legendInitTO);\n                var c = setTimeout(function() {\n                    b.invalidateSize()\n                }, 100);\n                a.timeOuts.push(c);\n                a.legendInitTO = c\n            }\n            a.marginsUpdated = \"xy\" != a.type ? !1 : !0;\n            clearTimeout(a.initTO);\n            c = setTimeout(function() {\n                a.initChart()\n            }, 150);\n            a.timeOuts.push(c);\n            a.initTO = c\n        }\n        a.renderFix();\n        b && b.renderFix()\n    },\n    invalidateSize: function() {\n        this.previousHeight = this.previousWidth = NaN;\n        this.invalidateSizeReal()\n    },\n    invalidateSizeReal: function() {\n        var a = this;\n        a.marginsUpdated = !1;\n        clearTimeout(a.validateTO);\n        var b = setTimeout(function() {\n            a.validateSize()\n        }, 5);\n        a.timeOuts.push(b);\n        a.validateTO = b\n    },\n    validateData: function(a) {\n        this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = \"xy\" != this.type ? !1 : !0, this.initChart(a))\n    },\n    validateNow: function() {\n        this.chartRendered = !1;\n        this.write(this.div)\n    },\n    showItem: function(a) {\n        a.hidden = !1;\n        this.initChart()\n    },\n    hideItem: function(a) {\n        a.hidden = !0;\n        this.initChart()\n    },\n    hideBalloon: function() {\n        var a = this;\n        clearInterval(a.hoverInt);\n        clearTimeout(a.balloonTO);\n        a.hoverInt = setTimeout(function() {\n            a.hideBalloonReal.call(a)\n        }, a.hideBalloonTime)\n    },\n    cleanChart: function() {},\n    hideBalloonReal: function() {\n        var a = this.balloon;\n        a && a.hide()\n    },\n    showBalloon: function(a, b, c, d, e) {\n        var f = this;\n        clearTimeout(f.balloonTO);\n        clearInterval(f.hoverInt);\n        f.balloonTO = setTimeout(function() {\n            f.showBalloonReal.call(f, a, b, c, d, e)\n        }, 1)\n    },\n    showBalloonReal: function(a, b, c, d, e) {\n        this.handleMouseMove();\n        var f = this.balloon;\n        f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(d, e), f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a))\n    },\n    handleTouchMove: function(a) {\n        this.hideBalloon();\n        var b = this.chartDiv;\n        a.touches && (a = a.touches.item(0), this.mouseX = a.pageX - AmCharts.findPosX(b), this.mouseY = a.pageY - AmCharts.findPosY(b))\n    },\n    handleMouseOver: function(a) {\n        AmCharts.resetMouseOver();\n        this.mouseIsOver = !0\n    },\n    handleMouseOut: function(a) {\n        AmCharts.resetMouseOver();\n        this.mouseIsOver = !1\n    },\n    handleMouseMove: function(a) {\n        if (this.mouseIsOver) {\n            var b = this.chartDiv;\n            a || (a = window.event);\n            var c, d;\n            if (a) {\n                this.posX = AmCharts.findPosX(b);\n                this.posY = AmCharts.findPosY(b);\n                switch (this.mouseMode) {\n                    case 1:\n                        c = a.clientX - this.posX;\n                        d = a.clientY - this.posY;\n                        if (!this.divIsFixed) {\n                            var b = document.body,\n                                e, f;\n                            b && (e = b.scrollLeft, y1 = b.scrollTop);\n                            if (b = document.documentElement) f = b.scrollLeft, y2 = b.scrollTop;\n                            e = Math.max(e, f);\n                            f = Math.max(y1, y2);\n                            c += e;\n                            d += f\n                        }\n                        break;\n                    case 0:\n                        this.divIsFixed ? (c = a.clientX - this.posX, d = a.clientY - this.posY) : (c = a.pageX - this.posX, d = a.pageY - this.posY)\n                }\n                a.touches && (a = a.touches.item(0),\n                    c = a.pageX - this.posX, d = a.pageY - this.posY);\n                this.mouseX = c - this.dmouseX;\n                this.mouseY = d - this.dmouseY\n            }\n        }\n    },\n    handleTouchStart: function(a) {\n        this.handleMouseDown(a)\n    },\n    handleTouchEnd: function(a) {\n        AmCharts.resetMouseOver();\n        this.handleReleaseOutside(a)\n    },\n    handleReleaseOutside: function(a) {},\n    handleMouseDown: function(a) {\n        AmCharts.resetMouseOver();\n        this.mouseIsOver = !0;\n        a && a.preventDefault && a.preventDefault()\n    },\n    addLegend: function(a, b) {\n        a = AmCharts.processObject(a, AmCharts.AmLegend, this.theme);\n        a.divId = b;\n        var c;\n        c = \"object\" != typeof b &&\n            b ? document.getElementById(b) : b;\n        this.legend = a;\n        a.chart = this;\n        c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv;\n        c = this.handleLegendEvent;\n        this.listenTo(a, \"showItem\", c);\n        this.listenTo(a, \"hideItem\", c);\n        this.listenTo(a, \"clickMarker\", c);\n        this.listenTo(a, \"rollOverItem\", c);\n        this.listenTo(a, \"rollOutItem\", c);\n        this.listenTo(a, \"rollOverMarker\", c);\n        this.listenTo(a, \"rollOutMarker\", c);\n        this.listenTo(a, \"clickLabel\", c);\n        return a\n    },\n    removeLegend: function() {\n        this.legend = void 0;\n        this.legendDiv.innerHTML = \"\"\n    },\n    handleResize: function() {\n        (AmCharts.isPercents(this.width) ||\n            AmCharts.isPercents(this.height)) && this.invalidateSizeReal();\n        this.renderFix()\n    },\n    renderFix: function() {\n        if (!AmCharts.VML) {\n            var a = this.container;\n            a && a.renderFix()\n        }\n    },\n    getSVG: function() {\n        if (AmCharts.hasSVG) return this.container\n    },\n    animate: function(a, b, c, d, e, f, g) {\n        a[\"an_\" + b] && AmCharts.removeFromArray(this.animations, a[\"an_\" + b]);\n        c = {\n            obj: a,\n            frame: 0,\n            attribute: b,\n            from: c,\n            to: d,\n            time: e,\n            effect: f,\n            suffix: g\n        };\n        a[\"an_\" + b] = c;\n        this.animations.push(c);\n        return c\n    },\n    setLegendData: function(a) {\n        var b = this.legend;\n        b && b.setData(a)\n    },\n    startInterval: function() {\n        var a =\n            this;\n        clearInterval(a.interval);\n        a.interval = setInterval(function() {\n            a.updateAnimations.call(a)\n        }, AmCharts.updateRate)\n    },\n    stopAnim: function(a) {\n        AmCharts.removeFromArray(this.animations, a)\n    },\n    updateAnimations: function() {\n        var a;\n        this.container && this.container.update();\n        for (a = this.animations.length - 1; 0 <= a; a--) {\n            var b = this.animations[a],\n                c = 1E3 * b.time / AmCharts.updateRate,\n                d = b.frame + 1,\n                e = b.obj,\n                f = b.attribute;\n            if (d <= c) {\n                b.frame++;\n                var g = Number(b.from),\n                    h = Number(b.to) - g,\n                    c = AmCharts[b.effect](0, d, g, h, c);\n                0 === h ? (this.animations.splice(a,\n                    1), e.node.style[f] = Number(b.to) + b.suffix) : e.node.style[f] = c + b.suffix\n            }\n            else e.node.style[f] = Number(b.to) + b.suffix, this.animations.splice(a, 1)\n        }\n    },\n    inIframe: function() {\n        try {\n            return window.self !== window.top\n        }\n        catch (a) {\n            return !0\n        }\n    },\n    brr: function() {\n        var a = window.location.hostname.split(\".\"),\n            b;\n        2 <= a.length && (b = a[a.length - 2] + \".\" + a[a.length - 1]);\n        this.amLink && (a = this.amLink.parentNode) && a.removeChild(this.amLink);\n        a = this.creditsPosition;\n        if (\"amcharts.com\" != b || !0 === this.inIframe()) {\n            var c = b = 0,\n                d = this.realWidth,\n                e = this.realHeight;\n            if (\"serial\" == this.type || \"xy\" == this.type) b = this.marginLeftReal, c = this.marginTopReal, d = b + this.plotAreaWidth, e = c + this.plotAreaHeight;\n            var f = \"http://www.amcharts.com/javascript-charts/\",\n                g = \"JavaScript charts\",\n                h = \"StockChart By GetFreakingRich\";\n            \"ammap\" == this.product && (f = \"http://www.ammap.com/javascript-maps/\", g = \"Interactive JavaScript maps\", h = \"JS map by amCharts\");\n            var k = document.createElement(\"a\"),\n                h = document.createTextNode(h);\n            k.setAttribute(\"href\", f);\n            k.setAttribute(\"title\", g);\n            k.appendChild(h);\n            this.chartDiv.appendChild(k);\n            this.amLink = k;\n            f = k.style;\n            f.position = \"absolute\";\n            f.textDecoration = \"none\";\n            f.color = this.color;\n            f.fontFamily = this.fontFamily;\n            f.fontSize = this.fontSize + \"px\";\n            f.opacity = .7;\n            f.display = \"block\";\n            var g = k.offsetWidth,\n                k = k.offsetHeight,\n                h = 5 + b,\n                l = c + 5;\n            \"bottom-left\" == a && (h = 5 + b, l = e - k - 3);\n            \"bottom-right\" == a && (h = d - g - 5, l = e - k - 3);\n            \"top-right\" == a && (h = d - g - 5, l = c + 5);\n            f.left = h + \"px\";\n            f.top = l + \"px\"\n        }\n    }\n});\nAmCharts.Slice = AmCharts.Class({\n    construct: function() {}\n});\nAmCharts.SerialDataItem = AmCharts.Class({\n    construct: function() {}\n});\nAmCharts.GraphDataItem = AmCharts.Class({\n    construct: function() {}\n});\nAmCharts.Guide = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"Guide\";\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.AmGraph = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"AmGraph\";\n        this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\");\n        this.type = \"line\";\n        this.stackable = !0;\n        this.columnCount = 1;\n        this.columnIndex = 0;\n        this.centerCustomBullets = this.showBalloon = !0;\n        this.maxBulletSize = 50;\n        this.minBulletSize = 4;\n        this.balloonText = \"[[value]]\";\n        this.hidden = this.scrollbar = this.animationPlayed = !1;\n        this.pointPosition = \"middle\";\n        this.depthCount = 1;\n        this.includeInMinMax = !0;\n        this.negativeBase = 0;\n        this.visibleInLegend = !0;\n        this.showAllValueLabels = !1;\n        this.showBulletsAt = this.showBalloonAt = \"close\";\n        this.lineThickness = 1;\n        this.dashLength = 0;\n        this.connect = !0;\n        this.lineAlpha = 1;\n        this.bullet = \"none\";\n        this.bulletBorderThickness = 2;\n        this.bulletBorderAlpha = 0;\n        this.bulletAlpha = 1;\n        this.bulletSize = 8;\n        this.hideBulletsCount = this.bulletOffset = 0;\n        this.labelPosition = \"top\";\n        this.cornerRadiusTop = 0;\n        this.cursorBulletAlpha = 1;\n        this.gradientOrientation = \"vertical\";\n        this.dy = this.dx =\n            0;\n        this.periodValue = \"\";\n        this.clustered = !0;\n        this.periodSpan = 1;\n        this.y = this.x = 0;\n        this.switchable = !0;\n        this.tcc = this.minDistance = 1;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    draw: function() {\n        var a = this.chart;\n        isNaN(this.precision) || (this.numberFormatter ? this.numberFormatter.precision = this.precision : this.numberFormatter = {\n            precision: this.precision,\n            decimalSeparator: a.decimalSeparator,\n            thousandsSeparator: a.thousandsSeparator\n        });\n        var b = a.container;\n        this.container = b;\n        this.destroy();\n        var c = b.set(),\n            d = b.set();\n        this.behindColumns ?\n            (a.graphsBehindSet.push(c), a.bulletBehindSet.push(d)) : (a.graphsSet.push(c), a.bulletSet.push(d));\n        var e = this.bulletAxis;\n        AmCharts.isString(e) && (this.bulletAxis = a.getValueAxisById(e));\n        this.bulletSet = d;\n        this.scrollbar || (e = a.marginLeftReal, a = a.marginTopReal, c.translate(e, a), d.translate(e, a));\n        b = b.set();\n        AmCharts.remove(this.columnsSet);\n        c.push(b);\n        this.set = c;\n        this.columnsSet = b;\n        this.columnsArray = [];\n        this.ownColumns = [];\n        this.allBullets = [];\n        this.animationArray = [];\n        AmCharts.ifArray(this.data) && (c = !1, \"xy\" == this.chart.type ?\n            this.xAxis.axisCreated && this.yAxis.axisCreated && (c = !0) : this.valueAxis.axisCreated && (c = !0), !this.hidden && c && this.createGraph())\n    },\n    createGraph: function() {\n        var a = this,\n            b = a.chart;\n        \"inside\" == a.labelPosition && \"column\" != a.type && (a.labelPosition = \"bottom\");\n        a.startAlpha = b.startAlpha;\n        a.seqAn = b.sequencedAnimation;\n        a.baseCoord = a.valueAxis.baseCoord;\n        void 0 === a.fillAlphas && (a.fillAlphas = 0);\n        a.bulletColorR = a.bulletColor;\n        void 0 === a.bulletColorR && (a.bulletColorR = a.lineColorR, a.bulletColorNegative = a.negativeLineColor);\n        void 0 ===\n            a.bulletAlpha && (a.bulletAlpha = a.lineAlpha);\n        clearTimeout(a.playedTO);\n        if (!isNaN(a.valueAxis.min) && !isNaN(a.valueAxis.max)) {\n            switch (b.type) {\n                case \"serial\":\n                    a.categoryAxis && (a.createSerialGraph(), \"candlestick\" == a.type && 1 > a.valueAxis.minMaxMultiplier && a.positiveClip(a.set));\n                    break;\n                case \"radar\":\n                    a.createRadarGraph();\n                    break;\n                case \"xy\":\n                    a.createXYGraph(), a.positiveClip(a.set)\n            }\n            a.playedTO = setTimeout(function() {\n                a.setAnimationPlayed.call(a)\n            }, 500 * a.chart.startDuration)\n        }\n    },\n    setAnimationPlayed: function() {\n        this.animationPlayed = !0\n    },\n    createXYGraph: function() {\n        var a = [],\n            b = [],\n            c = this.xAxis,\n            d = this.yAxis;\n        this.pmh = d.viH + 1;\n        this.pmw = c.viW + 1;\n        this.pmy = this.pmx = 0;\n        var e;\n        for (e = this.start; e <= this.end; e++) {\n            var f = this.data[e].axes[c.id].graphs[this.id],\n                g = f.values,\n                h = g.x,\n                k = g.y,\n                g = c.getCoordinate(h),\n                l = d.getCoordinate(k);\n            !isNaN(h) && !isNaN(k) && (a.push(g), b.push(l), (h = this.createBullet(f, g, l, e)) || (h = 0), k = this.labelText) && (f = this.createLabel(f, g, l, k), this.allBullets.push(f), this.positionLabel(g, l, f, this.labelPosition, h))\n        }\n        this.drawLineGraph(a, b);\n        this.launchAnimation()\n    },\n    createRadarGraph: function() {\n        var a = this.valueAxis.stackType,\n            b = [],\n            c = [],\n            d, e, f;\n        for (f = this.start; f <= this.end; f++) {\n            var g = this.data[f].axes[this.valueAxis.id].graphs[this.id],\n                h;\n            h = \"none\" == a || \"3d\" == a ? g.values.value : g.values.close;\n            if (isNaN(h)) this.drawLineGraph(b, c), b = [], c = [];\n            else {\n                var k = this.y - (this.valueAxis.getCoordinate(h) - this.height),\n                    l = 180 - 360 / (this.end - this.start + 1) * f;\n                h = k * Math.sin(l / 180 * Math.PI);\n                k *= Math.cos(l / 180 * Math.PI);\n                b.push(h);\n                c.push(k);\n                (l = this.createBullet(g, h, k, f)) || (l = 0);\n                var m = this.labelText;\n                m && (g = this.createLabel(g, h, k, m), this.allBullets.push(g), this.positionLabel(h, k, g, this.labelPosition, l));\n                isNaN(d) && (d = h);\n                isNaN(e) && (e = k)\n            }\n        }\n        b.push(d);\n        c.push(e);\n        this.drawLineGraph(b, c);\n        this.launchAnimation()\n    },\n    positionLabel: function(a, b, c, d, e) {\n        var f = c.getBBox();\n        switch (d) {\n            case \"left\":\n                a -= (f.width + e) / 2 + 2;\n                break;\n            case \"top\":\n                b -= (e + f.height) / 2 + 1;\n                break;\n            case \"right\":\n                a += (f.width + e) / 2 + 2;\n                break;\n            case \"bottom\":\n                b += (e + f.height) / 2 + 1\n        }\n        c.translate(a, b)\n    },\n    getGradRotation: function() {\n        var a = 270;\n        \"horizontal\" == this.gradientOrientation &&\n            (a = 0);\n        return this.gradientRotation = a\n    },\n    createSerialGraph: function() {\n        this.dashLengthSwitched = this.fillColorsSwitched = this.lineColorSwitched = void 0;\n        var a = this.chart,\n            b = this.id,\n            c = this.index,\n            d = this.data,\n            e = this.chart.container,\n            f = this.valueAxis,\n            g = this.type,\n            h = this.columnWidthReal,\n            k = this.showBulletsAt;\n        isNaN(this.columnWidth) || (h = this.columnWidth);\n        isNaN(h) && (h = .8);\n        var l = this.useNegativeColorIfDown,\n            m = this.width,\n            n = this.height,\n            p = this.y,\n            q = this.rotate,\n            r = this.columnCount,\n            s = AmCharts.toCoordinate(this.cornerRadiusTop,\n                h / 2),\n            w = this.connect,\n            v = [],\n            t = [],\n            u, x, E, A, z = this.chart.graphs.length,\n            H, F = this.dx / this.tcc,\n            G = this.dy / this.tcc,\n            V = f.stackType,\n            N = this.labelPosition,\n            ia = this.start,\n            da = this.end,\n            ba = this.scrollbar,\n            Sa = this.categoryAxis,\n            na = this.baseCoord,\n            ta = this.negativeBase,\n            L = this.columnIndex,\n            Y = this.lineThickness,\n            $ = this.lineAlpha,\n            oa = this.lineColorR,\n            W = this.dashLength,\n            Z = this.set,\n            pa, I = N,\n            D = this.getGradRotation(),\n            aa = this.chart.columnSpacing,\n            S = Sa.cellWidth,\n            Ta = (S * h - r) / r;\n        aa > Ta && (aa = Ta);\n        var T, y, bb, kb = n + 1,\n            lb = m + 1,\n            cb = 0,\n            mb = 0,\n            nb, ob, db, eb, pb =\n            this.fillColorsR,\n            Da = this.negativeFillColors,\n            wa = this.negativeLineColor,\n            Ua = this.fillAlphas,\n            Va = this.negativeFillAlphas;\n        \"object\" == typeof Ua && (Ua = Ua[0]);\n        \"object\" == typeof Va && (Va = Va[0]);\n        var fb = f.getCoordinate(f.min);\n        f.logarithmic && (fb = f.getCoordinate(f.minReal));\n        this.minCoord = fb;\n        this.resetBullet && (this.bullet = \"none\");\n        if (!(ba || \"line\" != g && \"smoothedLine\" != g && \"step\" != g || (1 == d.length && \"step\" != g && \"none\" == this.bullet && (this.bullet = \"round\", this.resetBullet = !0), !Da && void 0 == wa || l))) {\n            var Na = ta;\n            Na > f.max && (Na = f.max);\n            Na < f.min && (Na = f.min);\n            f.logarithmic && (Na = f.minReal);\n            var Aa = f.getCoordinate(Na),\n                Hb = f.getCoordinate(f.max);\n            q ? (kb = n, lb = Math.abs(Hb - Aa), nb = n, ob = Math.abs(fb - Aa), eb = mb = 0, f.reversed ? (cb = 0, db = Aa) : (cb = Aa, db = 0)) : (lb = m, kb = Math.abs(Hb - Aa), ob = m, nb = Math.abs(fb - Aa), db = cb = 0, f.reversed ? (eb = p, mb = Aa) : eb = Aa + 1)\n        }\n        var Ba = Math.round;\n        this.pmx = Ba(cb);\n        this.pmy = Ba(mb);\n        this.pmh = Ba(kb);\n        this.pmw = Ba(lb);\n        this.nmx = Ba(db);\n        this.nmy = Ba(eb);\n        this.nmh = Ba(nb);\n        this.nmw = Ba(ob);\n        AmCharts.isModern || (this.nmy = this.nmx = 0, this.nmh = this.height);\n        this.clustered ||\n            (r = 1);\n        h = \"column\" == g ? (S * h - aa * (r - 1)) / r : S * h;\n        1 > h && (h = 1);\n        var J;\n        if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) {\n            if (0 < ia) {\n                for (J = ia - 1; - 1 < J; J--)\n                    if (T = d[J], y = T.axes[f.id].graphs[b], bb = y.values.value, !isNaN(bb)) {\n                        ia = J;\n                        break\n                    }\n                if (this.lineColorField)\n                    for (J = ia; - 1 < J; J--)\n                        if (T = d[J], y = T.axes[f.id].graphs[b], y.lineColor) {\n                            this.bulletColorSwitched = this.lineColorSwitched = y.lineColor;\n                            break\n                        }\n                if (this.fillColorsField)\n                    for (J = ia; - 1 < J; J--)\n                        if (T = d[J], y = T.axes[f.id].graphs[b], y.fillColors) {\n                            this.fillColorsSwitched = y.fillColors;\n                            break\n                        }\n                if (this.dashLengthField)\n                    for (J =\n                        ia; - 1 < J; J--)\n                        if (T = d[J], y = T.axes[f.id].graphs[b], !isNaN(y.dashLength)) {\n                            this.dashLengthSwitched = y.dashLength;\n                            break\n                        }\n            }\n            if (da < d.length - 1)\n                for (J = da + 1; J < d.length; J++)\n                    if (T = d[J], y = T.axes[f.id].graphs[b], bb = y.values.value, !isNaN(bb)) {\n                        da = J;\n                        break\n                    }\n        }\n        da < d.length - 1 && da++;\n        var O = [],\n            P = [],\n            Ea = !1;\n        if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g)\n            if (this.stackable && \"regular\" == V || \"100%\" == V || this.fillToGraph) Ea = !0;\n        var Ib = this.noStepRisers,\n            gb = -1E3,\n            hb = -1E3,\n            ib = this.minDistance,\n            Fa = !0,\n            Wa = !1;\n        for (J = ia; J <= da; J++) {\n            T = d[J];\n            y = T.axes[f.id].graphs[b];\n            y.index = J;\n            var Xa, Ga = NaN;\n            if (l && void 0 == this.openField)\n                for (var qb = J + 1; qb < d.length && (!d[qb] || !(Xa = d[J + 1].axes[f.id].graphs[b]) || !Xa.values || (Ga = Xa.values.value, isNaN(Ga))); qb++);\n            var X, Q, R, ea, la = NaN,\n                C = NaN,\n                B = NaN,\n                M = NaN,\n                K = NaN,\n                Ha = NaN,\n                xa = NaN,\n                Ia = NaN,\n                ya = NaN,\n                ca = NaN,\n                ja = NaN,\n                fa = NaN,\n                ga = NaN,\n                U = NaN,\n                rb = NaN,\n                sb = NaN,\n                ka = NaN,\n                ra = void 0,\n                Ca = pb,\n                Oa = Ua,\n                ua = oa,\n                qa, sa, tb = this.proCandlesticks,\n                Ya = this.pattern;\n            void 0 != y.pattern && (Ya = y.pattern);\n            void 0 != y.color && (Ca = y.color);\n            y.fillColors && (Ca = y.fillColors);\n            isNaN(y.alpha) || (Oa = y.alpha);\n            isNaN(y.dashLength) || (W = y.dashLength);\n            var va = y.values;\n            f.recalculateToPercents && (va = y.percents);\n            if (va) {\n                U = this.stackable && \"none\" != V && \"3d\" != V ? va.close : va.value;\n                if (\"candlestick\" == g || \"ohlc\" == g) U = va.close, sb = va.low, xa = f.getCoordinate(sb), rb = va.high, ya = f.getCoordinate(rb);\n                ka = va.open;\n                B = f.getCoordinate(U);\n                isNaN(ka) || (K = f.getCoordinate(ka), l && (Ga = ka, ka = K = NaN));\n                l && (void 0 == this.openField ? Xa && (Xa.isNegative = Ga < U ? !0 : !1, isNaN(Ga) && (y.isNegative = !Fa)) : y.isNegative = Ga > U ? !0 : !1);\n                if (!ba) switch (this.showBalloonAt) {\n                    case \"close\":\n                        y.y =\n                            B;\n                        break;\n                    case \"open\":\n                        y.y = K;\n                        break;\n                    case \"high\":\n                        y.y = ya;\n                        break;\n                    case \"low\":\n                        y.y = xa\n                }\n                var la = T.x[Sa.id],\n                    Pa = this.periodSpan - 1,\n                    ma = Math.floor(S / 2) + Math.floor(Pa * S / 2),\n                    za = ma,\n                    Jb = 0;\n                \"left\" == this.stepDirection && (Jb = (2 * S + Pa * S) / 2, la -= Jb);\n                \"start\" == this.pointPosition && (la -= S / 2 + Math.floor(Pa * S / 2), ma = 0, za = Math.floor(S) + Math.floor(Pa * S));\n                \"end\" == this.pointPosition && (la += S / 2 + Math.floor(Pa * S / 2), ma = Math.floor(S) + Math.floor(Pa * S), za = 0);\n                if (Ib) {\n                    var ub = this.columnWidth;\n                    isNaN(ub) || (ma *= ub, za *= ub)\n                }\n                ba || (y.x = la); - 1E5 > la && (la = -1E5);\n                la >\n                    m + 1E5 && (la = m + 1E5);\n                q ? (C = B, M = K, K = B = la, isNaN(ka) && !this.fillToGraph && (M = na), Ha = xa, Ia = ya) : (M = C = la, isNaN(ka) && !this.fillToGraph && (K = na));\n                if (!tb && U < ka || tb && U < pa) y.isNegative = !0, Da && (Ca = Da), Va && (Oa = Va), void 0 != wa && (ua = wa);\n                Wa = !1;\n                isNaN(U) || (l ? U > Ga ? (Fa && (Wa = !0), Fa = !1) : (Fa || (Wa = !0), Fa = !0) : y.isNegative = U < ta ? !0 : !1, pa = U);\n                switch (g) {\n                    case \"line\":\n                        if (isNaN(U)) w || (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = []);\n                        else {\n                            if (Math.abs(C - gb) >= ib || Math.abs(B - hb) >= ib) v.push(C), t.push(B), gb = C, hb = B;\n                            ca = C;\n                            ja = B;\n                            fa = C;\n                            ga = B;\n                            !Ea || isNaN(K) ||\n                                isNaN(M) || (O.push(M), P.push(K));\n                            if (Wa || void 0 != y.lineColor || void 0 != y.fillColors || !isNaN(y.dashLength)) this.drawLineGraph(v, t, O, P), v = [C], t = [B], O = [], P = [], !Ea || isNaN(K) || isNaN(M) || (O.push(M), P.push(K)), l ? Fa ? (this.lineColorSwitched = oa, this.fillColorsSwitched = pb) : (this.lineColorSwitched = wa, this.fillColorsSwitched = Da) : (this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors), this.dashLengthSwitched = y.dashLength;\n                            y.gap && (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = [])\n                        }\n                        break;\n                    case \"smoothedLine\":\n                        if (isNaN(U)) w ||\n                            (this.drawSmoothedGraph(v, t, O, P), v = [], t = [], O = [], P = []);\n                        else {\n                            if (Math.abs(C - gb) >= ib || Math.abs(B - hb) >= ib) v.push(C), t.push(B), gb = C, hb = B;\n                            ca = C;\n                            ja = B;\n                            fa = C;\n                            ga = B;\n                            !Ea || isNaN(K) || isNaN(M) || (O.push(M), P.push(K));\n                            void 0 == y.lineColor && void 0 == y.fillColors && isNaN(y.dashLength) || (this.drawSmoothedGraph(v, t, O, P), v = [C], t = [B], O = [], P = [], !Ea || isNaN(K) || isNaN(M) || (O.push(M), P.push(K)), this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors, this.dashLengthSwitched = y.dashLength);\n                            y.gap && (this.drawSmoothedGraph(v,\n                                t, O, P), v = [], t = [], O = [], P = [])\n                        }\n                        break;\n                    case \"step\":\n                        if (!isNaN(U)) {\n                            if (void 0 == y.lineColor && void 0 == y.fillColors && isNaN(y.dashLength) || (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = [], this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors, this.dashLengthSwitched = y.dashLength), q ? (isNaN(u) || (v.push(u), t.push(B - ma)), t.push(B - ma), v.push(C), t.push(B + za), v.push(C), !Ea || isNaN(K) || isNaN(M) || (O.push(E), P.push(K - ma), O.push(M), P.push(K - ma), O.push(M), P.push(K + za))) : (isNaN(x) || (t.push(x), v.push(u), t.push(x),\n                                v.push(C - ma)), v.push(C - ma), t.push(B), v.push(C + za), t.push(B), !Ea || isNaN(K) || isNaN(M) || (O.push(M - ma), P.push(A), O.push(M - ma), P.push(K), O.push(M + za), P.push(K))), u = C, x = B, E = M, A = K, ca = C, ja = B, fa = C, ga = B, Wa && (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = [], l && (Fa ? (this.lineColorSwitched = oa, this.fillColorsSwitched = pb) : (this.lineColorSwitched = wa, this.fillColorsSwitched = Da))), Ib || y.gap) u = x = NaN, this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = []\n                        }\n                        else if (!w) {\n                            if (1 >= this.periodSpan || 1 < this.periodSpan && C - u > ma + za) u = x = NaN;\n                            this.drawLineGraph(v, t, O, P);\n                            v = [];\n                            t = [];\n                            O = [];\n                            P = []\n                        }\n                        break;\n                    case \"column\":\n                        qa = ua;\n                        void 0 != y.lineColor && (qa = y.lineColor);\n                        var Kb = this.topRadius;\n                        if (!isNaN(U)) {\n                            l || (y.isNegative = U < ta ? !0 : !1);\n                            y.isNegative && (Da && (Ca = Da), void 0 != wa && (qa = wa));\n                            var Lb = f.min,\n                                Mb = f.max;\n                            if (!(U < Lb && ka < Lb || U > Mb && ka > Mb))\n                                if (q) {\n                                    \"3d\" == V ? (Q = B - (r / 2 - this.depthCount + 1) * (h + aa) + aa / 2 + G * L, X = M + F * L) : (Q = Math.floor(B - (r / 2 - L) * (h + aa) + aa / 2), X = M);\n                                    R = h;\n                                    ca = C;\n                                    ja = Q + h / 2;\n                                    fa = C;\n                                    ga = Q + h / 2;\n                                    Q + R > n + L * G && (R = n - Q + L * G);\n                                    Q < L * G && (R += Q, Q = L * G);\n                                    ea = C - M;\n                                    var Yb = X;\n                                    X = AmCharts.fitToBounds(X,\n                                        0, m);\n                                    ea += Yb - X;\n                                    ea = AmCharts.fitToBounds(ea, -X, m - X + F * L);\n                                    Q < n && 0 < R && (ra = new AmCharts.Cuboid(e, ea, R, F - a.d3x, G - a.d3y, Ca, Oa, Y, qa, $, D, s, q, W, Ya, Kb), \"bottom\" != N && \"inside\" != N && \"middle\" != N && (N = f.reversed ? \"left\" : \"right\", 0 > U && (N = f.reversed ? \"right\" : \"left\")), \"regular\" == V || \"100%\" == V) && (ca += this.dx)\n                                }\n                                else {\n                                    \"3d\" == V ? (X = C - (r / 2 - this.depthCount + 1) * (h + aa) + aa / 2 + F * L, Q = K + G * L) : (X = C - (r / 2 - L) * (h + aa) + aa / 2, Q = K);\n                                    R = h;\n                                    ca = X + h / 2;\n                                    ja = B;\n                                    fa = X + h / 2;\n                                    ga = B;\n                                    X + R > m + L * F && (R = m - X + L * F);\n                                    X < L * F && (R += X - L * F, X = L * F);\n                                    ea = B - K;\n                                    var Zb = Q;\n                                    Q = AmCharts.fitToBounds(Q, this.dy,\n                                        n);\n                                    ea += Zb - Q;\n                                    ea = AmCharts.fitToBounds(ea, -Q + G * L, n - Q);\n                                    if (X < m + L * F && 0 < R)\n                                        if (this.showOnAxis && (Q -= G / 2), ra = new AmCharts.Cuboid(e, R, ea, F - a.d3x, G - a.d3y, Ca, Oa, Y, qa, this.lineAlpha, D, s, q, W, Ya, Kb), 0 > U && \"middle\" != N && \"inside\" != N) N = \"bottom\";\n                                        else if (N = I, \"regular\" == V || \"100%\" == V) ja += this.dy\n                                }\n                            if (ra && (sa = ra.set, y.columnGraphics = sa, sa.translate(X, Q), this.columnsSet.push(sa), (y.url || this.showHandOnHover) && sa.setAttr(\"cursor\", \"pointer\"), !ba)) {\n                                \"none\" == V && (H = q ? (this.end + 1 - J) * z - c : z * J + c);\n                                \"3d\" == V && (q ? (H = (this.end + 1 - J) * z - c - 1E3 *\n                                    this.depthCount, ca += F * this.columnIndex, fa += F * this.columnIndex, y.y += F * this.columnIndex) : (H = (z - c) * (J + 1) + 1E3 * this.depthCount, ca += 3, ja += G * this.columnIndex + 7, ga += G * this.columnIndex, y.y += G * this.columnIndex));\n                                if (\"regular\" == V || \"100%\" == V) \"inside\" != N && (N = \"middle\"), H = q ? 0 < va.value ? (this.end + 1 - J) * z + c : (this.end + 1 - J) * z - c : 0 < va.value ? z * J + c : z * J - c;\n                                this.columnsArray.push({\n                                    column: ra,\n                                    depth: H\n                                });\n                                y.x = q ? Q + R / 2 : X + R / 2;\n                                this.ownColumns.push(ra);\n                                this.animateColumns(ra, J, C, M, B, K);\n                                this.addListeners(sa, y)\n                            }\n                        }\n                        break;\n                    case \"candlestick\":\n                        if (!isNaN(ka) &&\n                            !isNaN(U)) {\n                            var jb, vb;\n                            qa = ua;\n                            void 0 != y.lineColor && (qa = y.lineColor);\n                            if (q) {\n                                if (Q = B - h / 2, X = M, R = h, Q + R > n && (R = n - Q), 0 > Q && (R += Q, Q = 0), Q < n && 0 < R) {\n                                    var wb, xb;\n                                    U > ka ? (wb = [C, Ia], xb = [M, Ha]) : (wb = [M, Ia], xb = [C, Ha]);\n                                    !isNaN(Ia) && !isNaN(Ha) && B < n && 0 < B && (jb = AmCharts.line(e, wb, [B, B], qa, $, Y), vb = AmCharts.line(e, xb, [B, B], qa, $, Y));\n                                    ea = C - M;\n                                    ra = new AmCharts.Cuboid(e, ea, R, F, G, Ca, Ua, Y, qa, $, D, s, q, W, Ya)\n                                }\n                            }\n                            else if (X = C - h / 2, Q = K + Y / 2, R = h, X + R > m && (R = m - X), 0 > X && (R += X, X = 0), ea = B - K, X < m && 0 < R) {\n                                tb && U >= ka && (Oa = 0);\n                                var ra = new AmCharts.Cuboid(e, R, ea, F, G, Ca, Oa,\n                                        Y, qa, $, D, s, q, W, Ya),\n                                    yb, zb;\n                                U > ka ? (yb = [B, ya], zb = [K, xa]) : (yb = [K, ya], zb = [B, xa]);\n                                !isNaN(ya) && !isNaN(xa) && C < m && 0 < C && (jb = AmCharts.line(e, [C, C], yb, qa, $, Y), vb = AmCharts.line(e, [C, C], zb, qa, $, Y))\n                            }\n                            ra && (sa = ra.set, y.columnGraphics = sa, Z.push(sa), sa.translate(X, Q - Y / 2), (y.url || this.showHandOnHover) && sa.setAttr(\"cursor\", \"pointer\"), jb && (Z.push(jb), Z.push(vb)), ca = C, ja = B, q ? (ga = B, fa = C, \"open\" == k && (fa = M), \"high\" == k && (fa = Ia), \"low\" == k && (fa = Ha)) : (ga = B, \"open\" == k && (ga = K), \"high\" == k && (ga = ya), \"low\" == k && (ga = xa), fa = C), ba || (y.x = q ? Q + R /\n                                2 : X + R / 2, this.animateColumns(ra, J, C, M, B, K), this.addListeners(sa, y)))\n                        }\n                        break;\n                    case \"ohlc\":\n                        if (!(isNaN(ka) || isNaN(rb) || isNaN(sb) || isNaN(U))) {\n                            U < ka && (y.isNegative = !0, void 0 != wa && (ua = wa));\n                            var Ab, Bb, Cb;\n                            if (q) {\n                                var Db = B - h / 2,\n                                    Db = AmCharts.fitToBounds(Db, 0, n),\n                                    Nb = AmCharts.fitToBounds(B, 0, n),\n                                    Eb = B + h / 2,\n                                    Eb = AmCharts.fitToBounds(Eb, 0, n);\n                                Bb = AmCharts.line(e, [M, M], [Db, Nb], ua, $, Y, W);\n                                0 < B && B < n && (Ab = AmCharts.line(e, [Ha, Ia], [B, B], ua, $, Y, W));\n                                Cb = AmCharts.line(e, [C, C], [Nb, Eb], ua, $, Y, W);\n                                ga = B;\n                                fa = C;\n                                \"open\" == k && (fa = M);\n                                \"high\" == k && (fa = Ia);\n                                \"low\" == k && (fa = Ha)\n                            }\n                            else {\n                                var Fb = C - h / 2,\n                                    Fb = AmCharts.fitToBounds(Fb, 0, m),\n                                    Ob = AmCharts.fitToBounds(C, 0, m),\n                                    Gb = C + h / 2,\n                                    Gb = AmCharts.fitToBounds(Gb, 0, m);\n                                Bb = AmCharts.line(e, [Fb, Ob], [K, K], ua, $, Y, W);\n                                0 < C && C < m && (Ab = AmCharts.line(e, [C, C], [xa, ya], ua, $, Y, W));\n                                Cb = AmCharts.line(e, [Ob, Gb], [B, B], ua, $, Y, W);\n                                ga = B;\n                                \"open\" == k && (ga = K);\n                                \"high\" == k && (ga = ya);\n                                \"low\" == k && (ga = xa);\n                                fa = C\n                            }\n                            Z.push(Bb);\n                            Z.push(Ab);\n                            Z.push(Cb);\n                            ca = C;\n                            ja = B\n                        }\n                }\n                if (!ba && !isNaN(U)) {\n                    var Pb = this.hideBulletsCount;\n                    if (this.end - this.start <= Pb || 0 === Pb) {\n                        var Ja = this.createBullet(y,\n                            fa, ga, J);\n                        Ja || (Ja = 0);\n                        var Qb = this.labelText;\n                        if (Qb) {\n                            var ha = this.createLabel(y, 0, 0, Qb),\n                                Ka = 0,\n                                La = 0,\n                                Rb = ha.getBBox(),\n                                Qa = Rb.width,\n                                Ma = Rb.height;\n                            switch (N) {\n                                case \"left\":\n                                    Ka = -(Qa / 2 + Ja / 2 + 3);\n                                    break;\n                                case \"top\":\n                                    La = -(Ma / 2 + Ja / 2 + 3);\n                                    break;\n                                case \"right\":\n                                    Ka = Ja / 2 + 2 + Qa / 2;\n                                    break;\n                                case \"bottom\":\n                                    q && \"column\" == g ? (ca = na, 0 > U || 0 < U && f.reversed ? (Ka = -6, ha.attr({\n                                        \"text-anchor\": \"end\"\n                                    })) : (Ka = 6, ha.attr({\n                                        \"text-anchor\": \"start\"\n                                    }))) : (La = Ja / 2 + Ma / 2, ha.x = -(Qa / 2 + 2));\n                                    break;\n                                case \"middle\":\n                                    \"column\" == g && (q ? (La = -(Ma / 2) + this.fontSize / 2, Ka = -(C - M) / 2 - F, Math.abs(C -\n                                        M) < Qa && !this.showAllValueLabels && (ha.remove(), ha = null)) : (La = -(B - K) / 2 - G, Math.abs(B - K) < Ma && !this.showAllValueLabels && (ha.remove(), ha = null)));\n                                    break;\n                                case \"inside\":\n                                    q ? (La = -(Ma / 2) + this.fontSize / 2, Ka = 0 > ea ? Qa / 2 + 6 : -Qa / 2 - 6) : La = 0 > ea ? Ma : -Ma\n                            }\n                            if (ha) {\n                                if (isNaN(ja) || isNaN(ca)) ha.remove(), ha = null;\n                                else if (ca += Ka, ja += La, ha.translate(ca, ja), q) {\n                                    if (0 > ja || ja > n) ha.remove(), ha = null\n                                }\n                                else {\n                                    var Sb = 0;\n                                    \"3d\" == V && (Sb = F * L);\n                                    if (0 > ca || ca > m + Sb) ha.remove(), ha = null\n                                }\n                                ha && this.allBullets.push(ha)\n                            }\n                        }\n                        if (\"regular\" == V || \"100%\" == V) {\n                            var Tb = f.totalText;\n                            if (Tb) {\n                                var Ra = this.createLabel(y, 0, 0, Tb, f.totalTextColor);\n                                this.allBullets.push(Ra);\n                                var Ub = Ra.getBBox(),\n                                    Vb = Ub.width,\n                                    Wb = Ub.height,\n                                    Za, $a, Xb = f.totals[J];\n                                Xb && Xb.remove();\n                                var ab = 0;\n                                \"column\" != g && (ab = Ja);\n                                q ? ($a = B, Za = 0 > U ? C - Vb / 2 - 2 - ab : C + Vb / 2 + 3 + ab) : (Za = C, $a = 0 > U ? B + Wb / 2 + ab : B - Wb / 2 - 3 - ab);\n                                Ra.translate(Za, $a);\n                                f.totals[J] = Ra;\n                                q ? (0 > $a || $a > n) && Ra.remove() : (0 > Za || Za > m) && Ra.remove()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) \"smoothedLine\" == g ? this.drawSmoothedGraph(v, t, O, P) : this.drawLineGraph(v, t, O, P), ba || this.launchAnimation();\n        this.bulletsHidden && this.hideBullets()\n    },\n    animateColumns: function(a, b, c, d, e, f) {\n        var g = this;\n        c = g.chart.startDuration;\n        0 < c && !g.animationPlayed && (g.seqAn ? (a.set.hide(), g.animationArray.push(a), a = setTimeout(function() {\n            g.animate.call(g)\n        }, c / (g.end - g.start + 1) * (b - g.start) * 1E3), g.timeOuts.push(a)) : g.animate(a))\n    },\n    createLabel: function(a, b, c, d, e) {\n        var f = this.chart,\n            g = a.labelColor;\n        g || (g = this.color);\n        g || (g = f.color);\n        e && (g = e);\n        e = this.fontSize;\n        void 0 === e && (this.fontSize = e = f.fontSize);\n        var h = this.labelFunction;\n        d = f.formatString(d,\n            a);\n        d = AmCharts.cleanFromEmpty(d);\n        h && (d = h(a, d));\n        a = AmCharts.text(this.container, d, g, f.fontFamily, e);\n        a.node.style.pointerEvents = \"none\";\n        a.translate(b, c);\n        this.bulletSet.push(a);\n        return a\n    },\n    positiveClip: function(a) {\n        a.clipRect(this.pmx, this.pmy, this.pmw, this.pmh)\n    },\n    negativeClip: function(a) {\n        a.clipRect(this.nmx, this.nmy, this.nmw, this.nmh)\n    },\n    drawLineGraph: function(a, b, c, d) {\n        var e = this;\n        if (1 < a.length) {\n            var f = e.set,\n                g = e.chart,\n                h = e.container,\n                k = h.set(),\n                l = h.set();\n            f.push(l);\n            f.push(k);\n            var m = e.lineAlpha,\n                n = e.lineThickness,\n                f =\n                e.fillAlphas,\n                p = e.lineColorR,\n                q = e.negativeLineAlpha;\n            isNaN(q) && (q = m);\n            var r = e.lineColorSwitched;\n            r && (p = r);\n            var r = e.fillColorsR,\n                s = e.fillColorsSwitched;\n            s && (r = s);\n            var w = e.dashLength;\n            (s = e.dashLengthSwitched) && (w = s);\n            var s = e.negativeLineColor,\n                v = e.negativeFillColors,\n                t = e.negativeFillAlphas,\n                u = e.baseCoord;\n            0 !== e.negativeBase && (u = e.valueAxis.getCoordinate(e.negativeBase));\n            m = AmCharts.line(h, a, b, p, m, n, w, !1, !0);\n            k.push(m);\n            k.click(function(a) {\n                e.handleGraphEvent(a, \"clickGraph\")\n            }).mouseover(function(a) {\n                e.handleGraphEvent(a,\n                    \"rollOverGraph\")\n            }).mouseout(function(a) {\n                e.handleGraphEvent(a, \"rollOutGraph\")\n            });\n            void 0 === s || e.useNegativeColorIfDown || (n = AmCharts.line(h, a, b, s, q, n, w, !1, !0), l.push(n));\n            if (0 < f || 0 < t)\n                if (n = a.join(\";\").split(\";\"), q = b.join(\";\").split(\";\"), m = g.type, \"serial\" == m ? 0 < c.length ? (c.reverse(), d.reverse(), n = a.concat(c), q = b.concat(d)) : e.rotate ? (q.push(q[q.length - 1]), n.push(u), q.push(q[0]), n.push(u), q.push(q[0]), n.push(n[0])) : (n.push(n[n.length - 1]), q.push(u), n.push(n[0]), q.push(u), n.push(a[0]), q.push(q[0])) : \"xy\" == m &&\n                    (b = e.fillToAxis) && (AmCharts.isString(b) && (b = g.getValueAxisById(b)), \"H\" == b.orientation ? (u = \"top\" == b.position ? 0 : b.viH, n.push(n[n.length - 1]), q.push(u), n.push(n[0]), q.push(u), n.push(a[0]), q.push(q[0])) : (u = \"left\" == b.position ? 0 : b.viW, q.push(q[q.length - 1]), n.push(u), q.push(q[0]), n.push(u), q.push(q[0]), n.push(n[0]))), a = e.gradientRotation, 0 < f && (g = AmCharts.polygon(h, n, q, r, f, 1, \"#000\", 0, a), g.pattern(e.pattern), k.push(g)), v || void 0 !== s) isNaN(t) && (t = f), v || (v = s), h = AmCharts.polygon(h, n, q, v, t, 1, \"#000\", 0, a), h.pattern(e.pattern),\n                    l.push(h), l.click(function(a) {\n                        e.handleGraphEvent(a, \"clickGraph\")\n                    }).mouseover(function(a) {\n                        e.handleGraphEvent(a, \"rollOverGraph\")\n                    }).mouseout(function(a) {\n                        e.handleGraphEvent(a, \"rollOutGraph\")\n                    });\n            e.applyMask(l, k)\n        }\n    },\n    applyMask: function(a, b) {\n        var c = a.length();\n        \"serial\" != this.chart.type || this.scrollbar || (this.positiveClip(b), 0 < c && this.negativeClip(a))\n    },\n    drawSmoothedGraph: function(a, b, c, d) {\n        if (1 < a.length) {\n            var e = this.set,\n                f = this.container,\n                g = f.set(),\n                h = f.set();\n            e.push(h);\n            e.push(g);\n            var k = this.lineAlpha,\n                l = this.lineThickness,\n                e = this.dashLength,\n                m = this.fillAlphas,\n                n = this.lineColorR,\n                p = this.fillColorsR,\n                q = this.negativeLineColor,\n                r = this.negativeFillColors,\n                s = this.negativeFillAlphas,\n                w = this.baseCoord,\n                v = this.lineColorSwitched;\n            v && (n = v);\n            (v = this.fillColorsSwitched) && (p = v);\n            v = this.negativeLineAlpha;\n            isNaN(v) && (v = k);\n            k = new AmCharts.Bezier(f, a, b, n, k, l, p, 0, e);\n            g.push(k.path);\n            void 0 !== q && (l = new AmCharts.Bezier(f, a, b, q, v, l, p, 0, e), h.push(l.path));\n            0 < m && (k = a.join(\";\").split(\";\"), n = b.join(\";\").split(\";\"), l = \"\", 0 < c.length ? (c.push(\"M\"), d.push(\"M\"), c.reverse(),\n                d.reverse(), k = a.concat(c), n = b.concat(d)) : (this.rotate ? (l += \" L\" + w + \",\" + b[b.length - 1], l += \" L\" + w + \",\" + b[0]) : (l += \" L\" + a[a.length - 1] + \",\" + w, l += \" L\" + a[0] + \",\" + w), l += \" L\" + a[0] + \",\" + b[0]), c = new AmCharts.Bezier(f, k, n, NaN, 0, 0, p, m, e, l), c.path.pattern(this.pattern), g.push(c.path), r || void 0 !== q) && (s || (s = m), r || (r = q), a = new AmCharts.Bezier(f, a, b, NaN, 0, 0, r, s, e, l), a.path.pattern(this.pattern), h.push(a.path));\n            this.applyMask(h, g)\n        }\n    },\n    launchAnimation: function() {\n        var a = this,\n            b = a.chart.startDuration;\n        if (0 < b && !a.animationPlayed) {\n            var c =\n                a.set,\n                d = a.bulletSet;\n            AmCharts.VML || (c.attr({\n                opacity: a.startAlpha\n            }), d.attr({\n                opacity: a.startAlpha\n            }));\n            c.hide();\n            d.hide();\n            a.seqAn ? (b = setTimeout(function() {\n                a.animateGraphs.call(a)\n            }, a.index * b * 1E3), a.timeOuts.push(b)) : a.animateGraphs()\n        }\n    },\n    animateGraphs: function() {\n        var a = this.chart,\n            b = this.set,\n            c = this.bulletSet,\n            d = this.x,\n            e = this.y;\n        b.show();\n        c.show();\n        var f = a.startDuration,\n            a = a.startEffect;\n        b && (this.rotate ? (b.translate(-1E3, e), c.translate(-1E3, e)) : (b.translate(d, -1E3), c.translate(d, -1E3)), b.animate({\n            opacity: 1,\n            translate: d +\n                \",\" + e\n        }, f, a), c.animate({\n            opacity: 1,\n            translate: d + \",\" + e\n        }, f, a))\n    },\n    animate: function(a) {\n        var b = this.chart,\n            c = this.animationArray;\n        !a && 0 < c.length && (a = c[0], c.shift());\n        c = AmCharts[AmCharts.getEffect(b.startEffect)];\n        b = b.startDuration;\n        a && (this.rotate ? a.animateWidth(b, c) : a.animateHeight(b, c), a.set.show())\n    },\n    legendKeyColor: function() {\n        var a = this.legendColor,\n            b = this.lineAlpha;\n        void 0 === a && (a = this.lineColorR, 0 === b && (b = this.fillColorsR) && (a = \"object\" == typeof b ? b[0] : b));\n        return a\n    },\n    legendKeyAlpha: function() {\n        var a = this.legendAlpha;\n        void 0 === a && (a = this.lineAlpha, this.fillAlphas > a && (a = this.fillAlphas), 0 === a && (a = this.bulletAlpha), 0 === a && (a = 1));\n        return a\n    },\n    createBullet: function(a, b, c, d) {\n        if (!isNaN(b) && !isNaN(c)) {\n            d = this.container;\n            var e = this.bulletOffset,\n                f = this.bulletSize;\n            isNaN(a.bulletSize) || (f = a.bulletSize);\n            var g = a.values.value,\n                h = this.maxValue,\n                k = this.minValue,\n                l = this.maxBulletSize,\n                m = this.minBulletSize;\n            isNaN(h) || (isNaN(g) || (f = (g - k) / (h - k) * (l - m) + m), k == h && (f = l));\n            h = f;\n            this.bulletAxis && (f = a.values.error, isNaN(f) || (g = f), f = this.bulletAxis.stepWidth *\n                g);\n            f < this.minBulletSize && (f = this.minBulletSize);\n            this.rotate ? b = a.isNegative ? b - e : b + e : c = a.isNegative ? c + e : c - e;\n            var n, m = this.bulletColorR;\n            a.lineColor && (this.bulletColorSwitched = a.lineColor);\n            this.bulletColorSwitched && (m = this.bulletColorSwitched);\n            a.isNegative && void 0 !== this.bulletColorNegative && (m = this.bulletColorNegative);\n            void 0 !== a.color && (m = a.color);\n            var p;\n            \"xy\" == this.chart.type && this.valueField && (p = this.pattern, a.pattern && (p = a.pattern));\n            e = this.bullet;\n            a.bullet && (e = a.bullet);\n            var g = this.bulletBorderThickness,\n                k = this.bulletBorderColorR,\n                l = this.bulletBorderAlpha,\n                q = this.bulletAlpha;\n            k || (k = m);\n            this.useLineColorForBulletBorder && (k = this.lineColorR);\n            var r = a.alpha;\n            isNaN(r) || (q = r);\n            if (\"none\" != this.bullet || a.bullet) n = AmCharts.bullet(d, e, f, m, q, g, k, l, h, 0, p);\n            if (this.customBullet || a.customBullet) p = this.customBullet, a.customBullet && (p = a.customBullet), p && (n && n.remove(), \"function\" == typeof p ? (n = new p, n.chart = this.chart, a.bulletConfig && (n.availableSpace = c, n.graph = this, n.graphDataItem = a, n.bulletY = c, a.bulletConfig.minCoord = this.minCoord -\n                c, n.bulletConfig = a.bulletConfig), n.write(d), n = n.set) : (this.chart.path && (p = this.chart.path + p), n = d.set(), d = d.image(p, 0, 0, f, f), n.push(d), this.centerCustomBullets && d.translate(-f / 2, -f / 2)));\n            n && ((a.url || this.showHandOnHover) && n.setAttr(\"cursor\", \"pointer\"), \"serial\" == this.chart.type && (0 > b - 0 || b - 0 > this.width || c < -f / 2 || c - 0 > this.height) && (n.remove(), n = null), n && (this.bulletSet.push(n), n.translate(b, c), this.addListeners(n, a), this.allBullets.push(n)), a.bx = b, a.by = c);\n            a.bulletGraphics = n;\n            return f\n        }\n    },\n    showBullets: function() {\n        var a =\n            this.allBullets,\n            b;\n        this.bulletsHidden = !1;\n        for (b = 0; b < a.length; b++) a[b].show()\n    },\n    hideBullets: function() {\n        var a = this.allBullets,\n            b;\n        this.bulletsHidden = !0;\n        for (b = 0; b < a.length; b++) a[b].hide()\n    },\n    addListeners: function(a, b) {\n        var c = this;\n        a.mouseover(function(a) {\n            c.handleRollOver(b, a)\n        }).mouseout(function(a) {\n            c.handleRollOut(b, a)\n        }).touchend(function(a) {\n            c.handleRollOver(b, a);\n            c.chart.panEventsEnabled && c.handleClick(b, a)\n        }).touchstart(function(a) {\n            c.handleRollOver(b, a)\n        }).click(function(a) {\n            c.handleClick(b, a)\n        }).dblclick(function(a) {\n            c.handleDoubleClick(b,\n                a)\n        }).contextmenu(function(a) {\n            c.handleRightClick(b, a)\n        })\n    },\n    handleRollOver: function(a, b) {\n        if (a) {\n            var c = this.chart,\n                d = {\n                    type: \"rollOverGraphItem\",\n                    item: a,\n                    index: a.index,\n                    graph: this,\n                    target: this,\n                    chart: this.chart,\n                    event: b\n                };\n            this.fire(\"rollOverGraphItem\", d);\n            c.fire(\"rollOverGraphItem\", d);\n            clearTimeout(c.hoverInt);\n            d = this.showBalloon;\n            c.chartCursor && \"serial\" == c.type && (d = !1, !c.chartCursor.valueBalloonsEnabled && this.showBalloon && (d = !0));\n            if (d) {\n                var d = c.formatString(this.balloonText, a, !0),\n                    e = this.balloonFunction;\n                e && (d = e(a, a.graph));\n                d = AmCharts.cleanFromEmpty(d);\n                e = c.getBalloonColor(this, a);\n                c.balloon.showBullet = !1;\n                c.balloon.pointerOrientation = \"V\";\n                var f = a.x,\n                    g = a.y;\n                c.rotate && (f = a.y, g = a.x);\n                c.showBalloon(d, e, !0, f + c.marginLeftReal, g + c.marginTopReal)\n            }\n        }\n        this.handleGraphEvent(b, \"rollOverGraph\")\n    },\n    handleRollOut: function(a, b) {\n        this.chart.hideBalloon();\n        if (a) {\n            var c = {\n                type: \"rollOutGraphItem\",\n                item: a,\n                index: a.index,\n                graph: this,\n                target: this,\n                chart: this.chart,\n                event: b\n            };\n            this.fire(\"rollOutGraphItem\", c);\n            this.chart.fire(\"rollOutGraphItem\", c)\n        }\n        this.handleGraphEvent(b,\n            \"rollOutGraph\")\n    },\n    handleClick: function(a, b) {\n        if (a) {\n            var c = {\n                type: \"clickGraphItem\",\n                item: a,\n                index: a.index,\n                graph: this,\n                target: this,\n                chart: this.chart,\n                event: b\n            };\n            this.fire(\"clickGraphItem\", c);\n            this.chart.fire(\"clickGraphItem\", c);\n            AmCharts.getURL(a.url, this.urlTarget)\n        }\n        this.handleGraphEvent(b, \"clickGraph\")\n    },\n    handleGraphEvent: function(a, b) {\n        var c = {\n            type: b,\n            graph: this,\n            target: this,\n            chart: this.chart,\n            event: a\n        };\n        this.fire(b, c);\n        this.chart.fire(b, c)\n    },\n    handleRightClick: function(a, b) {\n        if (a) {\n            var c = {\n                type: \"rightClickGraphItem\",\n                item: a,\n                index: a.index,\n                graph: this,\n                target: this,\n                chart: this.chart,\n                event: b\n            };\n            this.fire(\"rightClickGraphItem\", c);\n            this.chart.fire(\"rightClickGraphItem\", c)\n        }\n    },\n    handleDoubleClick: function(a, b) {\n        if (a) {\n            var c = {\n                type: \"doubleClickGraphItem\",\n                item: a,\n                index: a.index,\n                graph: this,\n                target: this,\n                chart: this.chart,\n                event: b\n            };\n            this.fire(\"doubleClickGraphItem\", c);\n            this.chart.fire(\"doubleClickGraphItem\", c)\n        }\n    },\n    zoom: function(a, b) {\n        this.start = a;\n        this.end = b;\n        this.draw()\n    },\n    changeOpacity: function(a) {\n        var b = this.set;\n        b && b.setAttr(\"opacity\", a);\n        if (b = this.ownColumns) {\n            var c;\n            for (c = 0; c < b.length; c++) {\n                var d = b[c].set;\n                d && d.setAttr(\"opacity\", a)\n            }\n        }(b = this.bulletSet) && b.setAttr(\"opacity\", a)\n    },\n    destroy: function() {\n        AmCharts.remove(this.set);\n        AmCharts.remove(this.bulletSet);\n        var a = this.timeOuts;\n        if (a) {\n            var b;\n            for (b = 0; b < a.length; b++) clearTimeout(a[b])\n        }\n        this.timeOuts = []\n    }\n});\nAmCharts.ChartCursor = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"ChartCursor\";\n        this.createEvents(\"changed\", \"zoomed\", \"onHideCursor\", \"draw\", \"selected\", \"moved\");\n        this.enabled = !0;\n        this.cursorAlpha = 1;\n        this.selectionAlpha = .2;\n        this.cursorColor = \"#CC0000\";\n        this.categoryBalloonAlpha = 1;\n        this.color = \"#FFFFFF\";\n        this.type = \"cursor\";\n        this.zoomed = !1;\n        this.zoomable = !0;\n        this.pan = !1;\n        this.categoryBalloonDateFormat = \"MMM DD, YYYY\";\n        this.categoryBalloonEnabled = this.valueBalloonsEnabled = !0;\n        this.rolledOver = !1;\n        this.cursorPosition =\n            \"middle\";\n        this.bulletsEnabled = this.skipZoomDispatch = !1;\n        this.bulletSize = 8;\n        this.selectWithoutZooming = this.oneBalloonOnly = !1;\n        this.graphBulletSize = 1.7;\n        this.animationDuration = .3;\n        this.zooming = !1;\n        this.adjustment = 0;\n        this.avoidBalloonOverlapping = !0;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    draw: function() {\n        var a = this;\n        a.destroy();\n        var b = a.chart,\n            c = b.container;\n        a.rotate = b.rotate;\n        a.container = c;\n        c = c.set();\n        c.translate(a.x, a.y);\n        a.set = c;\n        b.cursorSet.push(c);\n        c = new AmCharts.AmBalloon;\n        c.chart = b;\n        a.categoryBalloon = c;\n        AmCharts.copyProperties(b.balloon,\n            c);\n        c.cornerRadius = 0;\n        c.shadowAlpha = 0;\n        c.borderThickness = 1;\n        c.borderAlpha = 1;\n        c.showBullet = !1;\n        var d = a.categoryBalloonColor;\n        void 0 === d && (d = a.cursorColor);\n        c.fillColor = d;\n        c.fillAlpha = a.categoryBalloonAlpha;\n        c.borderColor = d;\n        c.color = a.color;\n        d = a.valueLineAxis;\n        AmCharts.isString(d) && (d = b.getValueAxisById(d));\n        d || (d = b.valueAxes[0]);\n        a.valueLineAxis = d;\n        a.valueLineBalloonEnabled && (d = new AmCharts.AmBalloon, a.vaBalloon = d, AmCharts.copyProperties(c, d), d.animationDuration = 0, a.rotate || (d.pointerOrientation = \"H\"));\n        a.rotate && (c.pointerOrientation =\n            \"H\");\n        a.extraWidth = 0;\n        a.prevX = [];\n        a.prevY = [];\n        a.prevTX = [];\n        a.prevTY = [];\n        if (a.valueBalloonsEnabled)\n            for (c = 0; c < b.graphs.length; c++) d = new AmCharts.AmBalloon, d.chart = b, AmCharts.copyProperties(b.balloon, d), b.graphs[c].valueBalloon = d;\n        \"cursor\" == a.type ? a.createCursor() : a.createCrosshair();\n        a.interval = setInterval(function() {\n            a.detectMovement.call(a)\n        }, 40)\n    },\n    updateData: function() {\n        var a = this.chart;\n        this.data = a.chartData;\n        this.firstTime = a.firstTime;\n        this.lastTime = a.lastTime\n    },\n    createCursor: function() {\n        var a = this.chart,\n            b = this.cursorAlpha,\n            c = a.categoryAxis,\n            d = this.categoryBalloon,\n            e, f, g, h;\n        g = a.dx;\n        h = a.dy;\n        var k = this.width,\n            l = this.height,\n            a = a.rotate;\n        d.pointerWidth = c.tickLength;\n        a ? (e = [0, k, k + g], f = [0, 0, h], g = [g, 0, 0], h = [h, 0, l]) : (e = [g, 0, 0], f = [h, 0, l], g = [0, k, k + g], h = [0, 0, h]);\n        this.line = e = AmCharts.line(this.container, e, f, this.cursorColor, b, 1);\n        (f = this.fullRectSet) ? (f.push(e), f.translate(this.x, this.y)) : this.set.push(e);\n        this.valueLineEnabled && (e = this.valueLineAlpha, isNaN(e) || (b = e), this.vLine = b = AmCharts.line(this.container, g, h, this.cursorColor, b, 1), this.set.push(b));\n        this.setBalloonBounds(d, c, a);\n        (c = this.vaBalloon) && this.setBalloonBounds(c, this.valueLineAxis, !a);\n        this.hideCursor()\n    },\n    createCrosshair: function() {\n        var a = this.cursorAlpha,\n            b = this.container,\n            c = AmCharts.line(b, [0, 0], [0, this.height], this.cursorColor, a, 1),\n            a = AmCharts.line(b, [0, this.width], [0, 0], this.cursorColor, a, 1);\n        this.set.push(c);\n        this.set.push(a);\n        this.vLine = c;\n        this.hLine = a;\n        this.hideCursor()\n    },\n    detectMovement: function() {\n        var a = this.chart;\n        if (a.mouseIsOver) {\n            var b = a.mouseX - this.x,\n                c = a.mouseY - this.y; - .5 < b && b < this.width +\n                1 && 0 < c && c < this.height ? (this.drawing ? this.rolledOver || a.setMouseCursor(\"crosshair\") : this.pan && (this.rolledOver || a.setMouseCursor(\"move\")), this.rolledOver = !0, (this.valueLineEnabled || this.valueLineBalloonEnabled) && this.updateVLine(b, c), this.setPosition()) : this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1)\n        }\n        else this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1)\n    },\n    updateVLine: function(a, b) {\n        var c = this.vLine,\n            d = this.vaBalloon;\n        if ((c || d) && !this.panning && !this.drawing) {\n            c && c.show();\n            var e = this.valueLineAxis,\n                f, g = this.rotate;\n            g ? (c && c.translate(a, 0), e && (f = e.coordinateToValue(a)), c = a) : (c && c.translate(0, b), e && (f = e.coordinateToValue(b)), c = b - 1);\n            if (d && !isNaN(f) && this.prevLineValue != f) {\n                var h = e.formatValue(f, !0);\n                d && (this.setBalloonPosition(d, e, c, !g), d.showBalloon(h))\n            }\n            this.prevLineValue = f\n        }\n    },\n    getMousePosition: function() {\n        var a, b = this.width,\n            c = this.height;\n        a = this.chart;\n        this.rotate ? (a = a.mouseY - this.y, 0 > a && (a = 0), a > c && (a = c)) : (a = a.mouseX - this.x - 1, 0 > a && (a = 0), a > b && (a = b));\n        return a\n    },\n    updateCrosshair: function() {\n        var a = this.chart,\n            b = a.mouseX - this.x,\n            c = a.mouseY - this.y,\n            d = this.vLine,\n            e = this.hLine,\n            b = AmCharts.fitToBounds(b, 0, this.width),\n            c = AmCharts.fitToBounds(c, 0, this.height);\n        0 < this.cursorAlpha && (d.show(), e.show(), d.translate(b, 0), e.translate(0, c));\n        this.zooming && (a.hideXScrollbar && (b = NaN), a.hideYScrollbar && (c = NaN), this.updateSelectionSize(b, c));\n        this.fireMoved();\n        a.mouseIsOver || this.zooming || this.hideCursor()\n    },\n    fireMoved: function() {\n        var a = this.chart,\n            b = {\n                type: \"moved\",\n                target: this\n            };\n        b.chart = a;\n        b.zooming = this.zooming;\n        b.x = a.mouseX - this.x;\n        b.y =\n            a.mouseY - this.y;\n        this.fire(\"moved\", b)\n    },\n    updateSelectionSize: function(a, b) {\n        AmCharts.remove(this.selection);\n        var c = this.selectionPosX,\n            d = this.selectionPosY,\n            e = 0,\n            f = 0,\n            g = this.width,\n            h = this.height;\n        isNaN(a) || (c > a && (e = a, g = c - a), c < a && (e = c, g = a - c), c == a && (e = a, g = 0), g += this.extraWidth, e -= this.extraWidth / 2);\n        isNaN(b) || (d > b && (f = b, h = d - b), d < b && (f = d, h = b - d), d == b && (f = b, h = 0), h += this.extraWidth, f -= this.extraWidth / 2);\n        0 < g && 0 < h && (c = AmCharts.rect(this.container, g, h, this.cursorColor, this.selectionAlpha), c.translate(e + this.x, f + this.y),\n            this.selection = c)\n    },\n    arrangeBalloons: function() {\n        var a = this.valueBalloons,\n            b = this.x,\n            c = this.y,\n            d = this.height + c;\n        a.sort(this.compareY);\n        var e;\n        for (e = 0; e < a.length; e++) {\n            var f = a[e].balloon;\n            f.setBounds(b, c, b + this.width, d);\n            f.prevX = this.prevX[e];\n            f.prevY = this.prevY[e];\n            f.prevTX = this.prevTX[e];\n            f.prevTY = this.prevTY[e];\n            f.draw();\n            d = f.yPos - 3\n        }\n        this.arrangeBalloons2()\n    },\n    compareY: function(a, b) {\n        return a.yy < b.yy ? 1 : -1\n    },\n    arrangeBalloons2: function() {\n        var a = this.valueBalloons;\n        a.reverse();\n        var b, c = this.x,\n            d, e, f = a.length;\n        for (e = 0; e < f; e++) {\n            var g =\n                a[e].balloon;\n            b = g.bottom;\n            var h = g.bottom - g.yPos,\n                k = f - e - 1;\n            0 < e && b - h < d + 3 && (g.setBounds(c, d + 3, c + this.width, d + h + 3), g.prevX = this.prevX[k], g.prevY = this.prevY[k], g.prevTX = this.prevTX[k], g.prevTY = this.prevTY[k], g.draw());\n            g.set && g.set.show();\n            this.prevX[k] = g.prevX;\n            this.prevY[k] = g.prevY;\n            this.prevTX[k] = g.prevTX;\n            this.prevTY[k] = g.prevTY;\n            d = g.bottom\n        }\n    },\n    showBullets: function() {\n        AmCharts.remove(this.allBullets);\n        var a = this.container,\n            b = a.set();\n        this.set.push(b);\n        this.set.show();\n        this.allBullets = b;\n        var b = this.chart.graphs,\n            c;\n        for (c =\n            0; c < b.length; c++) {\n            var d = b[c];\n            if (!d.hidden && d.balloonText) {\n                var e = this.data[this.index].axes[d.valueAxis.id].graphs[d.id],\n                    f = e.y;\n                if (!isNaN(f)) {\n                    var g, h;\n                    g = e.x;\n                    this.rotate ? (h = f, f = g) : h = g;\n                    d = AmCharts.circle(a, this.bulletSize / 2, this.chart.getBalloonColor(d, e, !0), d.cursorBulletAlpha);\n                    d.translate(h, f);\n                    this.allBullets.push(d)\n                }\n            }\n        }\n    },\n    destroy: function() {\n        this.clear();\n        AmCharts.remove(this.selection);\n        this.selection = null;\n        var a = this.categoryBalloon;\n        a && a.destroy();\n        (a = this.vaBalloon) && a.destroy();\n        this.destroyValueBalloons();\n        AmCharts.remove(this.set)\n    },\n    clear: function() {\n        clearInterval(this.interval)\n    },\n    destroyValueBalloons: function() {\n        var a = this.valueBalloons;\n        if (a) {\n            var b;\n            for (b = 0; b < a.length; b++) a[b].balloon.hide()\n        }\n    },\n    zoom: function(a, b, c, d) {\n        var e = this.chart;\n        this.destroyValueBalloons();\n        this.zooming = !1;\n        var f;\n        this.rotate ? this.selectionPosY = f = e.mouseY : this.selectionPosX = f = e.mouseX;\n        this.start = a;\n        this.end = b;\n        this.startTime = c;\n        this.endTime = d;\n        this.zoomed = !0;\n        d = e.categoryAxis;\n        e = this.rotate;\n        b = this.width;\n        c = this.height;\n        a = d.stepWidth;\n        this.fullWidth &&\n            (f = 1, d.parseDates && !d.equalSpacing && (f = d.minDuration()), e ? this.extraWidth = c = a * f : (this.extraWidth = b = a * f, this.categoryBalloon.minWidth = b), this.line && this.line.remove(), this.line = AmCharts.rect(this.container, b, c, this.cursorColor, this.cursorAlpha, 0), this.fullRectSet && this.fullRectSet.push(this.line));\n        this.stepWidth = a;\n        this.tempVal = this.valueBalloonsEnabled;\n        this.valueBalloonsEnabled = !1;\n        this.setPosition();\n        this.valueBalloonsEnabled = this.tempVal;\n        this.hideCursor()\n    },\n    hideObj: function(a) {\n        a && a.hide()\n    },\n    hideCursor: function(a) {\n        void 0 ===\n            a && (a = !0);\n        this.hideObj(this.set);\n        this.hideObj(this.categoryBalloon);\n        this.hideObj(this.line);\n        this.hideObj(this.vLine);\n        this.hideObj(this.hLine);\n        this.hideObj(this.vaBalloon);\n        this.hideObj(this.allBullets);\n        this.destroyValueBalloons();\n        this.selectWithoutZooming || AmCharts.remove(this.selection);\n        this.previousIndex = NaN;\n        a && this.fire(\"onHideCursor\", {\n            type: \"onHideCursor\",\n            chart: this.chart,\n            target: this\n        });\n        this.drawing || this.chart.setMouseCursor(\"auto\");\n        this.normalizeBulletSize()\n    },\n    setPosition: function(a, b, c) {\n        void 0 ===\n            b && (b = !0);\n        if (\"cursor\" == this.type) {\n            if (this.tempPosition = NaN, AmCharts.ifArray(this.data)) isNaN(a) && (a = this.getMousePosition()), (a != this.previousMousePosition || !0 === this.zoomed || this.oneBalloonOnly) && !isNaN(a) && (\"mouse\" == this.cursorPosition && (this.tempPosition = a), isNaN(c) && (c = this.chart.categoryAxis.xToIndex(a)), c != this.previousIndex || this.zoomed || \"mouse\" == this.cursorPosition || this.oneBalloonOnly) && (this.updateCursor(c, b), this.zoomed = !1), this.previousMousePosition = a\n        }\n        else this.updateCrosshair()\n    },\n    normalizeBulletSize: function() {\n        var a =\n            this.resizedBullets;\n        if (a)\n            for (var b = 0; b < a.length; b++) {\n                var c = a[b],\n                    d = c.bulletGraphics;\n                d && (d.translate(c.bx, c.by, 1), c = c.graph, isNaN(this.graphBulletAlpha) || (d.setAttr(\"fill-opacity\", c.bulletAlpha), d.setAttr(\"stroke-opacity\", c.bulletBorderAlpha)))\n            }\n    },\n    updateCursor: function(a, b) {\n        var c = this.chart,\n            d = this.fullWidth,\n            e = c.mouseX - this.x,\n            f = c.mouseY - this.y;\n        this.drawingNow && (AmCharts.remove(this.drawingLine), this.drawingLine = AmCharts.line(this.container, [this.x + this.drawStartX, this.x + e], [this.y + this.drawStartY, this.y +\n            f\n        ], this.cursorColor, 1, 1));\n        if (this.enabled) {\n            void 0 === b && (b = !0);\n            this.index = a += this.adjustment;\n            var g = c.categoryAxis,\n                h = c.dx,\n                k = c.dy,\n                l = this.x + 1,\n                m = this.y + 1,\n                n = this.width,\n                p = this.height,\n                q = this.data[a];\n            this.fireMoved();\n            if (q) {\n                var r = q.x[g.id],\n                    s = c.rotate,\n                    w = this.stepWidth,\n                    v = this.categoryBalloon,\n                    t = this.firstTime,\n                    u = this.lastTime,\n                    x = this.cursorPosition,\n                    E = this.zooming,\n                    A = this.panning,\n                    z = c.graphs;\n                if (c.mouseIsOver || E || A || this.forceShow)\n                    if (this.forceShow = !1, A) {\n                        var h = this.panClickPos,\n                            c = this.panClickEndTime,\n                            E = this.panClickStartTime,\n                            H = this.panClickEnd,\n                            l = this.panClickStart,\n                            e = (s ? h - f : h - e) / w;\n                        if (!g.parseDates || g.equalSpacing) e = Math.round(e);\n                        0 !== e && (h = {\n                            type: \"zoomed\",\n                            target: this\n                        }, h.chart = this.chart, g.parseDates && !g.equalSpacing ? (c + e > u && (e = u - c), E + e < t && (e = t - E), h.start = Math.round(E + e), h.end = Math.round(c + e), this.fire(h.type, h)) : H + e >= this.data.length || 0 > l + e || (h.start = l + e, h.end = H + e, this.fire(h.type, h)))\n                    }\n                    else {\n                        \"start\" == x ? r -= g.cellWidth / 2 : \"mouse\" == x && (c.mouseIsOver ? r = s ? f - 2 : e - 2 : isNaN(this.tempPosition) || (r = this.tempPosition - 2));\n                        if (s) {\n                            if (0 > r)\n                                if (E) r =\n                                    0;\n                                else {\n                                    this.hideCursor();\n                                    return\n                                }\n                            if (r > p + 1)\n                                if (E) r = p + 1;\n                                else {\n                                    this.hideCursor();\n                                    return\n                                }\n                        }\n                        else {\n                            if (0 > r)\n                                if (E) r = 0;\n                                else {\n                                    this.hideCursor();\n                                    return\n                                }\n                            if (r > n)\n                                if (E) r = n;\n                                else {\n                                    this.hideCursor();\n                                    return\n                                }\n                        } if (0 < this.cursorAlpha) {\n                            var F = this.line;\n                            s ? (t = 0, u = r + k, d && (u -= g.cellWidth / 2)) : (t = r, u = 0, d && (t -= g.cellWidth / 2));\n                            w = this.animationDuration;\n                            0 < w && !this.zooming ? isNaN(this.previousX) ? F.translate(t, u) : (F.translate(this.previousX, this.previousY), F.animate({\n                                translate: t + \",\" + u\n                            }, w, \"easeOutSine\")) : F.translate(t, u);\n                            this.previousX = t;\n                            this.previousY =\n                                u;\n                            F.show()\n                        }\n                        this.linePos = s ? r + k : r;\n                        E && (d && F.hide(), s ? this.updateSelectionSize(NaN, r) : this.updateSelectionSize(r, NaN));\n                        w = !0;\n                        E && (w = !1);\n                        this.categoryBalloonEnabled && w ? (this.setBalloonPosition(v, g, r, s), (t = this.categoryBalloonFunction) ? v.showBalloon(t(q.category)) : g.parseDates ? (g = AmCharts.formatDate(q.category, this.categoryBalloonDateFormat, c), -1 != g.indexOf(\"fff\") && (g = AmCharts.formatMilliseconds(g, q.category)), v.showBalloon(g)) : v.showBalloon(AmCharts.fixNewLines(q.category))) : v.hide();\n                        z && this.bulletsEnabled &&\n                            this.showBullets();\n                        if (this.oneBalloonOnly) {\n                            r = Infinity;\n                            for (g = 0; g < z.length; g++) t = z[g], t.showBalloon && !t.hidden && t.balloonText && (u = q.axes[t.valueAxis.id].graphs[t.id], v = u.y, isNaN(v) || (s ? Math.abs(e - v) < r && (r = Math.abs(e - v), H = t) : Math.abs(f - v) < r && (r = Math.abs(f - v), H = t)));\n                            this.mostCloseGraph && (H = this.mostCloseGraph)\n                        }\n                        if (a != this.previousIndex || H != this.previousMostCloseGraph)\n                            if (this.normalizeBulletSize(), this.destroyValueBalloons(), this.resizedBullets = [], z && this.valueBalloonsEnabled && w && c.balloon.enabled) {\n                                this.valueBalloons =\n                                    w = [];\n                                for (g = 0; g < z.length; g++)\n                                    if (t = z[g], v = NaN, (!this.oneBalloonOnly || t == H) && t.showBalloon && !t.hidden && t.balloonText && (\"step\" == t.type && \"left\" == t.stepDirection && (q = this.data[a + 1]), q)) {\n                                        if (u = q.axes[t.valueAxis.id].graphs[t.id]) v = u.y;\n                                        if (this.showNextAvailable && isNaN(v) && a + 1 < this.data.length)\n                                            for (r = a + 1; r < this.data.length; r++)\n                                                if (d = this.data[r])\n                                                    if (u = d.axes[t.valueAxis.id].graphs[t.id], v = u.y, !isNaN(v)) break;\n                                        if (!isNaN(v)) {\n                                            d = u.x;\n                                            k = !0;\n                                            if (s) {\n                                                if (r = v, 0 > d || d > p) k = !1\n                                            }\n                                            else if (r = d, d = v, 0 > r || r > n + h + 1) k = !1;\n                                            k && (k = this.graphBulletSize,\n                                                F = this.graphBulletAlpha, 1 == k && isNaN(F) || !AmCharts.isModern || !(x = u.bulletGraphics) || (x.getBBox(), x.translate(u.bx, u.by, k), this.resizedBullets.push(u), isNaN(F) || (x.setAttr(\"fill-opacity\", F), x.setAttr(\"stroke-opacity\", F))), k = t.valueBalloon, F = c.getBalloonColor(t, u), k.setBounds(l, m, l + n, m + p), k.pointerOrientation = \"H\", x = this.balloonPointerOrientation, \"vertical\" == x && (k.pointerOrientation = \"V\"), \"horizontal\" == x && (k.pointerOrientation = \"H\"), k.changeColor(F), void 0 !== t.balloonAlpha && (k.fillAlpha = t.balloonAlpha),\n                                                void 0 !== t.balloonTextColor && (k.color = t.balloonTextColor), k.setPosition(r + l, d + m), r = c.formatString(t.balloonText, u, !0), (d = t.balloonFunction) && (r = d(u, t).toString()), \"\" !== r && (s ? k.showBalloon(r) : (k.text = r, k.show = !0), w.push({\n                                                    yy: v,\n                                                    balloon: k\n                                                })), !s && k.set && (k.set.hide(), t = k.textDiv) && (t.style.visibility = \"hidden\"))\n                                        }\n                                    }\n                                this.avoidBalloonOverlapping && this.arrangeBalloons()\n                            }\n                        b ? (h = {\n                            type: \"changed\"\n                        }, h.index = a, h.chart = this.chart, h.zooming = E, h.mostCloseGraph = H, h.position = s ? f : e, h.target = this, c.fire(\"changed\", h), this.fire(\"changed\",\n                            h), this.skipZoomDispatch = !1) : (this.skipZoomDispatch = !0, c.updateLegendValues(a));\n                        this.previousIndex = a;\n                        this.previousMostCloseGraph = H\n                    }\n            }\n        }\n        else this.hideCursor()\n    },\n    setBalloonPosition: function(a, b, c, d) {\n        var e = b.position,\n            f = b.inside;\n        b = b.axisThickness;\n        var g = this.chart,\n            h = g.dx,\n            g = g.dy,\n            k = this.x,\n            l = this.y,\n            m = this.width,\n            n = this.height;\n        d ? (f && (\"right\" == e ? a.setBounds(k, l + g, k + m + h, l + c + g) : a.setBounds(k, l + g, k + m + h, l + c)), \"right\" == e ? f ? a.setPosition(k + m + h, l + c + g) : a.setPosition(k + m + h + b, l + c + g) : f ? a.setPosition(k, l + c) : a.setPosition(k -\n            b, l + c)) : \"top\" == e ? f ? a.setPosition(k + c + h, l + g) : a.setPosition(k + c + h, l + g - b + 1) : f ? a.setPosition(k + c, l + n) : a.setPosition(k + c, l + n + b - 1)\n    },\n    setBalloonBounds: function(a, b, c) {\n        var d = b.position,\n            e = b.inside,\n            f = b.axisThickness,\n            g = b.tickLength,\n            h = this.chart,\n            k = h.dx,\n            h = h.dy,\n            l = this.x,\n            m = this.y,\n            n = this.width,\n            p = this.height;\n        c ? (e && (a.pointerWidth = 0), \"right\" == d ? e ? a.setBounds(l, m + h, l + n + k, m + p + h) : a.setBounds(l + n + k + f, m + h, l + n + 1E3, m + p + h) : e ? a.setBounds(l, m, n + l, p + m) : a.setBounds(-1E3, -1E3, l - g - f, m + p + 15)) : (a.maxWidth = n, b.parseDates && (g = 0, a.pointerWidth =\n            0), \"top\" == d ? e ? a.setBounds(l + k, m + h, n + k + l, p + m) : a.setBounds(l + k, -1E3, n + k + l, m + h - g - f) : e ? a.setBounds(l, m, n + l, p + m - g) : a.setBounds(l, m + p + g + f - 1, l + n, m + p + g + f))\n    },\n    enableDrawing: function(a) {\n        this.enabled = !a;\n        this.hideCursor();\n        this.rolledOver = !1;\n        this.drawing = a\n    },\n    isZooming: function(a) {\n        a && a != this.zooming && this.handleMouseDown(\"fake\");\n        a || a == this.zooming || this.handleMouseUp()\n    },\n    handleMouseOut: function() {\n        if (this.enabled)\n            if (this.zooming) this.setPosition();\n            else {\n                this.index = void 0;\n                var a = {\n                    type: \"changed\",\n                    index: void 0,\n                    target: this\n                };\n                a.chart = this.chart;\n                this.fire(\"changed\", a);\n                this.hideCursor()\n            }\n    },\n    handleReleaseOutside: function() {\n        this.handleMouseUp()\n    },\n    handleMouseUp: function() {\n        var a = this.chart,\n            b = this.data,\n            c;\n        if (a) {\n            var d = a.mouseX - this.x,\n                e = a.mouseY - this.y;\n            if (this.drawingNow) {\n                this.drawingNow = !1;\n                AmCharts.remove(this.drawingLine);\n                c = this.drawStartX;\n                var f = this.drawStartY;\n                if (2 < Math.abs(c - d) || 2 < Math.abs(f - e)) c = {\n                    type: \"draw\",\n                    target: this,\n                    chart: a,\n                    initialX: c,\n                    initialY: f,\n                    finalX: d,\n                    finalY: e\n                }, this.fire(c.type, c)\n            }\n            if (this.enabled && 0 < b.length) {\n                if (this.pan) this.rolledOver = !1;\n                else if (this.zoomable && this.zooming) {\n                    c = this.selectWithoutZooming ? {\n                        type: \"selected\"\n                    } : {\n                        type: \"zoomed\"\n                    };\n                    c.target = this;\n                    c.chart = a;\n                    if (\"cursor\" == this.type) this.rotate ? this.selectionPosY = e : this.selectionPosX = e = d, 2 > Math.abs(e - this.initialMouse) && this.fromIndex == this.index || (this.index < this.fromIndex ? (c.end = this.fromIndex, c.start = this.index) : (c.end = this.index, c.start = this.fromIndex), e = a.categoryAxis, e.parseDates && !e.equalSpacing && (b[c.start] && (c.start = b[c.start].time), b[c.end] && (c.end = a.getEndTime(b[c.end].time))),\n                        this.skipZoomDispatch || this.fire(c.type, c));\n                    else {\n                        var g = this.initialMouseX,\n                            h = this.initialMouseY;\n                        3 > Math.abs(d - g) && 3 > Math.abs(e - h) || (b = Math.min(g, d), f = Math.min(h, e), d = Math.abs(g - d), e = Math.abs(h - e), a.hideXScrollbar && (b = 0, d = this.width), a.hideYScrollbar && (f = 0, e = this.height), c.selectionHeight = e, c.selectionWidth = d, c.selectionY = f, c.selectionX = b, this.skipZoomDispatch || this.fire(c.type, c))\n                    }\n                    this.selectWithoutZooming || AmCharts.remove(this.selection)\n                }\n                this.skipZoomDispatch = !1\n            }\n        }\n        this.panning = this.zooming = !1\n    },\n    showCursorAt: function(a) {\n        var b =\n            this.chart.categoryAxis;\n        a = b.parseDates ? b.dateToCoordinate(a) : b.categoryToCoordinate(a);\n        this.previousMousePosition = NaN;\n        this.forceShow = !0;\n        this.setPosition(a, !1)\n    },\n    clearSelection: function() {\n        AmCharts.remove(this.selection)\n    },\n    handleMouseDown: function(a) {\n        if (this.zoomable || this.pan || this.drawing) {\n            var b = this.rotate,\n                c = this.chart,\n                d = c.mouseX - this.x,\n                e = c.mouseY - this.y;\n            if (0 < d && d < this.width && 0 < e && e < this.height || \"fake\" == a) this.setPosition(), this.selectWithoutZooming && AmCharts.remove(this.selection), this.drawing ? (this.drawStartY =\n                e, this.drawStartX = d, this.drawingNow = !0) : this.pan ? (this.zoomable = !1, c.setMouseCursor(\"move\"), this.panning = !0, this.panClickPos = b ? e : d, this.panClickStart = this.start, this.panClickEnd = this.end, this.panClickStartTime = this.startTime, this.panClickEndTime = this.endTime) : this.zoomable && (\"cursor\" == this.type ? (this.fromIndex = this.index, b ? (this.initialMouse = e, this.selectionPosY = this.linePos) : (this.initialMouse = d, this.selectionPosX = this.linePos)) : (this.initialMouseX = d, this.initialMouseY = e, this.selectionPosX = d, this.selectionPosY =\n                e), this.zooming = !0)\n        }\n    }\n});\nAmCharts.SimpleChartScrollbar = AmCharts.Class({\n    construct: function(a) {\n        this.createEvents(\"zoomed\");\n        this.backgroundColor = \"#D4D4D4\";\n        this.backgroundAlpha = 1;\n        this.selectedBackgroundColor = \"#EFEFEF\";\n        this.scrollDuration = this.selectedBackgroundAlpha = 1;\n        this.resizeEnabled = !0;\n        this.hideResizeGrips = !1;\n        this.scrollbarHeight = 20;\n        this.updateOnReleaseOnly = !1;\n        9 > document.documentMode && (this.updateOnReleaseOnly = !0);\n        this.dragIconWidth = 18;\n        this.dragIconHeight = 25;\n        AmCharts.applyTheme(this, a, \"SimpleChartScrollbar\")\n    },\n    draw: function() {\n        var a =\n            this;\n        a.destroy();\n        a.interval = setInterval(function() {\n            a.updateScrollbar.call(a)\n        }, 40);\n        var b = a.chart.container,\n            c = a.rotate,\n            d = a.chart,\n            e = b.set();\n        a.set = e;\n        d.scrollbarsSet.push(e);\n        var f, g;\n        c ? (f = a.scrollbarHeight, g = d.plotAreaHeight) : (g = a.scrollbarHeight, f = d.plotAreaWidth);\n        a.width = f;\n        if ((a.height = g) && f) {\n            var h = AmCharts.rect(b, f, g, a.backgroundColor, a.backgroundAlpha, 1, a.backgroundColor, a.backgroundAlpha);\n            a.bg = h;\n            e.push(h);\n            h = AmCharts.rect(b, f, g, \"#000\", .005);\n            e.push(h);\n            a.invisibleBg = h;\n            h.click(function() {\n                a.handleBgClick()\n            }).mouseover(function() {\n                a.handleMouseOver()\n            }).mouseout(function() {\n                a.handleMouseOut()\n            }).touchend(function() {\n                a.handleBgClick()\n            });\n            h = AmCharts.rect(b, f, g, a.selectedBackgroundColor, a.selectedBackgroundAlpha);\n            a.selectedBG = h;\n            e.push(h);\n            f = AmCharts.rect(b, f, g, \"#000\", .005);\n            a.dragger = f;\n            e.push(f);\n            f.mousedown(function(b) {\n                a.handleDragStart(b)\n            }).mouseup(function() {\n                a.handleDragStop()\n            }).mouseover(function() {\n                a.handleDraggerOver()\n            }).mouseout(function() {\n                a.handleMouseOut()\n            }).touchstart(function(b) {\n                a.handleDragStart(b)\n            }).touchend(function() {\n                a.handleDragStop()\n            });\n            f = d.pathToImages;\n            c ? (h = f + \"dragIconH.gif\", f = a.dragIconWidth, c = a.dragIconHeight) : (h = f + \"dragIcon.gif\",\n                c = a.dragIconWidth, f = a.dragIconHeight);\n            g = b.image(h, 0, 0, c, f);\n            var h = b.image(h, 0, 0, c, f),\n                k = 10,\n                l = 20;\n            d.panEventsEnabled && (k = 25, l = a.scrollbarHeight);\n            var m = AmCharts.rect(b, k, l, \"#000\", .005),\n                n = AmCharts.rect(b, k, l, \"#000\", .005);\n            n.translate(-(k - c) / 2, -(l - f) / 2);\n            m.translate(-(k - c) / 2, -(l - f) / 2);\n            c = b.set([g, n]);\n            b = b.set([h, m]);\n            a.iconLeft = c;\n            a.iconRight = b;\n            c.mousedown(function() {\n                a.leftDragStart()\n            }).mouseup(function() {\n                a.leftDragStop()\n            }).mouseover(function() {\n                a.iconRollOver()\n            }).mouseout(function() {\n                a.iconRollOut()\n            }).touchstart(function(b) {\n                a.leftDragStart()\n            }).touchend(function() {\n                a.leftDragStop()\n            });\n            b.mousedown(function() {\n                a.rightDragStart()\n            }).mouseup(function() {\n                a.rightDragStop()\n            }).mouseover(function() {\n                a.iconRollOver()\n            }).mouseout(function() {\n                a.iconRollOut()\n            }).touchstart(function(b) {\n                a.rightDragStart()\n            }).touchend(function() {\n                a.rightDragStop()\n            });\n            AmCharts.ifArray(d.chartData) ? e.show() : e.hide();\n            a.hideDragIcons();\n            a.clipDragger(!1)\n        }\n        e.translate(a.x, a.y)\n    },\n    updateScrollbarSize: function(a, b) {\n        var c = this.dragger,\n            d, e, f, g;\n        this.rotate ? (d = 0, e = a, f = this.width + 1, g = b - a, c.setAttr(\"height\", b - a), c.setAttr(\"y\", e)) : (d = a,\n            e = 0, f = b - a, g = this.height + 1, c.setAttr(\"width\", b - a), c.setAttr(\"x\", d));\n        this.clipAndUpdate(d, e, f, g)\n    },\n    updateScrollbar: function() {\n        var a, b = !1,\n            c, d, e = this.x,\n            f = this.y,\n            g = this.dragger,\n            h = this.getDBox();\n        c = h.x + e;\n        d = h.y + f;\n        var k = h.width,\n            h = h.height,\n            l = this.rotate,\n            m = this.chart,\n            n = this.width,\n            p = this.height,\n            q = m.mouseX,\n            r = m.mouseY;\n        a = this.initialMouse;\n        this.forceClip && this.clipDragger(!0);\n        m.mouseIsOver && (this.dragging && (m = this.initialCoord, l ? (a = m + (r - a), 0 > a && (a = 0), m = p - h, a > m && (a = m), g.setAttr(\"y\", a)) : (a = m + (q - a), 0 > a && (a = 0), m = n - k,\n            a > m && (a = m), g.setAttr(\"x\", a)), this.clipDragger(!0)), this.resizingRight && (l ? (a = r - d, a + d > p + f && (a = p - d + f), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr(\"height\", a))) : (a = q - c, a + c > n + e && (a = n - c + e), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr(\"width\", a))), this.clipDragger(!0)), this.resizingLeft && (l ? (c = d, d = r, d < f && (d = f), d > p + f && (d = p + f), a = !0 === b ? c - d : h + c - d, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"y\", c + h - f)) : (0 === a && (a = .1), g.setAttr(\"y\",\n            d - f), g.setAttr(\"height\", a))) : (d = q, d < e && (d = e), d > n + e && (d = n + e), a = !0 === b ? c - d : k + c - d, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"x\", c + k - e)) : (0 === a && (a = .1), g.setAttr(\"x\", d - e), g.setAttr(\"width\", a))), this.clipDragger(!0)))\n    },\n    stopForceClip: function() {\n        this.forceClip = !1\n    },\n    clipDragger: function(a) {\n        var b = this.getDBox();\n        if (b) {\n            var c = b.x,\n                d = b.y,\n                e = b.width,\n                b = b.height,\n                f = !1;\n            if (this.rotate) {\n                if (c = 0, e = this.width + 1, this.clipY != d || this.clipH != b) f = !0\n            }\n            else if (d = 0, b = this.height + 1, this.clipX != c || this.clipW != e) f = !0;\n            f && (this.clipAndUpdate(c, d, e, b), a && (this.updateOnReleaseOnly || this.dispatchScrollbarEvent()))\n        }\n    },\n    maskGraphs: function() {},\n    clipAndUpdate: function(a, b, c, d) {\n        this.clipX = a;\n        this.clipY = b;\n        this.clipW = c;\n        this.clipH = d;\n        this.selectedBG.clipRect(a, b, c, d);\n        this.updateDragIconPositions();\n        this.maskGraphs(a, b, c, d)\n    },\n    dispatchScrollbarEvent: function() {\n        if (this.skipEvent) this.skipEvent = !1;\n        else {\n            var a = this.chart;\n            a.hideBalloon();\n            var b = this.getDBox(),\n                c = b.x,\n                d = b.y,\n                e = b.width,\n                b = b.height;\n            this.rotate ? (c = d, e = this.height / b) : e = this.width /\n                e;\n            a = {\n                type: \"zoomed\",\n                position: c,\n                chart: a,\n                target: this,\n                multiplier: e\n            };\n            this.fire(a.type, a)\n        }\n    },\n    updateDragIconPositions: function() {\n        var a = this.getDBox(),\n            b = a.x,\n            c = a.y,\n            d = this.iconLeft,\n            e = this.iconRight,\n            f, g, h = this.scrollbarHeight;\n        this.rotate ? (f = this.dragIconWidth, g = this.dragIconHeight, d.translate(this.x + (h - g) / 2, this.y + c - f / 2), e.translate(this.x + (h - g) / 2, this.y + c + a.height - f / 2)) : (f = this.dragIconHeight, g = this.dragIconWidth, d.translate(this.x + b - g / 2, this.y + (h - f) / 2), e.translate(this.x + b - g / 2 + a.width, this.y + (h - f) / 2))\n    },\n    showDragIcons: function() {\n        this.resizeEnabled &&\n            (this.iconLeft.show(), this.iconRight.show())\n    },\n    hideDragIcons: function() {\n        if (!this.resizingLeft && !this.resizingRight && !this.dragging) {\n            if (this.hideResizeGrips || !this.resizeEnabled) this.iconLeft.hide(), this.iconRight.hide();\n            this.removeCursors()\n        }\n    },\n    removeCursors: function() {\n        this.chart.setMouseCursor(\"auto\")\n    },\n    relativeZoom: function(a, b) {\n        this.dragger.stop();\n        this.multiplier = a;\n        this.position = b;\n        this.updateScrollbarSize(b, this.rotate ? b + this.height / a : b + this.width / a)\n    },\n    destroy: function() {\n        this.clear();\n        AmCharts.remove(this.set);\n        AmCharts.remove(this.iconRight);\n        AmCharts.remove(this.iconLeft)\n    },\n    clear: function() {\n        clearInterval(this.interval)\n    },\n    handleDragStart: function() {\n        var a = this.chart;\n        this.dragger.stop();\n        this.removeCursors();\n        this.dragging = !0;\n        var b = this.getDBox();\n        this.rotate ? (this.initialCoord = b.y, this.initialMouse = a.mouseY) : (this.initialCoord = b.x, this.initialMouse = a.mouseX)\n    },\n    handleDragStop: function() {\n        this.updateOnReleaseOnly && (this.updateScrollbar(), this.skipEvent = !1, this.dispatchScrollbarEvent());\n        this.dragging = !1;\n        this.mouseIsOver &&\n            this.removeCursors();\n        this.updateScrollbar()\n    },\n    handleDraggerOver: function() {\n        this.handleMouseOver()\n    },\n    leftDragStart: function() {\n        this.dragger.stop();\n        this.resizingLeft = !0\n    },\n    leftDragStop: function() {\n        this.resizingLeft = !1;\n        this.mouseIsOver || this.removeCursors();\n        this.updateOnRelease()\n    },\n    rightDragStart: function() {\n        this.dragger.stop();\n        this.resizingRight = !0\n    },\n    rightDragStop: function() {\n        this.resizingRight = !1;\n        this.mouseIsOver || this.removeCursors();\n        this.updateOnRelease()\n    },\n    iconRollOut: function() {\n        this.removeCursors()\n    },\n    iconRollOver: function() {\n        this.rotate ?\n            this.chart.setMouseCursor(\"n-resize\") : this.chart.setMouseCursor(\"e-resize\");\n        this.handleMouseOver()\n    },\n    getDBox: function() {\n        if (this.dragger) return this.dragger.getBBox()\n    },\n    handleBgClick: function() {\n        var a = this;\n        if (!a.resizingRight && !a.resizingLeft) {\n            a.zooming = !0;\n            var b, c, d = a.scrollDuration,\n                e = a.dragger;\n            b = a.getDBox();\n            var f = b.height,\n                g = b.width;\n            c = a.chart;\n            var h = a.y,\n                k = a.x,\n                l = a.rotate;\n            l ? (b = \"y\", c = c.mouseY - f / 2 - h, c = AmCharts.fitToBounds(c, 0, a.height - f)) : (b = \"x\", c = c.mouseX - g / 2 - k, c = AmCharts.fitToBounds(c, 0, a.width - g));\n            a.updateOnReleaseOnly ?\n                (a.skipEvent = !1, e.setAttr(b, c), a.dispatchScrollbarEvent(), a.clipDragger()) : (c = Math.round(c), l ? e.animate({\n                    y: c\n                }, d, \">\") : e.animate({\n                    x: c\n                }, d, \">\"), a.forceClip = !0, clearTimeout(a.forceTO), a.forceTO = setTimeout(function() {\n                    a.stopForceClip.call(a)\n                }, 3E3 * d))\n        }\n    },\n    updateOnRelease: function() {\n        this.updateOnReleaseOnly && (this.updateScrollbar(), this.skipEvent = !1, this.dispatchScrollbarEvent())\n    },\n    handleReleaseOutside: function() {\n        if (this.set) {\n            if (this.resizingLeft || this.resizingRight || this.dragging) this.updateOnRelease(), this.removeCursors();\n            this.mouseIsOver = this.dragging = this.resizingRight = this.resizingLeft = !1;\n            this.hideDragIcons();\n            this.updateScrollbar()\n        }\n    },\n    handleMouseOver: function() {\n        this.mouseIsOver = !0;\n        this.showDragIcons()\n    },\n    handleMouseOut: function() {\n        this.mouseIsOver = !1;\n        this.hideDragIcons()\n    }\n});\nAmCharts.ChartScrollbar = AmCharts.Class({\n    inherits: AmCharts.SimpleChartScrollbar,\n    construct: function(a) {\n        this.cname = \"ChartScrollbar\";\n        AmCharts.ChartScrollbar.base.construct.call(this, a);\n        this.graphLineColor = \"#BBBBBB\";\n        this.graphLineAlpha = 0;\n        this.graphFillColor = \"#BBBBBB\";\n        this.graphFillAlpha = 1;\n        this.selectedGraphLineColor = \"#888888\";\n        this.selectedGraphLineAlpha = 0;\n        this.selectedGraphFillColor = \"#888888\";\n        this.selectedGraphFillAlpha = 1;\n        this.gridCount = 0;\n        this.gridColor = \"#FFFFFF\";\n        this.gridAlpha = .7;\n        this.skipEvent = this.autoGridCount = !1;\n        this.color = \"#FFFFFF\";\n        this.scrollbarCreated = !1;\n        this.offset = 0;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    init: function() {\n        var a = this.categoryAxis,\n            b = this.chart;\n        a || (this.categoryAxis = a = new AmCharts.CategoryAxis);\n        a.chart = b;\n        a.id = \"scrollbar\";\n        a.dateFormats = b.categoryAxis.dateFormats;\n        a.markPeriodChange = b.categoryAxis.markPeriodChange;\n        a.boldPeriodBeginning = b.categoryAxis.boldPeriodBeginning;\n        a.axisItemRenderer = AmCharts.RecItem;\n        a.axisRenderer = AmCharts.RecAxis;\n        a.guideFillRenderer = AmCharts.RecFill;\n        a.inside = !0;\n        a.fontSize =\n            this.fontSize;\n        a.tickLength = 0;\n        a.axisAlpha = 0;\n        AmCharts.isString(this.graph) && (this.graph = AmCharts.getObjById(b.graphs, this.graph));\n        if (a = this.graph) {\n            var c = this.valueAxis;\n            c || (this.valueAxis = c = new AmCharts.ValueAxis, c.visible = !1, c.scrollbar = !0, c.axisItemRenderer = AmCharts.RecItem, c.axisRenderer = AmCharts.RecAxis, c.guideFillRenderer = AmCharts.RecFill, c.labelsEnabled = !1, c.chart = b);\n            b = this.unselectedGraph;\n            b || (b = new AmCharts.AmGraph, b.scrollbar = !0, this.unselectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers =\n                a.noStepRisers);\n            b = this.selectedGraph;\n            b || (b = new AmCharts.AmGraph, b.scrollbar = !0, this.selectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers)\n        }\n        this.scrollbarCreated = !0\n    },\n    draw: function() {\n        var a = this;\n        AmCharts.ChartScrollbar.base.draw.call(a);\n        a.scrollbarCreated || a.init();\n        var b = a.chart,\n            c = b.chartData,\n            d = a.categoryAxis,\n            e = a.rotate,\n            f = a.x,\n            g = a.y,\n            h = a.width,\n            k = a.height,\n            l = b.categoryAxis,\n            m = a.set;\n        d.setOrientation(!e);\n        d.parseDates = l.parseDates;\n        d.rotate = e;\n        d.equalSpacing = l.equalSpacing;\n        d.minPeriod = l.minPeriod;\n        d.startOnAxis = l.startOnAxis;\n        d.viW = h;\n        d.viH = k;\n        d.width = h;\n        d.height = k;\n        d.gridCount = a.gridCount;\n        d.gridColor = a.gridColor;\n        d.gridAlpha = a.gridAlpha;\n        d.color = a.color;\n        d.tickLength = 0;\n        d.axisAlpha = 0;\n        d.autoGridCount = a.autoGridCount;\n        d.parseDates && !d.equalSpacing && d.timeZoom(b.firstTime, b.lastTime);\n        d.zoom(0, c.length - 1);\n        if (l = a.graph) {\n            var n = a.valueAxis,\n                p = l.valueAxis;\n            n.id = p.id;\n            n.rotate = e;\n            n.setOrientation(e);\n            n.width = h;\n            n.height = k;\n            n.viW = h;\n            n.viH = k;\n            n.dataProvider = c;\n            n.reversed = p.reversed;\n            n.logarithmic = p.logarithmic;\n            n.gridAlpha =\n                0;\n            n.axisAlpha = 0;\n            m.push(n.set);\n            e ? (n.y = g, n.x = 0) : (n.x = f, n.y = 0);\n            var f = Infinity,\n                g = -Infinity,\n                q;\n            for (q = 0; q < c.length; q++) {\n                var r = c[q].axes[p.id].graphs[l.id].values,\n                    s;\n                for (s in r)\n                    if (r.hasOwnProperty(s) && \"percents\" != s && \"total\" != s) {\n                        var w = r[s];\n                        w < f && (f = w);\n                        w > g && (g = w)\n                    }\n            }\n            Infinity != f && (n.minimum = f); - Infinity != g && (n.maximum = g + .1 * (g - f));\n            f == g && (n.minimum -= 1, n.maximum += 1);\n            void 0 !== a.minimum && (n.minimum = a.minimum);\n            void 0 !== a.maximum && (n.maximum = a.maximum);\n            n.zoom(0, c.length - 1);\n            s = a.unselectedGraph;\n            s.id = l.id;\n            s.rotate = e;\n            s.chart =\n                b;\n            s.data = c;\n            s.valueAxis = n;\n            s.chart = l.chart;\n            s.categoryAxis = a.categoryAxis;\n            s.periodSpan = l.periodSpan;\n            s.valueField = l.valueField;\n            s.openField = l.openField;\n            s.closeField = l.closeField;\n            s.highField = l.highField;\n            s.lowField = l.lowField;\n            s.lineAlpha = a.graphLineAlpha;\n            s.lineColorR = a.graphLineColor;\n            s.fillAlphas = a.graphFillAlpha;\n            s.fillColorsR = a.graphFillColor;\n            s.connect = l.connect;\n            s.hidden = l.hidden;\n            s.width = h;\n            s.height = k;\n            s.pointPosition = l.pointPosition;\n            s.stepDirection = l.stepDirection;\n            s.periodSpan = l.periodSpan;\n            p = a.selectedGraph;\n            p.id = l.id;\n            p.rotate = e;\n            p.chart = b;\n            p.data = c;\n            p.valueAxis = n;\n            p.chart = l.chart;\n            p.categoryAxis = d;\n            p.periodSpan = l.periodSpan;\n            p.valueField = l.valueField;\n            p.openField = l.openField;\n            p.closeField = l.closeField;\n            p.highField = l.highField;\n            p.lowField = l.lowField;\n            p.lineAlpha = a.selectedGraphLineAlpha;\n            p.lineColorR = a.selectedGraphLineColor;\n            p.fillAlphas = a.selectedGraphFillAlpha;\n            p.fillColorsR = a.selectedGraphFillColor;\n            p.connect = l.connect;\n            p.hidden = l.hidden;\n            p.width = h;\n            p.height = k;\n            p.pointPosition = l.pointPosition;\n            p.stepDirection = l.stepDirection;\n            p.periodSpan = l.periodSpan;\n            b = a.graphType;\n            b || (b = l.type);\n            s.type = b;\n            p.type = b;\n            c = c.length - 1;\n            s.zoom(0, c);\n            p.zoom(0, c);\n            p.set.click(function() {\n                a.handleBackgroundClick()\n            }).mouseover(function() {\n                a.handleMouseOver()\n            }).mouseout(function() {\n                a.handleMouseOut()\n            });\n            s.set.click(function() {\n                a.handleBackgroundClick()\n            }).mouseover(function() {\n                a.handleMouseOver()\n            }).mouseout(function() {\n                a.handleMouseOut()\n            });\n            m.push(s.set);\n            m.push(p.set)\n        }\n        m.push(d.set);\n        m.push(d.labelsSet);\n        a.bg.toBack();\n        a.invisibleBg.toFront();\n        a.dragger.toFront();\n        a.iconLeft.toFront();\n        a.iconRight.toFront()\n    },\n    timeZoom: function(a, b, c) {\n        this.startTime = a;\n        this.endTime = b;\n        this.timeDifference = b - a;\n        this.skipEvent = !AmCharts.toBoolean(c);\n        this.zoomScrollbar();\n        this.skipEvent || this.dispatchScrollbarEvent()\n    },\n    zoom: function(a, b) {\n        this.start = a;\n        this.end = b;\n        this.skipEvent = !0;\n        this.zoomScrollbar()\n    },\n    dispatchScrollbarEvent: function() {\n        if (this.skipEvent) this.skipEvent = !1;\n        else {\n            var a = this.chart.chartData,\n                b, c, d = this.dragger.getBBox();\n            b = d.x;\n            var e = d.y,\n                f = d.width,\n                d = d.height,\n                g = this.chart;\n            this.rotate ? (b = e, c = d) : c = f;\n            f = {\n                type: \"zoomed\",\n                target: this\n            };\n            f.chart = g;\n            var h = this.categoryAxis,\n                k = this.stepWidth,\n                e = g.minSelectedTime,\n                d = !1;\n            if (h.parseDates && !h.equalSpacing) {\n                if (a = g.lastTime, g = g.firstTime, h.minDuration(), h = Math.round(b / k) + g, b = this.dragging ? h + this.timeDifference : Math.round((b + c) / k) + g, h > b && (h = b), 0 < e && b - h < e && (b = Math.round(h + (b - h) / 2), d = Math.round(e / 2), h = b - d, b += d, d = !0), b > a && (b = a), b - e < h && (h = b - e), h < g && (h = g), h + e > b && (b = h + e), h != this.startTime || b != this.endTime) this.startTime = h, this.endTime = b, f.start = h, f.end = b, f.startDate = new Date(h),\n                    f.endDate = new Date(b), this.fire(f.type, f)\n            }\n            else if (h.startOnAxis || (b += k / 2), c -= this.stepWidth / 2, e = h.xToIndex(b), b = h.xToIndex(b + c), e != this.start || this.end != b) h.startOnAxis && (this.resizingRight && e == b && b++, this.resizingLeft && e == b && (0 < e ? e-- : b = 1)), this.start = e, this.end = this.dragging ? this.start + this.difference : b, f.start = this.start, f.end = this.end, h.parseDates && (a[this.start] && (f.startDate = new Date(a[this.start].time)), a[this.end] && (f.endDate = new Date(a[this.end].time))), this.fire(f.type, f);\n            d && this.zoomScrollbar()\n        }\n    },\n    zoomScrollbar: function() {\n        var a, b;\n        a = this.chart;\n        var c = a.chartData,\n            d = this.categoryAxis;\n        d.parseDates && !d.equalSpacing ? (c = d.stepWidth, d = a.firstTime, a = c * (this.startTime - d), b = c * (this.endTime - d)) : (a = c[this.start].x[d.id], b = c[this.end].x[d.id], c = d.stepWidth, d.startOnAxis || (d = c / 2, a -= d, b += d));\n        this.stepWidth = c;\n        this.updateScrollbarSize(a, b)\n    },\n    maskGraphs: function(a, b, c, d) {\n        var e = this.selectedGraph;\n        e && e.set.clipRect(a, b, c, d)\n    },\n    handleDragStart: function() {\n        AmCharts.ChartScrollbar.base.handleDragStart.call(this);\n        this.difference =\n            this.end - this.start;\n        this.timeDifference = this.endTime - this.startTime;\n        0 > this.timeDifference && (this.timeDifference = 0)\n    },\n    handleBackgroundClick: function() {\n        AmCharts.ChartScrollbar.base.handleBackgroundClick.call(this);\n        this.dragging || (this.difference = this.end - this.start, this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0))\n    }\n});\nAmCharts.AmBalloon = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"AmBalloon\";\n        this.enabled = !0;\n        this.fillColor = \"#FFFFFF\";\n        this.fillAlpha = .8;\n        this.borderThickness = 2;\n        this.borderColor = \"#FFFFFF\";\n        this.borderAlpha = 1;\n        this.cornerRadius = 0;\n        this.maximumWidth = 220;\n        this.horizontalPadding = 8;\n        this.verticalPadding = 4;\n        this.pointerWidth = 6;\n        this.pointerOrientation = \"V\";\n        this.color = \"#000000\";\n        this.adjustBorderColor = !0;\n        this.show = this.follow = this.showBullet = !1;\n        this.bulletSize = 3;\n        this.shadowAlpha = .4;\n        this.shadowColor = \"#000000\";\n        this.fadeOutDuration =\n            this.animationDuration = .3;\n        this.fixedPosition = !1;\n        this.offsetY = 6;\n        this.offsetX = 1;\n        this.textAlign = \"center\";\n        AmCharts.isModern || (this.offsetY *= 1.5);\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    draw: function() {\n        var a = this.pointToX,\n            b = this.pointToY;\n        this.deltaSignX = this.deltaSignY = 1;\n        var c = this.chart;\n        AmCharts.VML && (this.fadeOutDuration = 0);\n        this.xAnim && c.stopAnim(this.xAnim);\n        this.yAnim && c.stopAnim(this.yAnim);\n        if (!isNaN(a)) {\n            var d = this.follow,\n                e = c.container,\n                f = this.set;\n            AmCharts.remove(f);\n            this.removeDiv();\n            f = e.set();\n            f.node.style.pointerEvents =\n                \"none\";\n            this.set = f;\n            c.balloonsSet.push(f);\n            if (this.show) {\n                var g = this.l,\n                    h = this.t,\n                    k = this.r,\n                    l = this.b,\n                    m = this.balloonColor,\n                    n = this.fillColor,\n                    p = this.borderColor,\n                    q = n;\n                void 0 != m && (this.adjustBorderColor ? q = p = m : n = m);\n                var r = this.horizontalPadding,\n                    s = this.verticalPadding,\n                    w = this.pointerWidth,\n                    v = this.pointerOrientation,\n                    t = this.cornerRadius,\n                    u = c.fontFamily,\n                    x = this.fontSize;\n                void 0 == x && (x = c.fontSize);\n                var m = document.createElement(\"div\"),\n                    E = m.style;\n                E.pointerEvents = \"none\";\n                E.position = \"absolute\";\n                var A = this.minWidth,\n                    z = \"\";\n                isNaN(A) ||\n                    (z = \"min-width:\" + (A - 2 * r) + \"px; \");\n                m.innerHTML = '<div style=\"text-align:' + this.textAlign + \"; \" + z + \"max-width:\" + this.maxWidth + \"px; font-size:\" + x + \"px; color:\" + this.color + \"; font-family:\" + u + '\">' + this.text + \"</div>\";\n                c.chartDiv.appendChild(m);\n                this.textDiv = m;\n                x = m.offsetWidth;\n                u = m.offsetHeight;\n                m.clientHeight && (x = m.clientWidth, u = m.clientHeight);\n                u += 2 * s;\n                z = x + 2 * r;\n                !isNaN(A) && z < A && (z = A);\n                window.opera && (u += 2);\n                var H = !1,\n                    x = this.offsetY;\n                c.handDrawn && (x += c.handDrawScatter + 2);\n                \"H\" != v ? (A = a - z / 2, b < h + u + 10 && \"down\" != v ? (H = !0, d && (b += x),\n                    x = b + w, this.deltaSignY = -1) : (d && (b -= x), x = b - u - w, this.deltaSignY = 1)) : (2 * w > u && (w = u / 2), x = b - u / 2, a < g + (k - g) / 2 ? (A = a + w, this.deltaSignX = -1) : (A = a - z - w, this.deltaSignX = 1));\n                x + u >= l && (x = l - u);\n                x < h && (x = h);\n                A < g && (A = g);\n                A + z > k && (A = k - z);\n                var h = x + s,\n                    l = A + r,\n                    s = this.shadowAlpha,\n                    F = this.shadowColor,\n                    r = this.borderThickness,\n                    G = this.bulletSize,\n                    V;\n                0 < t || 0 === w ? (0 < s && (a = AmCharts.rect(e, z, u, n, 0, r + 1, F, s, this.cornerRadius), AmCharts.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), n = AmCharts.rect(e, z, u, n, this.fillAlpha, r, p, this.borderAlpha,\n                    this.cornerRadius), this.showBullet && (V = AmCharts.circle(e, G, q, this.fillAlpha), f.push(V))) : (q = [], t = [], \"H\" != v ? (g = a - A, g > z - w && (g = z - w), g < w && (g = w), q = [0, g - w, a - A, g + w, z, z, 0, 0], t = H ? [0, 0, b - x, 0, 0, u, u, 0] : [u, u, b - x, u, u, 0, 0, u]) : (q = b - x, q > u - w && (q = u - w), q < w && (q = w), t = [0, q - w, b - x, q + w, u, u, 0, 0], q = a < g + (k - g) / 2 ? [0, 0, A < a ? 0 : a - A, 0, 0, z, z, 0] : [z, z, A + z > a ? z : a - A, z, z, 0, 0, z]), 0 < s && (a = AmCharts.polygon(e, q, t, n, 0, r, F, s), a.translate(1, 1), f.push(a)), n = AmCharts.polygon(e, q, t, n, this.fillAlpha, r, p, this.borderAlpha));\n                this.bg = n;\n                f.push(n);\n                n.toFront();\n                e = 1 * this.deltaSignX;\n                E.left = l + \"px\";\n                E.top = h + \"px\";\n                f.translate(A - e, x);\n                n = n.getBBox();\n                this.bottom = x + u + 1;\n                this.yPos = n.y + x;\n                V && V.translate(this.pointToX - A + e, b - x);\n                b = this.animationDuration;\n                0 < this.animationDuration && !d && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY), f.animate({\n                    translate: A - e + \",\" + x\n                }, b, \"easeOutSine\"), m && (E.left = this.prevTX + \"px\", E.top = this.prevTY + \"px\", this.xAnim = c.animate({\n                    node: m\n                }, \"left\", this.prevTX, l, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({\n                        node: m\n                    }, \"top\", this.prevTY, h, b, \"easeOutSine\",\n                    \"px\")));\n                this.prevX = A - e;\n                this.prevY = x;\n                this.prevTX = l;\n                this.prevTY = h\n            }\n        }\n    },\n    followMouse: function() {\n        if (this.follow && this.show) {\n            var a = this.chart.mouseX - this.offsetX * this.deltaSignX,\n                b = this.chart.mouseY;\n            this.pointToX = a;\n            this.pointToY = b;\n            if (a != this.previousX || b != this.previousY)\n                if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();\n                else {\n                    var c = this.set;\n                    if (c) {\n                        var d = c.getBBox(),\n                            a = a - d.width / 2,\n                            e = b - d.height - 10;\n                        a < this.l && (a = this.l);\n                        a > this.r - d.width && (a = this.r - d.width);\n                        e < this.t && (e = b + 10);\n                        c.translate(a, e);\n                        b = this.textDiv.style;\n                        b.left = a + this.horizontalPadding + \"px\";\n                        b.top = e + this.verticalPadding + \"px\"\n                    }\n                }\n        }\n    },\n    changeColor: function(a) {\n        this.balloonColor = a\n    },\n    setBounds: function(a, b, c, d) {\n        this.l = a;\n        this.t = b;\n        this.r = c;\n        this.b = d;\n        this.destroyTO && clearTimeout(this.destroyTO)\n    },\n    showBalloon: function(a) {\n        this.text = a;\n        this.show = !0;\n        this.destroyTO && clearTimeout(this.destroyTO);\n        a = this.chart;\n        this.fadeAnim1 && a.stopAnim(this.fadeAnim1);\n        this.fadeAnim2 && a.stopAnim(this.fadeAnim2);\n        this.draw()\n    },\n    hide: function() {\n        var a = this,\n            b = a.fadeOutDuration,\n            c = a.chart;\n        if (0 < b) {\n            a.destroyTO = setTimeout(function() {\n                a.destroy.call(a)\n            }, 1E3 * b);\n            a.follow = !1;\n            a.show = !1;\n            var d = a.set;\n            d && (d.setAttr(\"opacity\", a.fillAlpha), a.fadeAnim1 = d.animate({\n                opacity: 0\n            }, b, \"easeInSine\"));\n            a.textDiv && (a.fadeAnim2 = c.animate({\n                node: a.textDiv\n            }, \"opacity\", 1, 0, b, \"easeInSine\", \"\"))\n        }\n        else a.show = !1, a.follow = !1, a.destroy()\n    },\n    setPosition: function(a, b, c) {\n        this.pointToX = a;\n        this.pointToY = b;\n        c && (a == this.previousX && b == this.previousY || this.draw());\n        this.previousX = a;\n        this.previousY = b\n    },\n    followCursor: function(a) {\n        var b =\n            this;\n        (b.follow = a) ? (b.pShowBullet = b.showBullet, b.showBullet = !1) : void 0 !== b.pShowBullet && (b.showBullet = b.pShowBullet);\n        clearInterval(b.interval);\n        var c = b.chart.mouseX,\n            d = b.chart.mouseY;\n        !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = d, b.followMouse(), b.interval = setInterval(function() {\n            b.followMouse.call(b)\n        }, 40))\n    },\n    removeDiv: function() {\n        if (this.textDiv) {\n            var a = this.textDiv.parentNode;\n            a && a.removeChild(this.textDiv)\n        }\n    },\n    destroy: function() {\n        clearInterval(this.interval);\n        AmCharts.remove(this.set);\n        this.removeDiv();\n        this.set = null\n    }\n});\nAmCharts.AmCoordinateChart = AmCharts.Class({\n    inherits: AmCharts.AmChart,\n    construct: function(a) {\n        AmCharts.AmCoordinateChart.base.construct.call(this, a);\n        this.theme = a;\n        this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\");\n        this.startAlpha = 1;\n        this.startDuration = 0;\n        this.startEffect = \"elastic\";\n        this.sequencedAnimation = !0;\n        this.colors = \"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");\n        this.balloonDateFormat = \"MMM DD, YYYY\";\n        this.valueAxes = [];\n        this.graphs = [];\n        this.guides = [];\n        this.gridAboveGraphs = !1;\n        AmCharts.applyTheme(this, a, \"AmCoordinateChart\")\n    },\n    initChart: function() {\n        AmCharts.AmCoordinateChart.base.initChart.call(this);\n        var a = this.categoryAxis;\n        a && (this.categoryAxis = AmCharts.processObject(a, AmCharts.CategoryAxis, this.theme));\n        this.processValueAxes();\n        this.createValueAxes();\n        this.processGraphs();\n        this.processGuides();\n        AmCharts.VML && (this.startAlpha = 1);\n        this.setLegendData(this.graphs);\n        this.gridAboveGraphs &&\n            this.gridSet.toFront()\n    },\n    createValueAxes: function() {\n        if (0 === this.valueAxes.length) {\n            var a = new AmCharts.ValueAxis;\n            this.addValueAxis(a)\n        }\n    },\n    parseData: function() {\n        this.processValueAxes();\n        this.processGraphs()\n    },\n    parseSerialData: function() {\n        var a = this.graphs,\n            b, c = {},\n            d = this.seriesIdField;\n        d || (d = this.categoryField);\n        this.chartData = [];\n        var e = this.dataProvider;\n        if (e) {\n            var f = !1,\n                g, h = this.categoryAxis,\n                k, l;\n            h && (f = h.parseDates, k = h.forceShowField, l = h.labelColorField, g = h.categoryFunction);\n            var m, n, p = {},\n                q;\n            f && (b = AmCharts.extractPeriod(h.minPeriod),\n                m = b.period, n = b.count, q = AmCharts.getPeriodDuration(m, n));\n            var r = {};\n            this.lookupTable = r;\n            var s, w = this.dataDateFormat,\n                v = {};\n            for (s = 0; s < e.length; s++) {\n                var t = {},\n                    u = e[s];\n                b = u[this.categoryField];\n                t.dataContext = u;\n                t.category = g ? g(b, u, h) : String(b);\n                k && (t.forceShow = u[k]);\n                l && (t.labelColor = u[l]);\n                r[u[d]] = t;\n                if (f && (b = h.categoryFunction ? h.categoryFunction(b, u, h) : b instanceof Date ? AmCharts.newDate(b, h.minPeriod) : w ? AmCharts.stringToDate(b, w) : new Date(b), b = AmCharts.resetDateToMin(b, m, n, h.firstDayOfWeek), t.category = b, t.time = b.getTime(),\n                    isNaN(t.time))) continue;\n                var x = this.valueAxes;\n                t.axes = {};\n                t.x = {};\n                var E;\n                for (E = 0; E < x.length; E++) {\n                    var A = x[E].id;\n                    t.axes[A] = {};\n                    t.axes[A].graphs = {};\n                    var z;\n                    for (z = 0; z < a.length; z++) {\n                        b = a[z];\n                        var H = b.id,\n                            F = b.periodValue;\n                        if (b.valueAxis.id == A) {\n                            t.axes[A].graphs[H] = {};\n                            var G = {};\n                            G.index = s;\n                            var V = u;\n                            b.dataProvider && (V = c);\n                            G.values = this.processValues(V, b, F);\n                            !b.connect && v && v[H] && t.time - p[H] > 1.1 * q && (v[H].gap = !0);\n                            this.processFields(b, G, V);\n                            G.category = t.category;\n                            G.serialDataItem = t;\n                            G.graph = b;\n                            t.axes[A].graphs[H] = G;\n                            p[H] = t.time;\n                            v[H] =\n                                G\n                        }\n                    }\n                }\n                this.chartData[s] = t\n            }\n        }\n        for (c = 0; c < a.length; c++) b = a[c], b.dataProvider && this.parseGraphData(b)\n    },\n    processValues: function(a, b, c) {\n        var d = {},\n            e, f = !1;\n        \"candlestick\" != b.type && \"ohlc\" != b.type || \"\" === c || (f = !0);\n        e = Number(a[b.valueField + c]);\n        isNaN(e) || (d.value = e);\n        e = Number(a[b.errorField + c]);\n        isNaN(e) || (d.error = e);\n        f && (c = \"Open\");\n        e = Number(a[b.openField + c]);\n        isNaN(e) || (d.open = e);\n        f && (c = \"Close\");\n        e = Number(a[b.closeField + c]);\n        isNaN(e) || (d.close = e);\n        f && (c = \"Low\");\n        e = Number(a[b.lowField + c]);\n        isNaN(e) || (d.low = e);\n        f && (c = \"High\");\n        e = Number(a[b.highField +\n            c]);\n        isNaN(e) || (d.high = e);\n        return d\n    },\n    parseGraphData: function(a) {\n        var b = a.dataProvider,\n            c = a.seriesIdField;\n        c || (c = this.seriesIdField);\n        c || (c = this.categoryField);\n        var d;\n        for (d = 0; d < b.length; d++) {\n            var e = b[d],\n                f = this.lookupTable[String(e[c])],\n                g = a.valueAxis.id;\n            f && (g = f.axes[g].graphs[a.id], g.serialDataItem = f, g.values = this.processValues(e, a, a.periodValue), this.processFields(a, g, e))\n        }\n    },\n    addValueAxis: function(a) {\n        a.chart = this;\n        this.valueAxes.push(a);\n        this.validateData()\n    },\n    removeValueAxesAndGraphs: function() {\n        var a = this.valueAxes,\n            b;\n        for (b = a.length - 1; - 1 < b; b--) this.removeValueAxis(a[b])\n    },\n    removeValueAxis: function(a) {\n        var b = this.graphs,\n            c;\n        for (c = b.length - 1; 0 <= c; c--) {\n            var d = b[c];\n            d && d.valueAxis == a && this.removeGraph(d)\n        }\n        b = this.valueAxes;\n        for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);\n        this.validateData()\n    },\n    addGraph: function(a) {\n        this.graphs.push(a);\n        this.chooseGraphColor(a, this.graphs.length - 1);\n        this.validateData()\n    },\n    removeGraph: function(a) {\n        var b = this.graphs,\n            c;\n        for (c = b.length - 1; 0 <= c; c--) b[c] == a && (b.splice(c, 1), a.destroy());\n        this.validateData()\n    },\n    processValueAxes: function() {\n        var a = this.valueAxes,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b],\n                c = AmCharts.processObject(c, AmCharts.ValueAxis, this.theme);\n            a[b] = c;\n            c.chart = this;\n            c.id || (c.id = \"valueAxisAuto\" + b + \"_\" + (new Date).getTime());\n            void 0 === c.usePrefixes && (c.usePrefixes = this.usePrefixes)\n        }\n    },\n    processGuides: function() {\n        var a = this.guides,\n            b = this.categoryAxis;\n        if (a)\n            for (var c = 0; c < a.length; c++) {\n                var d = a[c];\n                (void 0 !== d.category || void 0 !== d.date) && b && b.addGuide(d);\n                var e = d.valueAxis;\n                e ? (AmCharts.isString(e) && (e = this.getValueAxisById(e)),\n                    e ? e.addGuide(d) : this.valueAxes[0].addGuide(d)) : isNaN(d.value) || this.valueAxes[0].addGuide(d)\n            }\n    },\n    processGraphs: function() {\n        var a = this.graphs,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b],\n                c = AmCharts.processObject(c, AmCharts.AmGraph, this.theme);\n            a[b] = c;\n            this.chooseGraphColor(c, b);\n            c.chart = this;\n            AmCharts.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis));\n            c.valueAxis || (c.valueAxis = this.valueAxes[0]);\n            c.id || (c.id = \"graphAuto\" + b + \"_\" + (new Date).getTime())\n        }\n    },\n    formatString: function(a, b, c) {\n        var d = b.graph,\n            e = d.valueAxis;\n        e.duration && b.values.value && (e = AmCharts.formatDuration(b.values.value, e.duration, \"\", e.durationUnits, e.maxInterval, e.numberFormatter), a = a.split(\"[[value]]\").join(e));\n        a = AmCharts.massReplace(a, {\n            \"[[title]]\": d.title,\n            \"[[description]]\": b.description\n        });\n        a = c ? AmCharts.fixNewLines(a) : AmCharts.fixBrakes(a);\n        return a = AmCharts.cleanFromEmpty(a)\n    },\n    getBalloonColor: function(a, b, c) {\n        var d = a.lineColor,\n            e = a.balloonColor;\n        c && (e = d);\n        c = a.fillColorsR;\n        \"object\" == typeof c ? d = c[0] : void 0 !== c && (d = c);\n        b.isNegative && (c = a.negativeLineColor,\n            a = a.negativeFillColors, \"object\" == typeof a ? c = a[0] : void 0 !== a && (c = a), void 0 !== c && (d = c));\n        void 0 !== b.color && (d = b.color);\n        void 0 === e && (e = d);\n        return e\n    },\n    getGraphById: function(a) {\n        return AmCharts.getObjById(this.graphs, a)\n    },\n    getValueAxisById: function(a) {\n        return AmCharts.getObjById(this.valueAxes, a)\n    },\n    processFields: function(a, b, c) {\n        if (a.itemColors) {\n            var d = a.itemColors,\n                e = b.index;\n            b.color = e < d.length ? d[e] : AmCharts.randomColor()\n        }\n        d = \"lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern\".split(\" \");\n        for (e = 0; e < d.length; e++) {\n            var f = d[e],\n                g = a[f + \"Field\"];\n            g && (g = c[g], AmCharts.isDefined(g) && (b[f] = g))\n        }\n        b.dataContext = c\n    },\n    chooseGraphColor: function(a, b) {\n        if (a.lineColor) a.lineColorR = a.lineColor;\n        else {\n            var c;\n            c = this.colors.length > b ? this.colors[b] : AmCharts.randomColor();\n            a.lineColorR = c\n        }\n        a.fillColorsR = a.fillColors ? a.fillColors : a.lineColorR;\n        a.bulletBorderColorR = a.bulletBorderColor ? a.bulletBorderColor : a.useLineColorForBulletBorder ? a.lineColorR : a.bulletColor;\n        a.bulletColorR = a.bulletColor ? a.bulletColor : a.lineColorR;\n        if (c =\n            this.patterns) a.pattern = c[b]\n    },\n    handleLegendEvent: function(a) {\n        var b = a.type;\n        a = a.dataItem;\n        if (!this.legend.data && a) {\n            var c = a.hidden,\n                d = a.showBalloon;\n            switch (b) {\n                case \"clickMarker\":\n                    this.textClickEnabled && (d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a));\n                    break;\n                case \"clickLabel\":\n                    d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a);\n                    break;\n                case \"rollOverItem\":\n                    c || this.highlightGraph(a);\n                    break;\n                case \"rollOutItem\":\n                    c || this.unhighlightGraph();\n                    break;\n                case \"hideItem\":\n                    this.hideGraph(a);\n                    break;\n                case \"showItem\":\n                    this.showGraph(a)\n            }\n        }\n    },\n    highlightGraph: function(a) {\n        var b = this.graphs,\n            c, d = .2;\n        this.legend && (d = this.legend.rollOverGraphAlpha);\n        if (1 != d)\n            for (c = 0; c < b.length; c++) {\n                var e = b[c];\n                e != a && e.changeOpacity(d)\n            }\n    },\n    unhighlightGraph: function() {\n        var a;\n        this.legend && (a = this.legend.rollOverGraphAlpha);\n        if (1 != a) {\n            a = this.graphs;\n            var b;\n            for (b = 0; b < a.length; b++) a[b].changeOpacity(1)\n        }\n    },\n    showGraph: function(a) {\n        a.switchable && (a.hidden = !1, this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), this.chartCreated && this.initChart())\n    },\n    hideGraph: function(a) {\n        a.switchable &&\n            (this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), a.hidden = !0, this.chartCreated && this.initChart())\n    },\n    hideGraphsBalloon: function(a) {\n        a.showBalloon = !1;\n        this.updateLegend()\n    },\n    showGraphsBalloon: function(a) {\n        a.showBalloon = !0;\n        this.updateLegend()\n    },\n    updateLegend: function() {\n        this.legend && this.legend.invalidateSize()\n    },\n    resetAnimation: function() {\n        var a = this.graphs;\n        if (a) {\n            var b;\n            for (b = 0; b < a.length; b++) a[b].animationPlayed = !1\n        }\n    },\n    animateAgain: function() {\n        this.resetAnimation();\n        this.validateNow()\n    }\n});\nAmCharts.AmSlicedChart = AmCharts.Class({\n    inherits: AmCharts.AmChart,\n    construct: function(a) {\n        this.createEvents(\"rollOverSlice\", \"rollOutSlice\", \"clickSlice\", \"pullOutSlice\", \"pullInSlice\", \"rightClickSlice\");\n        AmCharts.AmSlicedChart.base.construct.call(this, a);\n        this.colors = \"#FF0F00 #FF6600 #FF9E01 #FCD202 #F8FF01 #B0DE09 #04D215 #0D8ECF #0D52D1 #2A0CD0 #8A0CCF #CD0D74 #754DEB #DDDDDD #999999 #333333 #000000 #57032A #CA9726 #990000 #4B0C25\".split(\" \");\n        this.alpha = 1;\n        this.groupPercent = 0;\n        this.groupedTitle = \"Other\";\n        this.groupedPulled = !1;\n        this.groupedAlpha = 1;\n        this.marginLeft = 0;\n        this.marginBottom = this.marginTop = 10;\n        this.marginRight = 0;\n        this.hoverAlpha = 1;\n        this.outlineColor = \"#FFFFFF\";\n        this.outlineAlpha = 0;\n        this.outlineThickness = 1;\n        this.startAlpha = 0;\n        this.startDuration = 1;\n        this.startEffect = \"bounce\";\n        this.sequencedAnimation = !0;\n        this.pullOutDuration = 1;\n        this.pullOutEffect = \"bounce\";\n        this.pullOnHover = this.pullOutOnlyOne = !1;\n        this.labelsEnabled = !0;\n        this.labelTickColor = \"#000000\";\n        this.labelTickAlpha = .2;\n        this.hideLabelsPercent = 0;\n        this.urlTarget = \"_self\";\n        this.autoMarginOffset =\n            10;\n        this.gradientRatio = [];\n        this.maxLabelWidth = 200;\n        AmCharts.applyTheme(this, a, \"AmSlicedChart\")\n    },\n    initChart: function() {\n        AmCharts.AmSlicedChart.base.initChart.call(this);\n        this.dataChanged && (this.parseData(), this.dispatchDataUpdated = !0, this.dataChanged = !1, this.setLegendData(this.chartData));\n        this.drawChart()\n    },\n    handleLegendEvent: function(a) {\n        var b = a.type,\n            c = a.dataItem,\n            d = this.legend;\n        if (!d.data && c) {\n            var e = c.hidden;\n            a = a.event;\n            switch (b) {\n                case \"clickMarker\":\n                    e || d.switchable || this.clickSlice(c, a);\n                    break;\n                case \"clickLabel\":\n                    e ||\n                        this.clickSlice(c, a, !1);\n                    break;\n                case \"rollOverItem\":\n                    e || this.rollOverSlice(c, !1, a);\n                    break;\n                case \"rollOutItem\":\n                    e || this.rollOutSlice(c, a);\n                    break;\n                case \"hideItem\":\n                    this.hideSlice(c, a);\n                    break;\n                case \"showItem\":\n                    this.showSlice(c, a)\n            }\n        }\n    },\n    invalidateVisibility: function() {\n        this.recalculatePercents();\n        this.initChart();\n        var a = this.legend;\n        a && a.invalidateSize()\n    },\n    addEventListeners: function(a, b) {\n        var c = this;\n        a.mouseover(function(a) {\n            c.rollOverSlice(b, !0, a)\n        }).mouseout(function(a) {\n            c.rollOutSlice(b, a)\n        }).touchend(function(a) {\n            c.rollOverSlice(b,\n                a);\n            c.panEventsEnabled && c.clickSlice(b, a)\n        }).touchstart(function(a) {\n            c.rollOverSlice(b, a)\n        }).click(function(a) {\n            c.clickSlice(b, a)\n        }).contextmenu(function(a) {\n            c.handleRightClick(b, a)\n        })\n    },\n    formatString: function(a, b, c) {\n        a = AmCharts.formatValue(a, b, [\"value\"], this.nf, \"\", this.usePrefixes, this.prefixesOfSmallNumbers, this.prefixesOfBigNumbers);\n        a = AmCharts.formatValue(a, b, [\"percents\"], this.pf);\n        a = AmCharts.massReplace(a, {\n            \"[[title]]\": b.title,\n            \"[[description]]\": b.description\n        }); - 1 != a.indexOf(\"[[\") && (a = AmCharts.formatDataContextValue(a,\n            b.dataContext));\n        a = c ? AmCharts.fixNewLines(a) : AmCharts.fixBrakes(a);\n        return a = AmCharts.cleanFromEmpty(a)\n    },\n    startSlices: function() {\n        var a;\n        for (a = 0; a < this.chartData.length; a++) 0 < this.startDuration && this.sequencedAnimation ? this.setStartTO(a) : this.startSlice(this.chartData[a])\n    },\n    setStartTO: function(a) {\n        var b = this;\n        a = setTimeout(function() {\n            b.startSequenced.call(b)\n        }, b.startDuration / b.chartData.length * 500 * a);\n        b.timeOuts.push(a)\n    },\n    pullSlices: function(a) {\n        var b = this.chartData,\n            c;\n        for (c = 0; c < b.length; c++) {\n            var d = b[c];\n            d.pulled &&\n                this.pullSlice(d, 1, a)\n        }\n    },\n    startSequenced: function() {\n        var a = this.chartData,\n            b;\n        for (b = 0; b < a.length; b++)\n            if (!a[b].started) {\n                this.startSlice(this.chartData[b]);\n                break\n            }\n    },\n    startSlice: function(a) {\n        a.started = !0;\n        var b = a.wedge,\n            c = this.startDuration;\n        b && 0 < c && (0 < a.alpha && b.show(), b.translate(a.startX, a.startY), b.animate({\n            opacity: 1,\n            translate: \"0,0\"\n        }, c, this.startEffect))\n    },\n    showLabels: function() {\n        var a = this.chartData,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b];\n            if (0 < c.alpha) {\n                var d = c.label;\n                d && d.show();\n                (c = c.tick) && c.show()\n            }\n        }\n    },\n    showSlice: function(a) {\n        isNaN(a) ?\n            a.hidden = !1 : this.chartData[a].hidden = !1;\n        this.invalidateVisibility()\n    },\n    hideSlice: function(a) {\n        isNaN(a) ? a.hidden = !0 : this.chartData[a].hidden = !0;\n        this.hideBalloon();\n        this.invalidateVisibility()\n    },\n    rollOverSlice: function(a, b, c) {\n        isNaN(a) || (a = this.chartData[a]);\n        clearTimeout(this.hoverInt);\n        if (!a.hidden) {\n            this.pullOnHover && this.pullSlice(a, 1);\n            1 > this.hoverAlpha && a.wedge && a.wedge.attr({\n                opacity: this.hoverAlpha\n            });\n            var d = a.balloonX,\n                e = a.balloonY;\n            a.pulled && (d += a.pullX, e += a.pullY);\n            var f = this.formatString(this.balloonText,\n                    a, !0),\n                g = this.balloonFunction;\n            g && (f = g(a, f));\n            g = AmCharts.adjustLuminosity(a.color, -.15);\n            this.showBalloon(f, g, b, d, e);\n            a = {\n                type: \"rollOverSlice\",\n                dataItem: a,\n                chart: this,\n                event: c\n            };\n            this.fire(a.type, a)\n        }\n    },\n    rollOutSlice: function(a, b) {\n        isNaN(a) || (a = this.chartData[a]);\n        a.wedge && a.wedge.attr({\n            opacity: 1\n        });\n        this.hideBalloon();\n        var c = {\n            type: \"rollOutSlice\",\n            dataItem: a,\n            chart: this,\n            event: b\n        };\n        this.fire(c.type, c)\n    },\n    clickSlice: function(a, b, c) {\n        isNaN(a) || (a = this.chartData[a]);\n        a.pulled ? this.pullSlice(a, 0) : this.pullSlice(a, 1);\n        AmCharts.getURL(a.url,\n            this.urlTarget);\n        c || (a = {\n            type: \"clickSlice\",\n            dataItem: a,\n            chart: this,\n            event: b\n        }, this.fire(a.type, a))\n    },\n    handleRightClick: function(a, b) {\n        isNaN(a) || (a = this.chartData[a]);\n        var c = {\n            type: \"rightClickSlice\",\n            dataItem: a,\n            chart: this,\n            event: b\n        };\n        this.fire(c.type, c)\n    },\n    drawTicks: function() {\n        var a = this.chartData,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b];\n            if (c.label) {\n                var d = c.ty,\n                    d = AmCharts.line(this.container, [c.tx0, c.tx, c.tx2], [c.ty0, d, d], this.labelTickColor, this.labelTickAlpha);\n                c.tick = d;\n                c.wedge.push(d)\n            }\n        }\n    },\n    initialStart: function() {\n        var a =\n            this,\n            b = a.startDuration,\n            c = setTimeout(function() {\n                a.showLabels.call(a)\n            }, 1E3 * b);\n        a.timeOuts.push(c);\n        a.chartCreated ? a.pullSlices(!0) : (a.startSlices(), 0 < b ? (b = setTimeout(function() {\n            a.pullSlices.call(a)\n        }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices(!0))\n    },\n    pullSlice: function(a, b, c) {\n        var d = this.pullOutDuration;\n        !0 === c && (d = 0);\n        (c = a.wedge) && (0 < d ? c.animate({\n            translate: b * a.pullX + \",\" + b * a.pullY\n        }, d, this.pullOutEffect) : c.translate(b * a.pullX, b * a.pullY));\n        1 == b ? (a.pulled = !0, this.pullOutOnlyOne && this.pullInAll(a.index), a = {\n            type: \"pullOutSlice\",\n            dataItem: a,\n            chart: this\n        }) : (a.pulled = !1, a = {\n            type: \"pullInSlice\",\n            dataItem: a,\n            chart: this\n        });\n        this.fire(a.type, a)\n    },\n    pullInAll: function(a) {\n        var b = this.chartData,\n            c;\n        for (c = 0; c < this.chartData.length; c++) c != a && b[c].pulled && this.pullSlice(b[c], 0)\n    },\n    pullOutAll: function(a) {\n        a = this.chartData;\n        var b;\n        for (b = 0; b < a.length; b++) a[b].pulled || this.pullSlice(a[b], 1)\n    },\n    parseData: function() {\n        var a = [];\n        this.chartData = a;\n        var b = this.dataProvider;\n        isNaN(this.pieAlpha) || (this.alpha = this.pieAlpha);\n        if (void 0 !== b) {\n            var c = b.length,\n                d = 0,\n                e, f, g;\n            for (e = 0; e <\n                c; e++) {\n                f = {};\n                var h = b[e];\n                f.dataContext = h;\n                f.value = Number(h[this.valueField]);\n                (g = h[this.titleField]) || (g = \"\");\n                f.title = g;\n                f.pulled = AmCharts.toBoolean(h[this.pulledField], !1);\n                (g = h[this.descriptionField]) || (g = \"\");\n                f.description = g;\n                f.labelRadius = Number(h[this.labelRadiusField]);\n                f.switchable = !0;\n                f.url = h[this.urlField];\n                g = h[this.patternField];\n                !g && this.patterns && (g = this.patterns[e]);\n                f.pattern = g;\n                f.visibleInLegend = AmCharts.toBoolean(h[this.visibleInLegendField], !0);\n                g = h[this.alphaField];\n                f.alpha = void 0 !== g ? Number(g) :\n                    this.alpha;\n                g = h[this.colorField];\n                void 0 !== g && (f.color = AmCharts.toColor(g));\n                f.labelColor = AmCharts.toColor(h[this.labelColorField]);\n                d += f.value;\n                f.hidden = !1;\n                a[e] = f\n            }\n            for (e = b = 0; e < c; e++) f = a[e], f.percents = f.value / d * 100, f.percents < this.groupPercent && b++;\n            1 < b && (this.groupValue = 0, this.removeSmallSlices(), a.push({\n                title: this.groupedTitle,\n                value: this.groupValue,\n                percents: this.groupValue / d * 100,\n                pulled: this.groupedPulled,\n                color: this.groupedColor,\n                url: this.groupedUrl,\n                description: this.groupedDescription,\n                alpha: this.groupedAlpha,\n                pattern: this.groupedPattern,\n                dataContext: {}\n            }));\n            c = this.baseColor;\n            c || (c = this.pieBaseColor);\n            d = this.brightnessStep;\n            d || (d = this.pieBrightnessStep);\n            for (e = 0; e < a.length; e++) c ? g = AmCharts.adjustLuminosity(c, e * d / 100) : (g = this.colors[e], void 0 === g && (g = AmCharts.randomColor())), void 0 === a[e].color && (a[e].color = g);\n            this.recalculatePercents()\n        }\n    },\n    recalculatePercents: function() {\n        var a = this.chartData,\n            b = 0,\n            c, d;\n        for (c = 0; c < a.length; c++) d = a[c], !d.hidden && 0 < d.value && (b += d.value);\n        for (c = 0; c < a.length; c++) d = this.chartData[c], d.percents = !d.hidden && 0 < d.value ? 100 * d.value / b : 0\n    },\n    removeSmallSlices: function() {\n        var a = this.chartData,\n            b;\n        for (b = a.length - 1; 0 <= b; b--) a[b].percents < this.groupPercent && (this.groupValue += a[b].value, a.splice(b, 1))\n    },\n    animateAgain: function() {\n        var a = this;\n        a.startSlices();\n        for (var b = 0; b < a.chartData.length; b++) {\n            var c = a.chartData[b];\n            c.started = !1;\n            var d = c.wedge;\n            d && d.translate(c.startX, c.startY)\n        }\n        b = a.startDuration;\n        0 < b ? (b = setTimeout(function() {\n            a.pullSlices.call(a)\n        }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices()\n    },\n    measureMaxLabel: function() {\n        var a =\n            this.chartData,\n            b = 0,\n            c;\n        for (c = 0; c < a.length; c++) {\n            var d = a[c],\n                e = this.formatString(this.labelText, d),\n                f = this.labelFunction;\n            f && (e = f(d, e));\n            d = AmCharts.text(this.container, e, this.color, this.fontFamily, this.fontSize);\n            e = d.getBBox().width;\n            e > b && (b = e);\n            d.remove()\n        }\n        return b\n    }\n});\nAmCharts.AmRectangularChart = AmCharts.Class({\n    inherits: AmCharts.AmCoordinateChart,\n    construct: function(a) {\n        AmCharts.AmRectangularChart.base.construct.call(this, a);\n        this.theme = a;\n        this.createEvents(\"zoomed\");\n        this.marginRight = this.marginBottom = this.marginTop = this.marginLeft = 20;\n        this.verticalPosition = this.horizontalPosition = this.depth3D = this.angle = 0;\n        this.heightMultiplier = this.widthMultiplier = 1;\n        this.plotAreaFillColors = \"#FFFFFF\";\n        this.plotAreaFillAlphas = 0;\n        this.plotAreaBorderColor = \"#000000\";\n        this.plotAreaBorderAlpha =\n            0;\n        this.zoomOutButtonImageSize = 17;\n        this.zoomOutButtonImage = \"lens.png\";\n        this.zoomOutText = \"Show all\";\n        this.zoomOutButtonColor = \"#e5e5e5\";\n        this.zoomOutButtonAlpha = 0;\n        this.zoomOutButtonRollOverAlpha = 1;\n        this.zoomOutButtonPadding = 8;\n        this.trendLines = [];\n        this.autoMargins = !0;\n        this.marginsUpdated = !1;\n        this.autoMarginOffset = 10;\n        AmCharts.applyTheme(this, a, \"AmRectangularChart\")\n    },\n    initChart: function() {\n        AmCharts.AmRectangularChart.base.initChart.call(this);\n        this.updateDxy();\n        var a = !0;\n        !this.marginsUpdated && this.autoMargins && (this.resetMargins(),\n            a = !1);\n        this.processScrollbars();\n        this.updateMargins();\n        this.updatePlotArea();\n        this.updateScrollbars();\n        this.updateTrendLines();\n        this.updateChartCursor();\n        this.updateValueAxes();\n        a && (this.scrollbarOnly || this.updateGraphs())\n    },\n    drawChart: function() {\n        AmCharts.AmRectangularChart.base.drawChart.call(this);\n        this.drawPlotArea();\n        if (AmCharts.ifArray(this.chartData)) {\n            var a = this.chartCursor;\n            a && a.draw();\n            a = this.zoomOutText;\n            \"\" !== a && a && this.drawZoomOutButton()\n        }\n    },\n    resetMargins: function() {\n        var a = {},\n            b;\n        if (\"serial\" == this.type) {\n            var c =\n                this.valueAxes;\n            for (b = 0; b < c.length; b++) {\n                var d = c[b];\n                d.ignoreAxisWidth || (d.setOrientation(this.rotate), d.fixAxisPosition(), a[d.position] = !0)\n            }(b = this.categoryAxis) && !b.ignoreAxisWidth && (b.setOrientation(!this.rotate), b.fixAxisPosition(), b.fixAxisPosition(), a[b.position] = !0)\n        }\n        else {\n            d = this.xAxes;\n            c = this.yAxes;\n            for (b = 0; b < d.length; b++) {\n                var e = d[b];\n                e.ignoreAxisWidth || (e.setOrientation(!0), e.fixAxisPosition(), a[e.position] = !0)\n            }\n            for (b = 0; b < c.length; b++) d = c[b], d.ignoreAxisWidth || (d.setOrientation(!1), d.fixAxisPosition(),\n                a[d.position] = !0)\n        }\n        a.left && (this.marginLeft = 0);\n        a.right && (this.marginRight = 0);\n        a.top && (this.marginTop = 0);\n        a.bottom && (this.marginBottom = 0);\n        this.fixMargins = a\n    },\n    measureMargins: function() {\n        var a = this.valueAxes,\n            b, c = this.autoMarginOffset,\n            d = this.fixMargins,\n            e = this.realWidth,\n            f = this.realHeight,\n            g = c,\n            h = c,\n            k = e;\n        b = f;\n        var l;\n        for (l = 0; l < a.length; l++) b = this.getAxisBounds(a[l], g, k, h, b), g = Math.round(b.l), k = Math.round(b.r), h = Math.round(b.t), b = Math.round(b.b);\n        if (a = this.categoryAxis) b = this.getAxisBounds(a, g, k, h, b), g = Math.round(b.l),\n            k = Math.round(b.r), h = Math.round(b.t), b = Math.round(b.b);\n        d.left && g < c && (this.marginLeft = Math.round(-g + c));\n        d.right && k >= e - c && (this.marginRight = Math.round(k - e + c));\n        d.top && h < c + this.titleHeight && (this.marginTop = Math.round(this.marginTop - h + c + this.titleHeight));\n        d.bottom && b > f - c && (this.marginBottom = Math.round(this.marginBottom + b - f + c));\n        this.initChart()\n    },\n    getAxisBounds: function(a, b, c, d, e) {\n        if (!a.ignoreAxisWidth) {\n            var f = a.labelsSet,\n                g = a.tickLength;\n            a.inside && (g = 0);\n            if (f) switch (f = a.getBBox(), a.position) {\n                case \"top\":\n                    a = f.y;\n                    d > a && (d = a);\n                    break;\n                case \"bottom\":\n                    a = f.y + f.height;\n                    e < a && (e = a);\n                    break;\n                case \"right\":\n                    a = f.x + f.width + g + 3;\n                    c < a && (c = a);\n                    break;\n                case \"left\":\n                    a = f.x - g, b > a && (b = a)\n            }\n        }\n        return {\n            l: b,\n            t: d,\n            r: c,\n            b: e\n        }\n    },\n    drawZoomOutButton: function() {\n        var a = this,\n            b = a.container.set();\n        a.zoomButtonSet.push(b);\n        var c = a.color,\n            d = a.fontSize,\n            e = a.zoomOutButtonImageSize,\n            f = a.zoomOutButtonImage,\n            g = AmCharts.lang.zoomOutText || a.zoomOutText,\n            h = a.zoomOutButtonColor,\n            k = a.zoomOutButtonAlpha,\n            l = a.zoomOutButtonFontSize,\n            m = a.zoomOutButtonPadding;\n        isNaN(l) || (d = l);\n        (l = a.zoomOutButtonFontColor) &&\n        (c = l);\n        var l = a.zoomOutButton,\n            n;\n        l && (l.fontSize && (d = l.fontSize), l.color && (c = l.color), l.backgroundColor && (h = l.backgroundColor), isNaN(l.backgroundAlpha) || (a.zoomOutButtonRollOverAlpha = l.backgroundAlpha));\n        var p = l = 0;\n        void 0 !== a.pathToImages && f && (n = a.container.image(a.pathToImages + f, 0, 0, e, e), b.push(n), n = n.getBBox(), l = n.width + 5);\n        void 0 !== g && (c = AmCharts.text(a.container, g, c, a.fontFamily, d, \"start\"), d = c.getBBox(), p = n ? n.height / 2 - 3 : d.height / 2, c.translate(l, p), b.push(c));\n        n = b.getBBox();\n        c = 1;\n        AmCharts.isModern || (c = 0);\n        h = AmCharts.rect(a.container, n.width + 2 * m + 5, n.height + 2 * m - 2, h, 1, 1, h, c);\n        h.setAttr(\"opacity\", k);\n        h.translate(-m, -m);\n        b.push(h);\n        h.toBack();\n        a.zbBG = h;\n        n = h.getBBox();\n        b.translate(a.marginLeftReal + a.plotAreaWidth - n.width + m, a.marginTopReal + m);\n        b.hide();\n        b.mouseover(function() {\n            a.rollOverZB()\n        }).mouseout(function() {\n            a.rollOutZB()\n        }).click(function() {\n            a.clickZB()\n        }).touchstart(function() {\n            a.rollOverZB()\n        }).touchend(function() {\n            a.rollOutZB();\n            a.clickZB()\n        });\n        for (k = 0; k < b.length; k++) b[k].attr({\n            cursor: \"pointer\"\n        });\n        a.zbSet = b\n    },\n    rollOverZB: function() {\n        this.zbBG.setAttr(\"opacity\",\n            this.zoomOutButtonRollOverAlpha)\n    },\n    rollOutZB: function() {\n        this.zbBG.setAttr(\"opacity\", this.zoomOutButtonAlpha)\n    },\n    clickZB: function() {\n        this.zoomOut()\n    },\n    zoomOut: function() {\n        this.updateScrollbar = !0;\n        this.zoom()\n    },\n    drawPlotArea: function() {\n        var a = this.dx,\n            b = this.dy,\n            c = this.marginLeftReal,\n            d = this.marginTopReal,\n            e = this.plotAreaWidth - 1,\n            f = this.plotAreaHeight - 1,\n            g = this.plotAreaFillColors,\n            h = this.plotAreaFillAlphas,\n            k = this.plotAreaBorderColor,\n            l = this.plotAreaBorderAlpha;\n        this.trendLinesSet.clipRect(c, d, e, f);\n        \"object\" == typeof h &&\n            (h = h[0]);\n        g = AmCharts.polygon(this.container, [0, e, e, 0, 0], [0, 0, f, f, 0], g, h, 1, k, l, this.plotAreaGradientAngle);\n        g.translate(c + a, d + b);\n        this.set.push(g);\n        0 !== a && 0 !== b && (g = this.plotAreaFillColors, \"object\" == typeof g && (g = g[0]), g = AmCharts.adjustLuminosity(g, -.15), e = AmCharts.polygon(this.container, [0, a, e + a, e, 0], [0, b, b, 0, 0], g, h, 1, k, l), e.translate(c, d + f), this.set.push(e), a = AmCharts.polygon(this.container, [0, 0, a, a, 0], [0, f, f + b, b, 0], g, h, 1, k, l), a.translate(c, d), this.set.push(a));\n        (c = this.bbset) && this.scrollbarOnly && c.remove()\n    },\n    updatePlotArea: function() {\n        var a = this.updateWidth(),\n            b = this.updateHeight(),\n            c = this.container;\n        this.realWidth = a;\n        this.realWidth = b;\n        c && this.container.setSize(a, b);\n        a = a - this.marginLeftReal - this.marginRightReal - this.dx;\n        b = b - this.marginTopReal - this.marginBottomReal;\n        1 > a && (a = 1);\n        1 > b && (b = 1);\n        this.plotAreaWidth = Math.round(a);\n        this.plotAreaHeight = Math.round(b)\n    },\n    updateDxy: function() {\n        this.dx = Math.round(this.depth3D * Math.cos(this.angle * Math.PI / 180));\n        this.dy = Math.round(-this.depth3D * Math.sin(this.angle * Math.PI / 180));\n        this.d3x =\n            Math.round(this.columnSpacing3D * Math.cos(this.angle * Math.PI / 180));\n        this.d3y = Math.round(-this.columnSpacing3D * Math.sin(this.angle * Math.PI / 180))\n    },\n    updateMargins: function() {\n        var a = this.getTitleHeight();\n        this.titleHeight = a;\n        this.marginTopReal = this.marginTop - this.dy + a;\n        this.marginBottomReal = this.marginBottom;\n        this.marginLeftReal = this.marginLeft;\n        this.marginRightReal = this.marginRight\n    },\n    updateValueAxes: function() {\n        var a = this.valueAxes,\n            b = this.marginLeftReal,\n            c = this.marginTopReal,\n            d = this.plotAreaHeight,\n            e = this.plotAreaWidth,\n            f;\n        for (f = 0; f < a.length; f++) {\n            var g = a[f];\n            g.axisRenderer = AmCharts.RecAxis;\n            g.guideFillRenderer = AmCharts.RecFill;\n            g.axisItemRenderer = AmCharts.RecItem;\n            g.dx = this.dx;\n            g.dy = this.dy;\n            g.viW = e - 1;\n            g.viH = d - 1;\n            g.marginsChanged = !0;\n            g.viX = b;\n            g.viY = c;\n            this.updateObjectSize(g)\n        }\n    },\n    updateObjectSize: function(a) {\n        a.width = (this.plotAreaWidth - 1) * this.widthMultiplier;\n        a.height = (this.plotAreaHeight - 1) * this.heightMultiplier;\n        a.x = this.marginLeftReal + this.horizontalPosition;\n        a.y = this.marginTopReal + this.verticalPosition\n    },\n    updateGraphs: function() {\n        var a =\n            this.graphs,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b];\n            c.x = this.marginLeftReal + this.horizontalPosition;\n            c.y = this.marginTopReal + this.verticalPosition;\n            c.width = this.plotAreaWidth * this.widthMultiplier;\n            c.height = this.plotAreaHeight * this.heightMultiplier;\n            c.index = b;\n            c.dx = this.dx;\n            c.dy = this.dy;\n            c.rotate = this.rotate\n        }\n    },\n    updateChartCursor: function() {\n        var a = this.chartCursor;\n        a && (a = AmCharts.processObject(a, AmCharts.ChartCursor, this.theme), this.addChartCursor(a), a.x = this.marginLeftReal, a.y = this.marginTopReal, a.width = this.plotAreaWidth -\n            1, a.height = this.plotAreaHeight - 1, a.chart = this)\n    },\n    processScrollbars: function() {\n        var a = this.chartScrollbar;\n        a && (a = AmCharts.processObject(a, AmCharts.ChartScrollbar, this.theme), this.addChartScrollbar(a))\n    },\n    updateScrollbars: function() {},\n    addChartCursor: function(a) {\n        AmCharts.callMethod(\"destroy\", [this.chartCursor]);\n        a && (this.listenTo(a, \"changed\", this.handleCursorChange), this.listenTo(a, \"zoomed\", this.handleCursorZoom));\n        this.chartCursor = a\n    },\n    removeChartCursor: function() {\n        AmCharts.callMethod(\"destroy\", [this.chartCursor]);\n        this.chartCursor = null\n    },\n    zoomTrendLines: function() {\n        var a = this.trendLines,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b];\n            c.valueAxis.recalculateToPercents ? c.set && c.set.hide() : (c.x = this.marginLeftReal + this.horizontalPosition, c.y = this.marginTopReal + this.verticalPosition, c.draw())\n        }\n    },\n    addTrendLine: function(a) {\n        this.trendLines.push(a)\n    },\n    removeTrendLine: function(a) {\n        var b = this.trendLines,\n            c;\n        for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1)\n    },\n    adjustMargins: function(a, b) {\n        var c = a.scrollbarHeight + a.offset;\n        \"top\" == a.position ? b ?\n            this.marginLeftReal += c : this.marginTopReal += c : b ? this.marginRightReal += c : this.marginBottomReal += c\n    },\n    getScrollbarPosition: function(a, b, c) {\n        a.position = b ? \"bottom\" == c || \"left\" == c ? \"bottom\" : \"top\" : \"top\" == c || \"right\" == c ? \"bottom\" : \"top\"\n    },\n    updateChartScrollbar: function(a, b) {\n        if (a) {\n            a.rotate = b;\n            var c = this.marginTopReal,\n                d = this.marginLeftReal,\n                e = a.scrollbarHeight,\n                f = this.dx,\n                g = this.dy,\n                h = a.offset;\n            \"top\" == a.position ? b ? (a.y = c, a.x = d - e - h) : (a.y = c - e + g - 1 - h, a.x = d + f) : b ? (a.y = c + g, a.x = d + this.plotAreaWidth + f + h) : (a.y = c + this.plotAreaHeight +\n                h, a.x = this.marginLeftReal)\n        }\n    },\n    showZB: function(a) {\n        var b = this.zbSet;\n        b && (a ? b.show() : b.hide(), this.rollOutZB())\n    },\n    handleReleaseOutside: function(a) {\n        AmCharts.AmRectangularChart.base.handleReleaseOutside.call(this, a);\n        (a = this.chartCursor) && a.handleReleaseOutside()\n    },\n    handleMouseDown: function(a) {\n        AmCharts.AmRectangularChart.base.handleMouseDown.call(this, a);\n        var b = this.chartCursor;\n        b && b.handleMouseDown(a)\n    },\n    handleCursorChange: function(a) {}\n});\nAmCharts.TrendLine = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"TrendLine\";\n        this.createEvents(\"click\");\n        this.isProtected = !1;\n        this.dashLength = 0;\n        this.lineColor = \"#00CC00\";\n        this.lineThickness = this.lineAlpha = 1;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    draw: function() {\n        var a = this;\n        a.destroy();\n        var b = a.chart,\n            c = b.container,\n            d, e, f, g, h = a.categoryAxis,\n            k = a.initialDate,\n            l = a.initialCategory,\n            m = a.finalDate,\n            n = a.finalCategory,\n            p = a.valueAxis,\n            q = a.valueAxisX,\n            r = a.initialXValue,\n            s = a.finalXValue,\n            w = a.initialValue,\n            v = a.finalValue,\n            t = p.recalculateToPercents,\n            u = b.dataDateFormat;\n        h && (k && (k instanceof Date || (k = u ? AmCharts.stringToDate(k, u) : new Date(k)), a.initialDate = k, d = h.dateToCoordinate(k)), l && (d = h.categoryToCoordinate(l)), m && (m instanceof Date || (m = u ? AmCharts.stringToDate(m, u) : new Date(m)), a.finalDate = m, e = h.dateToCoordinate(m)), n && (e = h.categoryToCoordinate(n)));\n        q && !t && (isNaN(r) || (d = q.getCoordinate(r)), isNaN(s) || (e = q.getCoordinate(s)));\n        p && !t && (isNaN(w) || (f = p.getCoordinate(w)), isNaN(v) || (g = p.getCoordinate(v)));\n        isNaN(d) || isNaN(e) ||\n            isNaN(f) || isNaN(f) || (b.rotate ? (h = [f, g], e = [d, e]) : (h = [d, e], e = [f, g]), f = a.lineColor, d = AmCharts.line(c, h, e, f, a.lineAlpha, a.lineThickness, a.dashLength), g = h, k = e, n = h[1] - h[0], p = e[1] - e[0], 0 === n && (n = .01), 0 === p && (p = .01), l = n / Math.abs(n), m = p / Math.abs(p), p = n * p / Math.abs(n * p) * Math.sqrt(Math.pow(n, 2) + Math.pow(p, 2)), n = Math.asin(n / p), p = 90 * Math.PI / 180 - n, n = Math.abs(5 * Math.cos(p)), p = Math.abs(5 * Math.sin(p)), g.push(h[1] - l * p, h[0] - l * p), k.push(e[1] + m * n, e[0] + m * n), h = AmCharts.polygon(c, g, k, f, .005, 0), c = c.set([h, d]), c.translate(b.marginLeftReal,\n                b.marginTopReal), b.trendLinesSet.push(c), a.line = d, a.set = c, h.mouseup(function() {\n                a.handleLineClick()\n            }).mouseover(function() {\n                a.handleLineOver()\n            }).mouseout(function() {\n                a.handleLineOut()\n            }), h.touchend && h.touchend(function() {\n                a.handleLineClick()\n            }))\n    },\n    handleLineClick: function() {\n        var a = {\n            type: \"click\",\n            trendLine: this,\n            chart: this.chart\n        };\n        this.fire(a.type, a)\n    },\n    handleLineOver: function() {\n        var a = this.rollOverColor;\n        void 0 !== a && this.line.attr({\n            stroke: a\n        })\n    },\n    handleLineOut: function() {\n        this.line.attr({\n            stroke: this.lineColor\n        })\n    },\n    destroy: function() {\n        AmCharts.remove(this.set)\n    }\n});\nAmCharts.circle = function(a, b, c, d, e, f, g, h, k) {\n    if (void 0 == e || 0 === e) e = .01;\n    void 0 === f && (f = \"#000000\");\n    void 0 === g && (g = 0);\n    d = {\n        fill: c,\n        stroke: f,\n        \"fill-opacity\": d,\n        \"stroke-width\": e,\n        \"stroke-opacity\": g\n    };\n    a = isNaN(k) ? a.circle(0, 0, b).attr(d) : a.ellipse(0, 0, b, k).attr(d);\n    h && a.gradient(\"radialGradient\", [c, AmCharts.adjustLuminosity(c, -.6)]);\n    return a\n};\nAmCharts.text = function(a, b, c, d, e, f, g, h) {\n    f || (f = \"middle\");\n    \"right\" == f && (f = \"end\");\n    isNaN(h) && (h = 1);\n    void 0 !== b && (b = String(b), AmCharts.isIE && !AmCharts.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\")));\n    c = {\n        fill: c,\n        \"font-family\": d,\n        \"font-size\": e,\n        opacity: h\n    };\n    !0 === g && (c[\"font-weight\"] = \"bold\");\n    c[\"text-anchor\"] = f;\n    return a.text(b, c)\n};\nAmCharts.polygon = function(a, b, c, d, e, f, g, h, k, l, m) {\n    isNaN(f) && (f = .01);\n    isNaN(h) && (h = e);\n    var n = d,\n        p = !1;\n    \"object\" == typeof n && 1 < n.length && (p = !0, n = n[0]);\n    void 0 === g && (g = n);\n    e = {\n        fill: n,\n        stroke: g,\n        \"fill-opacity\": e,\n        \"stroke-width\": f,\n        \"stroke-opacity\": h\n    };\n    void 0 !== m && 0 < m && (e[\"stroke-dasharray\"] = m);\n    m = AmCharts.dx;\n    f = AmCharts.dy;\n    a.handDrawn && (c = AmCharts.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]);\n    g = Math.round;\n    l && (g = AmCharts.doNothing);\n    l = \"M\" + (g(b[0]) + m) + \",\" + (g(c[0]) + f);\n    for (h = 1; h < b.length; h++) l += \" L\" + (g(b[h]) + m) + \",\" + (g(c[h]) +\n        f);\n    a = a.path(l + \" Z\").attr(e);\n    p && a.gradient(\"linearGradient\", d, k);\n    return a\n};\nAmCharts.rect = function(a, b, c, d, e, f, g, h, k, l, m) {\n    isNaN(f) && (f = 0);\n    void 0 === k && (k = 0);\n    void 0 === l && (l = 270);\n    isNaN(e) && (e = 0);\n    var n = d,\n        p = !1;\n    \"object\" == typeof n && (n = n[0], p = !0);\n    void 0 === g && (g = n);\n    void 0 === h && (h = e);\n    b = Math.round(b);\n    c = Math.round(c);\n    var q = 0,\n        r = 0;\n    0 > b && (b = Math.abs(b), q = -b);\n    0 > c && (c = Math.abs(c), r = -c);\n    q += AmCharts.dx;\n    r += AmCharts.dy;\n    e = {\n        fill: n,\n        stroke: g,\n        \"fill-opacity\": e,\n        \"stroke-opacity\": h\n    };\n    void 0 !== m && 0 < m && (e[\"stroke-dasharray\"] = m);\n    a = a.rect(q, r, b, c, k, f).attr(e);\n    p && a.gradient(\"linearGradient\", d, l);\n    return a\n};\nAmCharts.bullet = function(a, b, c, d, e, f, g, h, k, l, m) {\n    var n;\n    \"circle\" == b && (b = \"round\");\n    switch (b) {\n        case \"round\":\n            n = AmCharts.circle(a, c / 2, d, e, f, g, h);\n            break;\n        case \"square\":\n            n = AmCharts.polygon(a, [-c / 2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], d, e, f, g, h, l - 180);\n            break;\n        case \"rectangle\":\n            n = AmCharts.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], d, e, f, g, h, l - 180);\n            break;\n        case \"diamond\":\n            n = AmCharts.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], d, e, f, g, h);\n            break;\n        case \"triangleUp\":\n            n = AmCharts.triangle(a, c, 0, d, e, f, g, h);\n            break;\n        case \"triangleDown\":\n            n = AmCharts.triangle(a,\n                c, 180, d, e, f, g, h);\n            break;\n        case \"triangleLeft\":\n            n = AmCharts.triangle(a, c, 270, d, e, f, g, h);\n            break;\n        case \"triangleRight\":\n            n = AmCharts.triangle(a, c, 90, d, e, f, g, h);\n            break;\n        case \"bubble\":\n            n = AmCharts.circle(a, c / 2, d, e, f, g, h, !0);\n            break;\n        case \"line\":\n            n = AmCharts.line(a, [-c / 2, c / 2], [0, 0], d, e, f, g, h);\n            break;\n        case \"yError\":\n            n = a.set();\n            n.push(AmCharts.line(a, [0, 0], [-c / 2, c / 2], d, e, f));\n            n.push(AmCharts.line(a, [-k, k], [-c / 2, -c / 2], d, e, f));\n            n.push(AmCharts.line(a, [-k, k], [c / 2, c / 2], d, e, f));\n            break;\n        case \"xError\":\n            n = a.set(), n.push(AmCharts.line(a, [-c /\n                2, c / 2\n            ], [0, 0], d, e, f)), n.push(AmCharts.line(a, [-c / 2, -c / 2], [-k, k], d, e, f)), n.push(AmCharts.line(a, [c / 2, c / 2], [-k, k], d, e, f))\n    }\n    n && n.pattern(m);\n    return n\n};\nAmCharts.triangle = function(a, b, c, d, e, f, g, h) {\n    if (void 0 === f || 0 === f) f = 1;\n    void 0 === g && (g = \"#000\");\n    void 0 === h && (h = 0);\n    d = {\n        fill: d,\n        stroke: g,\n        \"fill-opacity\": e,\n        \"stroke-width\": f,\n        \"stroke-opacity\": h\n    };\n    b /= 2;\n    var k;\n    0 === c && (k = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\");\n    180 == c && (k = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    90 == c && (k = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\");\n    270 == c && (k = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    return a.path(k).attr(d)\n};\nAmCharts.line = function(a, b, c, d, e, f, g, h, k, l, m) {\n    if (a.handDrawn && !m) return AmCharts.handDrawnLine(a, b, c, d, e, f, g, h, k, l, m);\n    f = {\n        fill: \"none\",\n        \"stroke-width\": f\n    };\n    void 0 !== g && 0 < g && (f[\"stroke-dasharray\"] = g);\n    isNaN(e) || (f[\"stroke-opacity\"] = e);\n    d && (f.stroke = d);\n    d = Math.round;\n    l && (d = AmCharts.doNothing);\n    l = AmCharts.dx;\n    e = AmCharts.dy;\n    g = \"M\" + (d(b[0]) + l) + \",\" + (d(c[0]) + e);\n    for (h = 1; h < b.length; h++) g += \" L\" + (d(b[h]) + l) + \",\" + (d(c[h]) + e);\n    if (AmCharts.VML) return a.path(g, void 0, !0).attr(f);\n    k && (g += \" M0,0 L0,0\");\n    return a.path(g).attr(f)\n};\nAmCharts.makeHD = function(a, b, c) {\n    for (var d = [], e = [], f = 1; f < a.length; f++)\n        for (var g = Number(a[f - 1]), h = Number(b[f - 1]), k = Number(a[f]), l = Number(b[f]), m = Math.sqrt(Math.pow(k - g, 2) + Math.pow(l - h, 2)), m = Math.round(m / 50) + 1, k = (k - g) / m, l = (l - h) / m, n = 0; n <= m; n++) {\n            var p = g + n * k + Math.random() * c,\n                q = h + n * l + Math.random() * c;\n            d.push(p);\n            e.push(q)\n        }\n    return [d, e]\n};\nAmCharts.handDrawnLine = function(a, b, c, d, e, f, g, h, k, l, m) {\n    var n = a.set();\n    for (m = 1; m < b.length; m++)\n        for (var p = [b[m - 1], b[m]], q = [c[m - 1], c[m]], q = AmCharts.makeHD(p, q, a.handDrawScatter), p = q[0], q = q[1], r = 1; r < p.length; r++) n.push(AmCharts.line(a, [p[r - 1], p[r]], [q[r - 1], q[r]], d, e, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, h, k, l, !0));\n    return n\n};\nAmCharts.doNothing = function(a) {\n    return a\n};\nAmCharts.wedge = function(a, b, c, d, e, f, g, h, k, l, m, n) {\n    var p = Math.round;\n    f = p(f);\n    g = p(g);\n    h = p(h);\n    var q = p(g / f * h),\n        r = AmCharts.VML,\n        s = 359.5 + f / 100;\n    359.94 < s && (s = 359.94);\n    e >= s && (e = s);\n    var w = 1 / 180 * Math.PI,\n        s = b + Math.sin(d * w) * h,\n        v = c - Math.cos(d * w) * q,\n        t = b + Math.sin(d * w) * f,\n        u = c - Math.cos(d * w) * g,\n        x = b + Math.sin((d + e) * w) * f,\n        E = c - Math.cos((d + e) * w) * g,\n        A = b + Math.sin((d + e) * w) * h,\n        w = c - Math.cos((d + e) * w) * q,\n        z = {\n            fill: AmCharts.adjustLuminosity(l.fill, -.2),\n            \"stroke-opacity\": 0,\n            \"fill-opacity\": l[\"fill-opacity\"]\n        },\n        H = 0;\n    180 < Math.abs(e) && (H = 1);\n    d = a.set();\n    var F;\n    r && (s = p(10 * s), t = p(10 * t), x = p(10 * x), A = p(10 * A), v = p(10 * v), u = p(10 * u), E = p(10 * E), w = p(10 * w), b = p(10 * b), k = p(10 * k), c = p(10 * c), f *= 10, g *= 10, h *= 10, q *= 10, 1 > Math.abs(e) && 1 >= Math.abs(x - t) && 1 >= Math.abs(E - u) && (F = !0));\n    e = \"\";\n    var G;\n    n && (z[\"fill-opacity\"] = 0, z[\"stroke-opacity\"] = l[\"stroke-opacity\"] / 2, z.stroke = l.stroke);\n    0 < k && (G = \" M\" + s + \",\" + (v + k) + \" L\" + t + \",\" + (u + k), r ? (F || (G += \" A\" + (b - f) + \",\" + (k + c - g) + \",\" + (b + f) + \",\" + (k + c + g) + \",\" + t + \",\" + (u + k) + \",\" + x + \",\" + (E + k)), G += \" L\" + A + \",\" + (w + k), 0 < h && (F || (G += \" B\" + (b - h) + \",\" + (k + c - q) + \",\" + (b + h) + \",\" + (k + c + q) +\n        \",\" + A + \",\" + (k + w) + \",\" + s + \",\" + (k + v)))) : (G += \" A\" + f + \",\" + g + \",0,\" + H + \",1,\" + x + \",\" + (E + k) + \" L\" + A + \",\" + (w + k), 0 < h && (G += \" A\" + h + \",\" + q + \",0,\" + H + \",0,\" + s + \",\" + (v + k))), G = a.path(G + \" Z\", void 0, void 0, \"1000,1000\").attr(z), d.push(G), G = a.path(\" M\" + s + \",\" + v + \" L\" + s + \",\" + (v + k) + \" L\" + t + \",\" + (u + k) + \" L\" + t + \",\" + u + \" L\" + s + \",\" + v + \" Z\", void 0, void 0, \"1000,1000\").attr(z), k = a.path(\" M\" + x + \",\" + E + \" L\" + x + \",\" + (E + k) + \" L\" + A + \",\" + (w + k) + \" L\" + A + \",\" + w + \" L\" + x + \",\" + E + \" Z\", void 0, void 0, \"1000,1000\").attr(z), d.push(G), d.push(k));\n    r ? (F || (e = \" A\" + p(b - f) + \",\" + p(c - g) +\n        \",\" + p(b + f) + \",\" + p(c + g) + \",\" + p(t) + \",\" + p(u) + \",\" + p(x) + \",\" + p(E)), f = \" M\" + p(s) + \",\" + p(v) + \" L\" + p(t) + \",\" + p(u) + e + \" L\" + p(A) + \",\" + p(w)) : f = \" M\" + s + \",\" + v + \" L\" + t + \",\" + u + (\" A\" + f + \",\" + g + \",0,\" + H + \",1,\" + x + \",\" + E) + \" L\" + A + \",\" + w;\n    0 < h && (r ? F || (f += \" B\" + (b - h) + \",\" + (c - q) + \",\" + (b + h) + \",\" + (c + q) + \",\" + A + \",\" + w + \",\" + s + \",\" + v) : f += \" A\" + h + \",\" + q + \",0,\" + H + \",0,\" + s + \",\" + v);\n    a.handDrawn && (b = AmCharts.line(a, [s, t], [v, u], l.stroke, l.thickness * Math.random() * a.handDrawThickness, l[\"stroke-opacity\"]), d.push(b));\n    a = a.path(f + \" Z\", void 0, void 0, \"1000,1000\").attr(l);\n    if (m) {\n        b = [];\n        for (c = 0; c < m.length; c++) b.push(AmCharts.adjustLuminosity(l.fill, m[c]));\n        0 < b.length && a.gradient(\"linearGradient\", b)\n    }\n    a.pattern(n);\n    d.push(a);\n    return d\n};\nAmCharts.adjustLuminosity = function(a, b) {\n    a = String(a).replace(/[^0-9a-f]/gi, \"\");\n    6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));\n    b = b || 0;\n    var c = \"#\",\n        d, e;\n    for (e = 0; 3 > e; e++) d = parseInt(a.substr(2 * e, 2), 16), d = Math.round(Math.min(Math.max(0, d + d * b), 255)).toString(16), c += (\"00\" + d).substr(d.length);\n    return c\n};\nAmCharts.Bezier = AmCharts.Class({\n    construct: function(a, b, c, d, e, f, g, h, k, l) {\n        \"object\" == typeof g && (g = g[0]);\n        \"object\" == typeof h && (h = h[0]);\n        f = {\n            fill: g,\n            \"fill-opacity\": h,\n            \"stroke-width\": f\n        };\n        void 0 !== k && 0 < k && (f[\"stroke-dasharray\"] = k);\n        isNaN(e) || (f[\"stroke-opacity\"] = e);\n        d && (f.stroke = d);\n        d = \"M\" + Math.round(b[0]) + \",\" + Math.round(c[0]);\n        e = [];\n        for (k = 0; k < b.length; k++) e.push({\n            x: Number(b[k]),\n            y: Number(c[k])\n        });\n        1 < e.length && (b = this.interpolate(e), d += this.drawBeziers(b));\n        l ? d += l : AmCharts.VML || (d += \"M0,0 L0,0\");\n        this.path = a.path(d).attr(f)\n    },\n    interpolate: function(a) {\n        var b = [];\n        b.push({\n            x: a[0].x,\n            y: a[0].y\n        });\n        var c = a[1].x - a[0].x,\n            d = a[1].y - a[0].y,\n            e = AmCharts.bezierX,\n            f = AmCharts.bezierY;\n        b.push({\n            x: a[0].x + c / e,\n            y: a[0].y + d / f\n        });\n        var g;\n        for (g = 1; g < a.length - 1; g++) {\n            var h = a[g - 1],\n                k = a[g],\n                d = a[g + 1];\n            isNaN(d.x) && (d = k);\n            isNaN(k.x) && (k = h);\n            isNaN(h.x) && (h = k);\n            c = d.x - k.x;\n            d = d.y - h.y;\n            h = k.x - h.x;\n            h > c && (h = c);\n            b.push({\n                x: k.x - h / e,\n                y: k.y - d / f\n            });\n            b.push({\n                x: k.x,\n                y: k.y\n            });\n            b.push({\n                x: k.x + h / e,\n                y: k.y + d / f\n            })\n        }\n        d = a[a.length - 1].y - a[a.length - 2].y;\n        c = a[a.length - 1].x - a[a.length - 2].x;\n        b.push({\n            x: a[a.length - 1].x -\n                c / e,\n            y: a[a.length - 1].y - d / f\n        });\n        b.push({\n            x: a[a.length - 1].x,\n            y: a[a.length - 1].y\n        });\n        return b\n    },\n    drawBeziers: function(a) {\n        var b = \"\",\n            c;\n        for (c = 0; c < (a.length - 1) / 3; c++) b += this.drawBezierMidpoint(a[3 * c], a[3 * c + 1], a[3 * c + 2], a[3 * c + 3]);\n        return b\n    },\n    drawBezierMidpoint: function(a, b, c, d) {\n        var e = Math.round,\n            f = this.getPointOnSegment(a, b, .75),\n            g = this.getPointOnSegment(d, c, .75),\n            h = (d.x - a.x) / 16,\n            k = (d.y - a.y) / 16,\n            l = this.getPointOnSegment(a, b, .375);\n        a = this.getPointOnSegment(f, g, .375);\n        a.x -= h;\n        a.y -= k;\n        b = this.getPointOnSegment(g, f, .375);\n        b.x += h;\n        b.y +=\n            k;\n        c = this.getPointOnSegment(d, c, .375);\n        h = this.getMiddle(l, a);\n        f = this.getMiddle(f, g);\n        g = this.getMiddle(b, c);\n        l = \" Q\" + e(l.x) + \",\" + e(l.y) + \",\" + e(h.x) + \",\" + e(h.y);\n        l += \" Q\" + e(a.x) + \",\" + e(a.y) + \",\" + e(f.x) + \",\" + e(f.y);\n        l += \" Q\" + e(b.x) + \",\" + e(b.y) + \",\" + e(g.x) + \",\" + e(g.y);\n        return l += \" Q\" + e(c.x) + \",\" + e(c.y) + \",\" + e(d.x) + \",\" + e(d.y)\n    },\n    getMiddle: function(a, b) {\n        return {\n            x: (a.x + b.x) / 2,\n            y: (a.y + b.y) / 2\n        }\n    },\n    getPointOnSegment: function(a, b, c) {\n        return {\n            x: a.x + (b.x - a.x) * c,\n            y: a.y + (b.y - a.y) * c\n        }\n    }\n});\nAmCharts.AmDraw = AmCharts.Class({\n    construct: function(a, b, c, d) {\n        AmCharts.SVG_NS = \"http://www.w3.org/2000/svg\";\n        AmCharts.SVG_XLINK = \"http://www.w3.org/1999/xlink\";\n        AmCharts.hasSVG = !!document.createElementNS && !!document.createElementNS(AmCharts.SVG_NS, \"svg\").createSVGRect;\n        1 > b && (b = 10);\n        1 > c && (c = 10);\n        this.div = a;\n        this.width = b;\n        this.height = c;\n        this.rBin = document.createElement(\"div\");\n        if (AmCharts.hasSVG) {\n            AmCharts.SVG = !0;\n            var e = this.createSvgElement(\"svg\");\n            e.style.position = \"absolute\";\n            e.style.width = b + \"px\";\n            e.style.height = c +\n                \"px\";\n            b = this.createSvgElement(\"desc\");\n            b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + d.version));\n            e.appendChild(b);\n            AmCharts.rtl && (e.setAttribute(\"direction\", \"rtl\"), e.style.left = \"auto\", e.style.right = \"0px\");\n            e.setAttribute(\"version\", \"1.1\");\n            a.appendChild(e);\n            this.container = e;\n            this.R = new AmCharts.SVGRenderer(this)\n        }\n        else AmCharts.isIE && AmCharts.VMLRenderer && (AmCharts.VML = !0, AmCharts.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ?\n            (e = document.createStyleSheet(), e.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), AmCharts.vmlStyleSheet = e) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new AmCharts.VMLRenderer(this, d), this.R.disableSelection(a))\n    },\n    createSvgElement: function(a) {\n        return document.createElementNS(AmCharts.SVG_NS, a)\n    },\n    circle: function(a, b, c, d) {\n        var e = new AmCharts.AmDObject(\"circle\", this);\n        e.attr({\n            r: c,\n            cx: a,\n            cy: b\n        });\n        this.addToContainer(e.node, d);\n        return e\n    },\n    ellipse: function(a, b, c, d, e) {\n        var f = new AmCharts.AmDObject(\"ellipse\", this);\n        f.attr({\n            rx: c,\n            ry: d,\n            cx: a,\n            cy: b\n        });\n        this.addToContainer(f.node, e);\n        return f\n    },\n    setSize: function(a, b) {\n        0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\")\n    },\n    rect: function(a, b, c, d, e, f, g) {\n        var h = new AmCharts.AmDObject(\"rect\", this);\n        AmCharts.VML && (e = Math.round(100 * e / Math.min(c, d)), c += 2 * f, d += 2 * f, h.bw = f, h.node.style.marginLeft = -f, h.node.style.marginTop = -f);\n        1 > c && (c =\n            1);\n        1 > d && (d = 1);\n        h.attr({\n            x: a,\n            y: b,\n            width: c,\n            height: d,\n            rx: e,\n            ry: e,\n            \"stroke-width\": f\n        });\n        this.addToContainer(h.node, g);\n        return h\n    },\n    image: function(a, b, c, d, e, f) {\n        var g = new AmCharts.AmDObject(\"image\", this);\n        g.attr({\n            x: b,\n            y: c,\n            width: d,\n            height: e\n        });\n        this.R.path(g, a);\n        this.addToContainer(g.node, f);\n        return g\n    },\n    addToContainer: function(a, b) {\n        b || (b = this.container);\n        b.appendChild(a)\n    },\n    text: function(a, b, c) {\n        return this.R.text(a, b, c)\n    },\n    path: function(a, b, c, d) {\n        var e = new AmCharts.AmDObject(\"path\", this);\n        d || (d = \"100,100\");\n        e.attr({\n            cs: d\n        });\n        c ? e.attr({\n                dd: a\n            }) :\n            e.attr({\n                d: a\n            });\n        this.addToContainer(e.node, b);\n        return e\n    },\n    set: function(a) {\n        return this.R.set(a)\n    },\n    remove: function(a) {\n        if (a) {\n            var b = this.rBin;\n            b.appendChild(a);\n            b.innerHTML = \"\"\n        }\n    },\n    renderFix: function() {\n        var a = this.container,\n            b = a.style,\n            c;\n        try {\n            c = a.getScreenCTM() || a.createSVGMatrix()\n        }\n        catch (d) {\n            c = a.createSVGMatrix()\n        }\n        a = 1 - c.e % 1;\n        c = 1 - c.f % 1;.5 < a && (a -= 1);.5 < c && (c -= 1);\n        a && (b.left = a + \"px\");\n        c && (b.top = c + \"px\")\n    },\n    update: function() {\n        this.R.update()\n    }\n});\nAmCharts.AmDObject = AmCharts.Class({\n    construct: function(a, b) {\n        this.D = b;\n        this.R = b.R;\n        this.node = this.R.create(this, a);\n        this.y = this.x = 0;\n        this.scale = 1\n    },\n    attr: function(a) {\n        this.R.attr(this, a);\n        return this\n    },\n    getAttr: function(a) {\n        return this.node.getAttribute(a)\n    },\n    setAttr: function(a, b) {\n        this.R.setAttr(this, a, b);\n        return this\n    },\n    clipRect: function(a, b, c, d) {\n        this.R.clipRect(this, a, b, c, d)\n    },\n    translate: function(a, b, c, d) {\n        d || (a = Math.round(a), b = Math.round(b));\n        this.R.move(this, a, b, c);\n        this.x = a;\n        this.y = b;\n        this.scale = c;\n        this.angle && this.rotate(this.angle)\n    },\n    rotate: function(a, b) {\n        this.R.rotate(this, a, b);\n        this.angle = a\n    },\n    animate: function(a, b, c) {\n        for (var d in a)\n            if (a.hasOwnProperty(d)) {\n                var e = d,\n                    f = a[d];\n                c = AmCharts.getEffect(c);\n                this.R.animate(this, e, f, b, c)\n            }\n    },\n    push: function(a) {\n        if (a) {\n            var b = this.node;\n            b.appendChild(a.node);\n            var c = a.clipPath;\n            c && b.appendChild(c);\n            (a = a.grad) && b.appendChild(a)\n        }\n    },\n    text: function(a) {\n        this.R.setText(this, a)\n    },\n    remove: function() {\n        this.R.remove(this)\n    },\n    clear: function() {\n        var a = this.node;\n        if (a.hasChildNodes())\n            for (; 1 <= a.childNodes.length;) a.removeChild(a.firstChild)\n    },\n    hide: function() {\n        this.setAttr(\"visibility\", \"hidden\")\n    },\n    show: function() {\n        this.setAttr(\"visibility\", \"visible\")\n    },\n    getBBox: function() {\n        return this.R.getBBox(this)\n    },\n    toFront: function() {\n        var a = this.node;\n        if (a) {\n            this.prevNextNode = a.nextSibling;\n            var b = a.parentNode;\n            b && b.appendChild(a)\n        }\n    },\n    toPrevious: function() {\n        var a = this.node;\n        a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null)\n    },\n    toBack: function() {\n        var a = this.node;\n        if (a) {\n            this.prevNextNode = a.nextSibling;\n            var b = a.parentNode;\n            if (b) {\n                var c = b.firstChild;\n                c && b.insertBefore(a, c)\n            }\n        }\n    },\n    mouseover: function(a) {\n        this.R.addListener(this, \"mouseover\", a);\n        return this\n    },\n    mouseout: function(a) {\n        this.R.addListener(this, \"mouseout\", a);\n        return this\n    },\n    click: function(a) {\n        this.R.addListener(this, \"click\", a);\n        return this\n    },\n    dblclick: function(a) {\n        this.R.addListener(this, \"dblclick\", a);\n        return this\n    },\n    mousedown: function(a) {\n        this.R.addListener(this, \"mousedown\", a);\n        return this\n    },\n    mouseup: function(a) {\n        this.R.addListener(this, \"mouseup\", a);\n        return this\n    },\n    touchstart: function(a) {\n        this.R.addListener(this,\n            \"touchstart\", a);\n        return this\n    },\n    touchend: function(a) {\n        this.R.addListener(this, \"touchend\", a);\n        return this\n    },\n    contextmenu: function(a) {\n        this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a);\n        return this\n    },\n    stop: function(a) {\n        (a = this.animationX) && AmCharts.removeFromArray(this.R.animations, a);\n        (a = this.animationY) && AmCharts.removeFromArray(this.R.animations, a)\n    },\n    length: function() {\n        return this.node.childNodes.length\n    },\n    gradient: function(a, b, c) {\n        this.R.gradient(this,\n            a, b, c)\n    },\n    pattern: function(a, b) {\n        a && this.R.pattern(this, a, b)\n    }\n});\nAmCharts.VMLRenderer = AmCharts.Class({\n    construct: function(a, b) {\n        this.chart = b;\n        this.D = a;\n        this.cNames = {\n            circle: \"oval\",\n            ellipse: \"oval\",\n            rect: \"roundrect\",\n            path: \"shape\"\n        };\n        this.styleMap = {\n            x: \"left\",\n            y: \"top\",\n            width: \"width\",\n            height: \"height\",\n            \"font-family\": \"fontFamily\",\n            \"font-size\": \"fontSize\",\n            visibility: \"visibility\"\n        }\n    },\n    create: function(a, b) {\n        var c;\n        if (\"group\" == b) c = document.createElement(\"div\"), a.type = \"div\";\n        else if (\"text\" == b) c = document.createElement(\"div\"), a.type = \"text\";\n        else if (\"image\" == b) c = document.createElement(\"img\"), a.type =\n            \"image\";\n        else {\n            a.type = \"shape\";\n            a.shapeType = this.cNames[b];\n            c = document.createElement(\"amvml:\" + this.cNames[b]);\n            var d = document.createElement(\"amvml:stroke\");\n            c.appendChild(d);\n            a.stroke = d;\n            var e = document.createElement(\"amvml:fill\");\n            c.appendChild(e);\n            a.fill = e;\n            e.className = \"amvml\";\n            d.className = \"amvml\";\n            c.className = \"amvml\"\n        }\n        c.style.position = \"absolute\";\n        c.style.top = 0;\n        c.style.left = 0;\n        return c\n    },\n    path: function(a, b) {\n        a.node.setAttribute(\"src\", b)\n    },\n    setAttr: function(a, b, c) {\n        if (void 0 !== c) {\n            var d;\n            8 === document.documentMode && (d = !0);\n            var e = a.node,\n                f = a.type,\n                g = e.style;\n            \"r\" == b && (g.width = 2 * c, g.height = 2 * c);\n            \"oval\" == a.shapeType && (\"rx\" == b && (g.width = 2 * c), \"ry\" == b && (g.height = 2 * c));\n            \"roundrect\" != a.shapeType || \"width\" != b && \"height\" != b || (c -= 1);\n            \"cursor\" == b && (g.cursor = c);\n            \"cx\" == b && (g.left = c - AmCharts.removePx(g.width) / 2);\n            \"cy\" == b && (g.top = c - AmCharts.removePx(g.height) / 2);\n            var h = this.styleMap[b];\n            void 0 !== h && (g[h] = c);\n            \"text\" == f && (\"text-anchor\" == b && (a.anchor = c, h = e.clientWidth, \"end\" == c && (g.marginLeft = -h + \"px\"), \"middle\" == c && (g.marginLeft = -(h / 2) + \"px\", g.textAlign =\n                \"center\"), \"start\" == c && (g.marginLeft = \"0px\")), \"fill\" == b && (g.color = c), \"font-weight\" == b && (g.fontWeight = c));\n            if (g = a.children)\n                for (h = 0; h < g.length; h++) g[h].setAttr(b, c);\n            if (\"shape\" == f) {\n                \"cs\" == b && (e.style.width = \"100px\", e.style.height = \"100px\", e.setAttribute(\"coordsize\", c));\n                \"d\" == b && e.setAttribute(\"path\", this.svgPathToVml(c));\n                \"dd\" == b && e.setAttribute(\"path\", c);\n                f = a.stroke;\n                a = a.fill;\n                \"stroke\" == b && (d ? f.color = c : f.setAttribute(\"color\", c));\n                \"stroke-width\" == b && (d ? f.weight = c : f.setAttribute(\"weight\", c));\n                \"stroke-opacity\" == b &&\n                    (d ? f.opacity = c : f.setAttribute(\"opacity\", c));\n                \"stroke-dasharray\" == b && (g = \"solid\", 0 < c && 3 > c && (g = \"dot\"), 3 <= c && 6 >= c && (g = \"dash\"), 6 < c && (g = \"longdash\"), d ? f.dashstyle = g : f.setAttribute(\"dashstyle\", g));\n                if (\"fill-opacity\" == b || \"opacity\" == b) 0 === c ? d ? a.on = !1 : a.setAttribute(\"on\", !1) : d ? a.opacity = c : a.setAttribute(\"opacity\", c);\n                \"fill\" == b && (d ? a.color = c : a.setAttribute(\"color\", c));\n                \"rx\" == b && (d ? e.arcSize = c + \"%\" : e.setAttribute(\"arcsize\", c + \"%\"))\n            }\n        }\n    },\n    attr: function(a, b) {\n        for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c])\n    },\n    text: function(a,\n        b, c) {\n        var d = new AmCharts.AmDObject(\"text\", this.D),\n            e = d.node;\n        e.style.whiteSpace = \"pre\";\n        e.innerHTML = a;\n        this.D.addToContainer(e, c);\n        this.attr(d, b);\n        return d\n    },\n    getBBox: function(a) {\n        return this.getBox(a.node)\n    },\n    getBox: function(a) {\n        var b = a.offsetLeft,\n            c = a.offsetTop,\n            d = a.offsetWidth,\n            e = a.offsetHeight,\n            f;\n        if (a.hasChildNodes()) {\n            var g, h, k;\n            for (k = 0; k < a.childNodes.length; k++) {\n                f = this.getBox(a.childNodes[k]);\n                var l = f.x;\n                isNaN(l) || (isNaN(g) ? g = l : l < g && (g = l));\n                var m = f.y;\n                isNaN(m) || (isNaN(h) ? h = m : m < h && (h = m));\n                l = f.width + l;\n                isNaN(l) || (d = Math.max(d,\n                    l));\n                f = f.height + m;\n                isNaN(f) || (e = Math.max(e, f))\n            }\n            0 > g && (b += g);\n            0 > h && (c += h)\n        }\n        return {\n            x: b,\n            y: c,\n            width: d,\n            height: e\n        }\n    },\n    setText: function(a, b) {\n        var c = a.node;\n        c && (c.innerHTML = b);\n        this.setAttr(a, \"text-anchor\", a.anchor)\n    },\n    addListener: function(a, b, c) {\n        a.node[\"on\" + b] = c\n    },\n    move: function(a, b, c) {\n        var d = a.node,\n            e = d.style;\n        \"text\" == a.type && (c -= AmCharts.removePx(e.fontSize) / 2 - 1);\n        \"oval\" == a.shapeType && (b -= AmCharts.removePx(e.width) / 2, c -= AmCharts.removePx(e.height) / 2);\n        a = a.bw;\n        isNaN(a) || (b -= a, c -= a);\n        isNaN(b) || isNaN(c) || (d.style.left = b + \"px\", d.style.top =\n            c + \"px\")\n    },\n    svgPathToVml: function(a) {\n        var b = a.split(\" \");\n        a = \"\";\n        var c, d = Math.round,\n            e;\n        for (e = 0; e < b.length; e++) {\n            var f = b[e],\n                g = f.substring(0, 1),\n                f = f.substring(1),\n                h = f.split(\",\"),\n                k = d(h[0]) + \",\" + d(h[1]);\n            \"M\" == g && (a += \" m \" + k);\n            \"L\" == g && (a += \" l \" + k);\n            \"Z\" == g && (a += \" x e\");\n            if (\"Q\" == g) {\n                var l = c.length,\n                    m = c[l - 1],\n                    n = h[0],\n                    p = h[1],\n                    k = h[2],\n                    q = h[3];\n                c = d(c[l - 2] / 3 + 2 / 3 * n);\n                m = d(m / 3 + 2 / 3 * p);\n                n = d(2 / 3 * n + k / 3);\n                p = d(2 / 3 * p + q / 3);\n                a += \" c \" + c + \",\" + m + \",\" + n + \",\" + p + \",\" + k + \",\" + q\n            }\n            \"A\" == g && (a += \" wa \" + f);\n            \"B\" == g && (a += \" at \" + f);\n            c = h\n        }\n        return a\n    },\n    animate: function(a, b, c, d,\n        e) {\n        var f = a.node,\n            g = this.chart;\n        if (\"translate\" == b) {\n            b = c.split(\",\");\n            c = b[1];\n            var h = f.offsetTop;\n            g.animate(a, \"left\", f.offsetLeft, b[0], d, e, \"px\");\n            g.animate(a, \"top\", h, c, d, e, \"px\")\n        }\n    },\n    clipRect: function(a, b, c, d, e) {\n        a = a.node;\n        0 === b && 0 === c ? (a.style.width = d + \"px\", a.style.height = e + \"px\", a.style.overflow = \"hidden\") : a.style.clip = \"rect(\" + c + \"px \" + (b + d) + \"px \" + (c + e) + \"px \" + b + \"px)\"\n    },\n    rotate: function(a, b, c) {\n        if (0 !== Number(b)) {\n            var d = a.node;\n            a = d.style;\n            c || (c = this.getBGColor(d.parentNode));\n            a.backgroundColor = c;\n            a.paddingLeft = 1;\n            c = b * Math.PI /\n                180;\n            var e = Math.cos(c),\n                f = Math.sin(c),\n                g = AmCharts.removePx(a.left),\n                h = AmCharts.removePx(a.top),\n                k = d.offsetWidth,\n                d = d.offsetHeight;\n            b /= Math.abs(b);\n            a.left = g + k / 2 - k / 2 * Math.cos(c) - b * d / 2 * Math.sin(c) + 3;\n            a.top = h - b * k / 2 * Math.sin(c) + b * d / 2 * Math.sin(c);\n            a.cssText = a.cssText + \"; filter:progid:DXImageTransform.Microsoft.Matrix(M11='\" + e + \"', M12='\" + -f + \"', M21='\" + f + \"', M22='\" + e + \"', sizingmethod='auto expand');\"\n        }\n    },\n    getBGColor: function(a) {\n        var b = \"#FFFFFF\";\n        if (a.style) {\n            var c = a.style.backgroundColor;\n            \"\" !== c ? b = c : a.parentNode && (b = this.getBGColor(a.parentNode))\n        }\n        return b\n    },\n    set: function(a) {\n        var b = new AmCharts.AmDObject(\"group\", this.D);\n        this.D.container.appendChild(b.node);\n        if (a) {\n            var c;\n            for (c = 0; c < a.length; c++) b.push(a[c])\n        }\n        return b\n    },\n    gradient: function(a, b, c, d) {\n        var e = \"\";\n        \"radialGradient\" == b && (b = \"gradientradial\", c.reverse());\n        \"linearGradient\" == b && (b = \"gradient\");\n        var f;\n        for (f = 0; f < c.length; f++) {\n            var g = Math.round(100 * f / (c.length - 1)),\n                e = e + (g + \"% \" + c[f]);\n            f < c.length - 1 && (e += \",\")\n        }\n        a = a.fill;\n        90 == d ? d = 0 : 270 == d ? d = 180 : 180 == d ? d = 90 : 0 === d && (d = 270);\n        8 === document.documentMode ? (a.type = b, a.angle = d) : (a.setAttribute(\"type\",\n            b), a.setAttribute(\"angle\", d));\n        e && (a.colors.value = e)\n    },\n    remove: function(a) {\n        a.clipPath && this.D.remove(a.clipPath);\n        this.D.remove(a.node)\n    },\n    disableSelection: function(a) {\n        void 0 !== typeof a.onselectstart && (a.onselectstart = function() {\n            return !1\n        });\n        a.style.cursor = \"default\"\n    },\n    pattern: function(a, b) {\n        var c = a.node,\n            d = a.fill,\n            e = \"none\";\n        b.color && (e = b.color);\n        c.fillColor = e;\n        8 === document.documentMode ? (d.type = \"tile\", d.src = b.url) : (d.setAttribute(\"type\", \"tile\"), d.setAttribute(\"src\", b.url))\n    },\n    update: function() {}\n});\nAmCharts.SVGRenderer = AmCharts.Class({\n    construct: function(a) {\n        this.D = a;\n        this.animations = []\n    },\n    create: function(a, b) {\n        return document.createElementNS(AmCharts.SVG_NS, b)\n    },\n    attr: function(a, b) {\n        for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c])\n    },\n    setAttr: function(a, b, c) {\n        void 0 !== c && a.node.setAttribute(b, c)\n    },\n    animate: function(a, b, c, d, e) {\n        var f = a.node;\n        a[\"an_\" + b] && AmCharts.removeFromArray(this.animations, a[\"an_\" + b]);\n        \"translate\" == b ? (f = (f = f.getAttribute(\"transform\")) ? String(f).substring(10, f.length - 1) : \"0,0\", f =\n            f.split(\", \").join(\" \"), f = f.split(\" \").join(\",\"), 0 === f && (f = \"0,0\")) : f = Number(f.getAttribute(b));\n        c = {\n            obj: a,\n            frame: 0,\n            attribute: b,\n            from: f,\n            to: c,\n            time: d,\n            effect: e\n        };\n        this.animations.push(c);\n        a[\"an_\" + b] = c\n    },\n    update: function() {\n        var a, b = this.animations;\n        for (a = b.length - 1; 0 <= a; a--) {\n            var c = b[a],\n                d = 1E3 * c.time / AmCharts.updateRate,\n                e = c.frame + 1,\n                f = c.obj,\n                g = c.attribute,\n                h, k, l;\n            e <= d ? (c.frame++, \"translate\" == g ? (h = c.from.split(\",\"), g = Number(h[0]), h = Number(h[1]), isNaN(h) && (h = 0), k = c.to.split(\",\"), l = Number(k[0]), k = Number(k[1]), l = 0 === l - g ? l :\n                Math.round(AmCharts[c.effect](0, e, g, l - g, d)), c = 0 === k - h ? k : Math.round(AmCharts[c.effect](0, e, h, k - h, d)), g = \"transform\", c = \"translate(\" + l + \",\" + c + \")\") : (k = Number(c.from), h = Number(c.to), l = h - k, c = AmCharts[c.effect](0, e, k, l, d), isNaN(c) && (c = h), 0 === l && this.animations.splice(a, 1)), this.setAttr(f, g, c)) : (\"translate\" == g ? (k = c.to.split(\",\"), l = Number(k[0]), k = Number(k[1]), f.translate(l, k)) : (h = Number(c.to), this.setAttr(f, g, h)), this.animations.splice(a, 1))\n        }\n    },\n    getBBox: function(a) {\n        if (a = a.node) try {\n            return a.getBBox()\n        }\n        catch (b) {}\n        return {\n            width: 0,\n            height: 0,\n            x: 0,\n            y: 0\n        }\n    },\n    path: function(a, b) {\n        a.node.setAttributeNS(AmCharts.SVG_XLINK, \"xlink:href\", b)\n    },\n    clipRect: function(a, b, c, d, e) {\n        var f = a.node,\n            g = a.clipPath;\n        g && this.D.remove(g);\n        var h = f.parentNode;\n        h && (f = document.createElementNS(AmCharts.SVG_NS, \"clipPath\"), g = AmCharts.getUniqueId(), f.setAttribute(\"id\", g), this.D.rect(b, c, d, e, 0, 0, f), h.appendChild(f), b = \"#\", AmCharts.baseHref && !AmCharts.isIE && (b = window.location.href + b), this.setAttr(a, \"clip-path\", \"url(\" + b + g + \")\"), this.clipPathC++, a.clipPath = f)\n    },\n    text: function(a, b,\n        c) {\n        var d = new AmCharts.AmDObject(\"text\", this.D);\n        a = String(a).split(\"\\n\");\n        var e = b[\"font-size\"],\n            f;\n        for (f = 0; f < a.length; f++) {\n            var g = this.create(null, \"tspan\");\n            g.appendChild(document.createTextNode(a[f]));\n            g.setAttribute(\"y\", (e + 2) * f + Math.round(e / 2));\n            g.setAttribute(\"x\", 0);\n            d.node.appendChild(g)\n        }\n        d.node.setAttribute(\"y\", Math.round(e / 2));\n        this.attr(d, b);\n        this.D.addToContainer(d.node, c);\n        return d\n    },\n    setText: function(a, b) {\n        var c = a.node;\n        c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)))\n    },\n    move: function(a,\n        b, c, d) {\n        b = \"translate(\" + b + \",\" + c + \")\";\n        d && (b = b + \" scale(\" + d + \")\");\n        this.setAttr(a, \"transform\", b)\n    },\n    rotate: function(a, b) {\n        var c = a.node.getAttribute(\"transform\"),\n            d = \"rotate(\" + b + \")\";\n        c && (d = c + \" \" + d);\n        this.setAttr(a, \"transform\", d)\n    },\n    set: function(a) {\n        var b = new AmCharts.AmDObject(\"g\", this.D);\n        this.D.container.appendChild(b.node);\n        if (a) {\n            var c;\n            for (c = 0; c < a.length; c++) b.push(a[c])\n        }\n        return b\n    },\n    addListener: function(a, b, c) {\n        a.node[\"on\" + b] = c\n    },\n    gradient: function(a, b, c, d) {\n        var e = a.node,\n            f = a.grad;\n        f && this.D.remove(f);\n        b = document.createElementNS(AmCharts.SVG_NS,\n            b);\n        f = AmCharts.getUniqueId();\n        b.setAttribute(\"id\", f);\n        if (!isNaN(d)) {\n            var g = 0,\n                h = 0,\n                k = 0,\n                l = 0;\n            90 == d ? k = 100 : 270 == d ? l = 100 : 180 == d ? g = 100 : 0 === d && (h = 100);\n            b.setAttribute(\"x1\", g + \"%\");\n            b.setAttribute(\"x2\", h + \"%\");\n            b.setAttribute(\"y1\", k + \"%\");\n            b.setAttribute(\"y2\", l + \"%\")\n        }\n        for (d = 0; d < c.length; d++) g = document.createElementNS(AmCharts.SVG_NS, \"stop\"), h = 100 * d / (c.length - 1), 0 === d && (h = 0), g.setAttribute(\"offset\", h + \"%\"), g.setAttribute(\"stop-color\", c[d]), b.appendChild(g);\n        e.parentNode.appendChild(b);\n        c = \"#\";\n        AmCharts.baseHref && !AmCharts.isIE &&\n            (c = window.location.href + c);\n        e.setAttribute(\"fill\", \"url(\" + c + f + \")\");\n        a.grad = b\n    },\n    pattern: function(a, b, c) {\n        var d = a.node;\n        isNaN(c) && (c = 1);\n        var e = a.patternNode;\n        e && this.D.remove(e);\n        var e = document.createElementNS(AmCharts.SVG_NS, \"pattern\"),\n            f = AmCharts.getUniqueId(),\n            g = b;\n        b.url && (g = b.url);\n        var h = Number(b.width);\n        isNaN(h) && (h = 4);\n        var k = Number(b.height);\n        isNaN(k) && (k = 4);\n        h /= c;\n        k /= c;\n        c = b.x;\n        isNaN(c) && (c = 0);\n        var l = -Math.random() * Number(b.randomX);\n        isNaN(l) || (c = l);\n        l = b.y;\n        isNaN(l) && (l = 0);\n        var m = -Math.random() * Number(b.randomY);\n        isNaN(m) ||\n            (l = m);\n        e.setAttribute(\"id\", f);\n        e.setAttribute(\"width\", h);\n        e.setAttribute(\"height\", k);\n        e.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\n        e.setAttribute(\"xlink:href\", g);\n        b.color && (m = document.createElementNS(AmCharts.SVG_NS, \"rect\"), m.setAttributeNS(null, \"height\", h), m.setAttributeNS(null, \"width\", k), m.setAttributeNS(null, \"fill\", b.color), e.appendChild(m));\n        this.D.image(g, 0, 0, h, k, e).translate(c, l);\n        g = \"#\";\n        AmCharts.baseHref && !AmCharts.isIE && (g = window.location.href + g);\n        d.setAttribute(\"fill\", \"url(\" + g + f + \")\");\n        a.patternNode =\n            e;\n        d.parentNode.appendChild(e)\n    },\n    remove: function(a) {\n        a.clipPath && this.D.remove(a.clipPath);\n        a.grad && this.D.remove(a.grad);\n        a.patternNode && this.D.remove(a.patternNode);\n        this.D.remove(a.node)\n    }\n});\nAmCharts.AmDSet = AmCharts.Class({\n    construct: function(a) {\n        this.create(\"g\")\n    },\n    attr: function(a) {\n        this.R.attr(this.node, a)\n    },\n    move: function(a, b) {\n        this.R.move(this.node, a, b)\n    }\n});\nAmCharts.AmLegend = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"AmLegend\";\n        this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"rollOverItem\", \"rollOutItem\", \"clickLabel\");\n        this.position = \"bottom\";\n        this.borderColor = this.color = \"#000000\";\n        this.borderAlpha = 0;\n        this.markerLabelGap = 5;\n        this.verticalGap = 10;\n        this.align = \"left\";\n        this.horizontalGap = 0;\n        this.spacing = 10;\n        this.markerDisabledColor = \"#AAB3B3\";\n        this.markerType = \"square\";\n        this.markerSize = 16;\n        this.markerBorderThickness =\n            this.markerBorderAlpha = 1;\n        this.marginBottom = this.marginTop = 0;\n        this.marginLeft = this.marginRight = 20;\n        this.autoMargins = !0;\n        this.valueWidth = 50;\n        this.switchable = !0;\n        this.switchType = \"x\";\n        this.switchColor = \"#FFFFFF\";\n        this.rollOverColor = \"#CC0000\";\n        this.reversedOrder = !1;\n        this.labelText = \"[[title]]\";\n        this.valueText = \"[[value]]\";\n        this.useMarkerColorForLabels = !1;\n        this.rollOverGraphAlpha = 1;\n        this.textClickEnabled = !1;\n        this.equalWidths = !0;\n        this.dateFormat = \"DD-MM-YYYY\";\n        this.backgroundColor = \"#FFFFFF\";\n        this.backgroundAlpha = 0;\n        this.useGraphSettings = !1;\n        this.showEntries = !0;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    setData: function(a) {\n        this.legendData = a;\n        this.invalidateSize()\n    },\n    invalidateSize: function() {\n        this.destroy();\n        this.entries = [];\n        this.valueLabels = [];\n        (AmCharts.ifArray(this.legendData) || AmCharts.ifArray(this.data)) && this.drawLegend()\n    },\n    drawLegend: function() {\n        var a = this.chart,\n            b = this.position,\n            c = this.width,\n            d = a.divRealWidth,\n            e = a.divRealHeight,\n            f = this.div,\n            g = this.legendData;\n        this.data && (g = this.data);\n        isNaN(this.fontSize) && (this.fontSize = a.fontSize);\n        if (\"right\" ==\n            b || \"left\" == b) this.maxColumns = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);\n        else if (this.autoMargins) {\n            this.marginRight = a.marginRight;\n            this.marginLeft = a.marginLeft;\n            var h = a.autoMarginOffset;\n            \"bottom\" == b ? (this.marginBottom = h, this.marginTop = 0) : (this.marginTop = h, this.marginBottom = 0)\n        }\n        var k;\n        void 0 !== c ? k = AmCharts.toCoordinate(c, d) : \"right\" != b && \"left\" != b && (k = a.realWidth);\n        \"outside\" == b ? (k = f.offsetWidth, e = f.offsetHeight, f.clientHeight && (k = f.clientWidth, e = f.clientHeight)) : (isNaN(k) || (f.style.width = k + \"px\"),\n            f.className = \"amChartsLegend\");\n        this.divWidth = k;\n        (b = this.container) ? (b.container.innerHTML = \"\", f.appendChild(b.container), b.setSize(k, e)) : b = new AmCharts.AmDraw(f, k, e, a);\n        this.container = b;\n        this.lx = 0;\n        this.ly = 8;\n        e = this.markerSize;\n        e > this.fontSize && (this.ly = e / 2 - 1);\n        0 < e && (this.lx += e + this.markerLabelGap);\n        this.titleWidth = 0;\n        if (e = this.title) a = AmCharts.text(this.container, e, this.color, a.fontFamily, this.fontSize, \"start\", !0), a.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = a.getBBox(), this.titleWidth =\n            a.width + 15, this.titleHeight = a.height + 6;\n        this.index = this.maxLabelWidth = 0;\n        if (this.showEntries) {\n            for (a = 0; a < g.length; a++) this.createEntry(g[a]);\n            for (a = this.index = 0; a < g.length; a++) this.createValue(g[a])\n        }\n        this.arrangeEntries();\n        this.updateValues()\n    },\n    arrangeEntries: function() {\n        var a = this.position,\n            b = this.marginLeft + this.titleWidth,\n            c = this.marginRight,\n            d = this.marginTop,\n            e = this.marginBottom,\n            f = this.horizontalGap,\n            g = this.div,\n            h = this.divWidth,\n            k = this.maxColumns,\n            l = this.verticalGap,\n            m = this.spacing,\n            n = h - c - b,\n            p = 0,\n            q = 0,\n            r = this.container;\n        this.set && this.set.remove();\n        var s = r.set();\n        this.set = s;\n        r = r.set();\n        s.push(r);\n        var w = this.entries,\n            v, t;\n        for (t = 0; t < w.length; t++) {\n            v = w[t].getBBox();\n            var u = v.width;\n            u > p && (p = u);\n            v = v.height;\n            v > q && (q = v)\n        }\n        var u = q = 0,\n            x = f,\n            E = 0,\n            A = 0;\n        for (t = 0; t < w.length; t++) {\n            var z = w[t];\n            this.reversedOrder && (z = w[w.length - t - 1]);\n            v = z.getBBox();\n            var H;\n            this.equalWidths ? H = f + u * (p + m + this.markerLabelGap) : (H = x, x = x + v.width + f + m);\n            v.height > A && (A = v.height);\n            H + v.width > n && 0 < t && 0 !== u && (q++, u = 0, H = f, x = H + v.width + f + m, E = E + A + l, A = 0);\n            z.translate(H, E);\n            u++;\n            !isNaN(k) && u >= k &&\n                (u = 0, q++, E = E + A + l, A = 0);\n            r.push(z)\n        }\n        v = r.getBBox();\n        k = v.height + 2 * l - 1;\n        \"left\" == a || \"right\" == a ? (h = v.width + 2 * f, g.style.width = h + b + c + \"px\") : h = h - b - c - 1;\n        c = AmCharts.polygon(this.container, [0, h, h, 0], [0, 0, k, k], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n        s.push(c);\n        s.translate(b, d);\n        c.toBack();\n        b = f;\n        if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a) \"center\" == this.align ? b = f + (h - v.width) / 2 : \"right\" == this.align && (b = f + h - v.width);\n        r.translate(b, l + 1);\n        this.titleHeight > k && (k = this.titleHeight);\n        a = k + d + e + 1;\n        0 > a && (a = 0);\n        g.style.height = Math.round(a) + \"px\"\n    },\n    createEntry: function(a) {\n        if (!1 !== a.visibleInLegend) {\n            var b = this.chart,\n                c = a.markerType;\n            c || (c = this.markerType);\n            var d = a.color,\n                e = a.alpha;\n            a.legendKeyColor && (d = a.legendKeyColor());\n            a.legendKeyAlpha && (e = a.legendKeyAlpha());\n            var f;\n            !0 === a.hidden && (f = d = this.markerDisabledColor);\n            var g = a.pattern,\n                h = a.customMarker;\n            h || (h = this.customMarker);\n            var k = this.container,\n                l = this.markerSize,\n                m = 0,\n                n = 0,\n                p = l / 2;\n            if (this.useGraphSettings)\n                if (m = a.type, this.switchType = void 0, \"line\" == m ||\n                    \"step\" == m || \"smoothedLine\" == m || \"ohlc\" == m) g = k.set(), a.hidden || (d = a.lineColorR, f = a.bulletBorderColorR), n = AmCharts.line(k, [0, 2 * l], [l / 2, l / 2], d, a.lineAlpha, a.lineThickness, a.dashLength), g.push(n), a.bullet && (a.hidden || (d = a.bulletColorR), n = AmCharts.bullet(k, a.bullet, a.bulletSize, d, a.bulletAlpha, a.bulletBorderThickness, f, a.bulletBorderAlpha)) && (n.translate(l + 1, l / 2), g.push(n)), p = 0, m = l, n = l / 3;\n                else {\n                    var q;\n                    a.getGradRotation && (q = a.getGradRotation());\n                    m = a.fillColorsR;\n                    !0 === a.hidden && (m = d);\n                    if (g = this.createMarker(\"rectangle\",\n                        m, a.fillAlphas, a.lineThickness, d, a.lineAlpha, q, g)) p = l, g.translate(p, l / 2);\n                    m = l\n                }\n            else h ? (b.path && (h = b.path + h), g = k.image(h, 0, 0, l, l)) : (g = this.createMarker(c, d, e, void 0, void 0, void 0, void 0, g)) && g.translate(l / 2, l / 2);\n            this.addListeners(g, a);\n            k = k.set([g]);\n            this.switchable && a.switchable && k.setAttr(\"cursor\", \"pointer\");\n            (f = this.switchType) && \"none\" != f && (\"x\" == f ? (q = this.createX(), q.translate(l / 2, l / 2)) : q = this.createV(), q.dItem = a, !0 !== a.hidden ? \"x\" == f ? q.hide() : q.show() : \"x\" != f && q.hide(), this.switchable || q.hide(), this.addListeners(q,\n                a), a.legendSwitch = q, k.push(q));\n            f = this.color;\n            a.showBalloon && this.textClickEnabled && void 0 !== this.selectedColor && (f = this.selectedColor);\n            this.useMarkerColorForLabels && (f = d);\n            !0 === a.hidden && (f = this.markerDisabledColor);\n            d = AmCharts.massReplace(this.labelText, {\n                \"[[title]]\": a.title\n            });\n            q = this.fontSize;\n            g && l <= q && g.translate(p, l / 2 + this.ly - q / 2 + (q + 2 - l) / 2 - n);\n            var r;\n            d && (d = AmCharts.fixBrakes(d), a.legendTextReal = d, r = this.labelWidth, r = isNaN(r) ? AmCharts.text(this.container, d, f, b.fontFamily, q, \"start\") : AmCharts.wrappedText(this.container,\n                d, f, b.fontFamily, q, \"start\", !1, r, 0), r.translate(this.lx + m, this.ly), k.push(r), b = r.getBBox().width, this.maxLabelWidth < b && (this.maxLabelWidth = b));\n            this.entries[this.index] = k;\n            a.legendEntry = this.entries[this.index];\n            a.legendLabel = r;\n            this.index++\n        }\n    },\n    addListeners: function(a, b) {\n        var c = this;\n        a && a.mouseover(function(a) {\n            c.rollOverMarker(b, a)\n        }).mouseout(function(a) {\n            c.rollOutMarker(b, a)\n        }).click(function(a) {\n            c.clickMarker(b, a)\n        })\n    },\n    rollOverMarker: function(a, b) {\n        this.switchable && this.dispatch(\"rollOverMarker\", a, b);\n        this.dispatch(\"rollOverItem\",\n            a, b)\n    },\n    rollOutMarker: function(a, b) {\n        this.switchable && this.dispatch(\"rollOutMarker\", a, b);\n        this.dispatch(\"rollOutItem\", a, b)\n    },\n    clickMarker: function(a, b) {\n        this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n        this.dispatch(\"clickMarker\", a, b)\n    },\n    rollOverLabel: function(a, b) {\n        a.hidden || (this.textClickEnabled && a.legendLabel && a.legendLabel.attr({\n            fill: this.rollOverColor\n        }), this.dispatch(\"rollOverItem\", a, b))\n    },\n    rollOutLabel: function(a, b) {\n        if (!a.hidden) {\n            if (this.textClickEnabled && a.legendLabel) {\n                var c =\n                    this.color;\n                void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);\n                this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));\n                a.legendLabel.attr({\n                    fill: c\n                })\n            }\n            this.dispatch(\"rollOutItem\", a, b)\n        }\n    },\n    clickLabel: function(a, b) {\n        this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b))\n    },\n    dispatch: function(a, b, c) {\n        this.fire(a, {\n            type: a,\n            dataItem: b,\n            target: this,\n            event: c,\n            chart: this.chart\n        })\n    },\n    createValue: function(a) {\n        var b =\n            this,\n            c = b.fontSize;\n        if (!1 !== a.visibleInLegend) {\n            var d = b.maxLabelWidth;\n            b.equalWidths || (b.valueAlign = \"left\");\n            \"left\" == b.valueAlign && (d = a.legendEntry.getBBox().width);\n            var e = d;\n            if (b.valueText && 0 < b.valueWidth) {\n                var f = b.color;\n                b.useMarkerColorForValues && (f = a.color, a.legendKeyColor && (f = a.legendKeyColor()));\n                !0 === a.hidden && (f = b.markerDisabledColor);\n                var g = b.valueText,\n                    d = d + b.lx + b.markerLabelGap + b.valueWidth,\n                    h = \"end\";\n                \"left\" == b.valueAlign && (d -= b.valueWidth, h = \"start\");\n                f = AmCharts.text(b.container, g, f, b.chart.fontFamily,\n                    c, h);\n                f.translate(d, b.ly);\n                b.entries[b.index].push(f);\n                e += b.valueWidth + 2 * b.markerLabelGap;\n                f.dItem = a;\n                b.valueLabels.push(f)\n            }\n            b.index++;\n            f = b.markerSize;\n            f < c + 7 && (f = c + 7, AmCharts.VML && (f += 3));\n            c = b.container.rect(b.markerSize, 0, e, f, 0, 0).attr({\n                stroke: \"none\",\n                fill: \"#ffffff\",\n                \"fill-opacity\": .005\n            });\n            c.dItem = a;\n            b.entries[b.index - 1].push(c);\n            c.mouseover(function(c) {\n                b.rollOverLabel(a, c)\n            }).mouseout(function(c) {\n                b.rollOutLabel(a, c)\n            }).click(function(c) {\n                b.clickLabel(a, c)\n            })\n        }\n    },\n    createV: function() {\n        var a = this.markerSize;\n        return AmCharts.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor)\n    },\n    createX: function() {\n        var a = (this.markerSize - 4) / 2,\n            b = {\n                stroke: this.switchColor,\n                \"stroke-width\": 3\n            },\n            c = this.container,\n            d = AmCharts.line(c, [-a, a], [-a, a]).attr(b),\n            a = AmCharts.line(c, [-a, a], [a, -a]).attr(b);\n        return this.container.set([d, a])\n    },\n    createMarker: function(a, b, c, d, e, f, g, h) {\n        var k = this.markerSize,\n            l = this.container;\n        e || (e = this.markerBorderColor);\n        e || (e = b);\n        isNaN(d) && (d = this.markerBorderThickness);\n        isNaN(f) && (f = this.markerBorderAlpha);\n        return AmCharts.bullet(l,\n            a, k, b, c, d, e, f, k, g, h)\n    },\n    validateNow: function() {\n        this.invalidateSize()\n    },\n    updateValues: function() {\n        var a = this.valueLabels,\n            b = this.chart,\n            c, d = this.data;\n        for (c = 0; c < a.length; c++) {\n            var e = a[c],\n                f = e.dItem,\n                g = \" \";\n            if (d) f.value ? e.text(f.value) : e.text(\"\");\n            else {\n                if (void 0 !== f.type) {\n                    var h = f.currentDataItem,\n                        k = this.periodValueText;\n                    f.legendPeriodValueText && (k = f.legendPeriodValueText);\n                    h ? (g = this.valueText, f.legendValueText && (g = f.legendValueText), g = b.formatString(g, h)) : k && (g = b.formatPeriodString(k, f))\n                }\n                else g = b.formatString(this.valueText,\n                    f); if (k = this.valueFunction) h && (f = h), g = k(f, g);\n                e.text(g)\n            }\n        }\n    },\n    renderFix: function() {\n        if (!AmCharts.VML) {\n            var a = this.container;\n            a && a.renderFix()\n        }\n    },\n    destroy: function() {\n        this.div.innerHTML = \"\";\n        AmCharts.remove(this.set)\n    }\n});\nAmCharts.formatMilliseconds = function(a, b) {\n    if (-1 != a.indexOf(\"fff\")) {\n        var c = b.getMilliseconds(),\n            d = String(c);\n        10 > c && (d = \"00\" + c);\n        10 <= c && 100 > c && (d = \"0\" + c);\n        a = a.replace(/fff/g, d)\n    }\n    return a\n};\nAmCharts.extractPeriod = function(a) {\n    var b = AmCharts.stripNumbers(a),\n        c = 1;\n    b != a && (c = Number(a.slice(0, a.indexOf(b))));\n    return {\n        period: b,\n        count: c\n    }\n};\nAmCharts.newDate = function(a, b) {\n    return date = \"fff\" == b ? AmCharts.useUTC ? new Date(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate(), a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds(), a.getUTCMilliseconds()) : new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : new Date(a)\n};\nAmCharts.resetDateToMin = function(a, b, c, d) {\n    void 0 === d && (d = 1);\n    var e, f, g, h, k, l, m;\n    AmCharts.useUTC ? (e = a.getUTCFullYear(), f = a.getUTCMonth(), g = a.getUTCDate(), h = a.getUTCHours(), k = a.getUTCMinutes(), l = a.getUTCSeconds(), m = a.getUTCMilliseconds(), a = a.getUTCDay()) : (e = a.getFullYear(), f = a.getMonth(), g = a.getDate(), h = a.getHours(), k = a.getMinutes(), l = a.getSeconds(), m = a.getMilliseconds(), a = a.getDay());\n    switch (b) {\n        case \"YYYY\":\n            e = Math.floor(e / c) * c;\n            f = 0;\n            g = 1;\n            m = l = k = h = 0;\n            break;\n        case \"MM\":\n            f = Math.floor(f / c) * c;\n            g = 1;\n            m = l = k = h = 0;\n            break;\n        case \"WW\":\n            0 ===\n                a && 0 < d && (a = 7);\n            g = g - a + d;\n            m = l = k = h = 0;\n            break;\n        case \"DD\":\n            m = l = k = h = 0;\n            break;\n        case \"hh\":\n            h = Math.floor(h / c) * c;\n            m = l = k = 0;\n            break;\n        case \"mm\":\n            k = Math.floor(k / c) * c;\n            m = l = 0;\n            break;\n        case \"ss\":\n            l = Math.floor(l / c) * c;\n            m = 0;\n            break;\n        case \"fff\":\n            m = Math.floor(m / c) * c\n    }\n    AmCharts.useUTC ? (a = new Date, a.setUTCFullYear(e, f, g), a.setUTCHours(h, k, l, m)) : a = new Date(e, f, g, h, k, l, m);\n    return a\n};\nAmCharts.getPeriodDuration = function(a, b) {\n    void 0 === b && (b = 1);\n    var c;\n    switch (a) {\n        case \"YYYY\":\n            c = 316224E5;\n            break;\n        case \"MM\":\n            c = 26784E5;\n            break;\n        case \"WW\":\n            c = 6048E5;\n            break;\n        case \"DD\":\n            c = 864E5;\n            break;\n        case \"hh\":\n            c = 36E5;\n            break;\n        case \"mm\":\n            c = 6E4;\n            break;\n        case \"ss\":\n            c = 1E3;\n            break;\n        case \"fff\":\n            c = 1\n    }\n    return c * b\n};\nAmCharts.intervals = {\n    s: {\n        nextInterval: \"ss\",\n        contains: 1E3\n    },\n    ss: {\n        nextInterval: \"mm\",\n        contains: 60,\n        count: 0\n    },\n    mm: {\n        nextInterval: \"hh\",\n        contains: 60,\n        count: 1\n    },\n    hh: {\n        nextInterval: \"DD\",\n        contains: 24,\n        count: 2\n    },\n    DD: {\n        nextInterval: \"\",\n        contains: Infinity,\n        count: 3\n    }\n};\nAmCharts.getMaxInterval = function(a, b) {\n    var c = AmCharts.intervals;\n    return a >= c[b].contains ? (a = Math.round(a / c[b].contains), b = c[b].nextInterval, AmCharts.getMaxInterval(a, b)) : \"ss\" == b ? c[b].nextInterval : b\n};\nAmCharts.dayNames = \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \");\nAmCharts.shortDayNames = \"Sun Mon Tue Wed Thu Fri Sat\".split(\" \");\nAmCharts.monthNames = \"January February March April May June July August September October November December\".split(\" \");\nAmCharts.shortMonthNames = \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \");\nAmCharts.getWeekNumber = function(a) {\n    a = new Date(a);\n    a.setHours(0, 0, 0);\n    a.setDate(a.getDate() + 4 - (a.getDay() || 7));\n    var b = new Date(a.getFullYear(), 0, 1);\n    return Math.ceil(((a - b) / 864E5 + 1) / 7)\n};\nAmCharts.stringToDate = function(a, b) {\n    var c = {},\n        d = [{\n            pattern: \"YYYY\",\n            period: \"year\"\n        }, {\n            pattern: \"YY\",\n            period: \"year\"\n        }, {\n            pattern: \"MM\",\n            period: \"month\"\n        }, {\n            pattern: \"M\",\n            period: \"month\"\n        }, {\n            pattern: \"DD\",\n            period: \"date\"\n        }, {\n            pattern: \"D\",\n            period: \"date\"\n        }, {\n            pattern: \"JJ\",\n            period: \"hours\"\n        }, {\n            pattern: \"J\",\n            period: \"hours\"\n        }, {\n            pattern: \"HH\",\n            period: \"hours\"\n        }, {\n            pattern: \"H\",\n            period: \"hours\"\n        }, {\n            pattern: \"KK\",\n            period: \"hours\"\n        }, {\n            pattern: \"K\",\n            period: \"hours\"\n        }, {\n            pattern: \"LL\",\n            period: \"hours\"\n        }, {\n            pattern: \"L\",\n            period: \"hours\"\n        }, {\n            pattern: \"NN\",\n            period: \"minutes\"\n        }, {\n            pattern: \"N\",\n            period: \"minutes\"\n        }, {\n            pattern: \"SS\",\n            period: \"seconds\"\n        }, {\n            pattern: \"S\",\n            period: \"seconds\"\n        }, {\n            pattern: \"QQQ\",\n            period: \"milliseconds\"\n        }, {\n            pattern: \"QQ\",\n            period: \"milliseconds\"\n        }, {\n            pattern: \"Q\",\n            period: \"milliseconds\"\n        }],\n        e = !0,\n        f = b.indexOf(\"AA\"); - 1 != f && (a.substr(f, 2), \"pm\" == a.toLowerCase && (e = !1));\n    var f = b,\n        g, h, k;\n    for (k = 0; k < d.length; k++) h = d[k].period, c[h] = 0, \"date\" == h && (c[h] = 1);\n    for (k = 0; k < d.length; k++)\n        if (g = d[k].pattern, h = d[k].period, -1 != b.indexOf(g)) {\n            var l = AmCharts.getFromDateString(g, a, f);\n            b = b.replace(g, \"\");\n            if (\"KK\" == g || \"K\" == g || \"LL\" ==\n                g || \"L\" == g) e || (l += 12);\n            c[h] = l\n        }\n    AmCharts.useUTC ? (d = new Date, d.setUTCFullYear(c.year, c.month, c.date), d.setUTCHours(c.hours, c.minutes, c.seconds, c.milliseconds)) : d = new Date(c.year, c.month, c.date, c.hours, c.minutes, c.seconds, c.milliseconds);\n    return d\n};\nAmCharts.getFromDateString = function(a, b, c) {\n    if (void 0 !== b) return c = c.indexOf(a), b = b.substr(c, a.length), \"0\" == b.charAt(0) && (b = b.substr(1, b.length - 1)), b = Number(b), isNaN(b) && (b = 0), -1 != a.indexOf(\"M\") && b--, b\n};\nAmCharts.formatDate = function(a, b, c) {\n    c || (c = AmCharts);\n    var d, e, f, g, h, k, l, m = AmCharts.getWeekNumber(a);\n    AmCharts.useUTC ? (d = a.getUTCFullYear(), e = a.getUTCMonth(), f = a.getUTCDate(), g = a.getUTCDay(), h = a.getUTCHours(), k = a.getUTCMinutes(), l = a.getUTCSeconds(), a = a.getUTCMilliseconds()) : (d = a.getFullYear(), e = a.getMonth(), f = a.getDate(), g = a.getDay(), h = a.getHours(), k = a.getMinutes(), l = a.getSeconds(), a = a.getMilliseconds());\n    var n = String(d).substr(2, 2),\n        p = e + 1;\n    9 > e && (p = \"0\" + p);\n    var q = \"0\" + g;\n    b = b.replace(/W/g, m);\n    m = h;\n    24 == m && (m = 0);\n    var r = m;\n    10 > r && (r = \"0\" + r);\n    b = b.replace(/JJ/g, r);\n    b = b.replace(/J/g, m);\n    r = h;\n    0 === r && (r = 24, -1 != b.indexOf(\"H\") && f--);\n    m = f;\n    10 > f && (m = \"0\" + f);\n    var s = r;\n    10 > s && (s = \"0\" + s);\n    b = b.replace(/HH/g, s);\n    b = b.replace(/H/g, r);\n    r = h;\n    11 < r && (r -= 12);\n    s = r;\n    10 > s && (s = \"0\" + s);\n    b = b.replace(/KK/g, s);\n    b = b.replace(/K/g, r);\n    r = h;\n    0 === r && (r = 12);\n    12 < r && (r -= 12);\n    s = r;\n    10 > s && (s = \"0\" + s);\n    b = b.replace(/LL/g, s);\n    b = b.replace(/L/g, r);\n    r = k;\n    10 > r && (r = \"0\" + r);\n    b = b.replace(/NN/g, r);\n    b = b.replace(/N/g, k);\n    k = l;\n    10 > k && (k = \"0\" + k);\n    b = b.replace(/SS/g, k);\n    b = b.replace(/S/g, l);\n    l = a;\n    10 > l && (l = \"00\" +\n        l);\n    100 > l && (l = \"0\" + l);\n    k = a;\n    10 > k && (k = \"00\" + k);\n    b = b.replace(/QQQ/g, l);\n    b = b.replace(/QQ/g, k);\n    b = b.replace(/Q/g, a);\n    b = 12 > h ? b.replace(/A/g, \"am\") : b.replace(/A/g, \"pm\");\n    b = b.replace(/YYYY/g, \"@IIII@\");\n    b = b.replace(/YY/g, \"@II@\");\n    b = b.replace(/MMMM/g, \"@XXXX@\");\n    b = b.replace(/MMM/g, \"@XXX@\");\n    b = b.replace(/MM/g, \"@XX@\");\n    b = b.replace(/M/g, \"@X@\");\n    b = b.replace(/DD/g, \"@RR@\");\n    b = b.replace(/D/g, \"@R@\");\n    b = b.replace(/EEEE/g, \"@PPPP@\");\n    b = b.replace(/EEE/g, \"@PPP@\");\n    b = b.replace(/EE/g, \"@PP@\");\n    b = b.replace(/E/g, \"@P@\");\n    b = b.replace(/@IIII@/g, d);\n    b =\n        b.replace(/@II@/g, n);\n    b = b.replace(/@XXXX@/g, c.monthNames[e]);\n    b = b.replace(/@XXX@/g, c.shortMonthNames[e]);\n    b = b.replace(/@XX@/g, p);\n    b = b.replace(/@X@/g, e + 1);\n    b = b.replace(/@RR@/g, m);\n    b = b.replace(/@R@/g, f);\n    b = b.replace(/@PPPP@/g, c.dayNames[g]);\n    b = b.replace(/@PPP@/g, c.shortDayNames[g]);\n    b = b.replace(/@PP@/g, q);\n    return b = b.replace(/@P@/g, g)\n};\nAmCharts.changeDate = function(a, b, c, d, e) {\n    var f = -1;\n    void 0 === d && (d = !0);\n    void 0 === e && (e = !1);\n    !0 === d && (f = 1);\n    switch (b) {\n        case \"YYYY\":\n            a.setFullYear(a.getFullYear() + c * f);\n            d || e || a.setDate(a.getDate() + 1);\n            break;\n        case \"MM\":\n            b = a.getMonth();\n            a.setMonth(a.getMonth() + c * f);\n            a.getMonth() > b + c * f && a.setDate(a.getDate() - 1);\n            d || e || a.setDate(a.getDate() + 1);\n            break;\n        case \"DD\":\n            a.setDate(a.getDate() + c * f);\n            break;\n        case \"WW\":\n            a.setDate(a.getDate() + c * f * 7);\n            break;\n        case \"hh\":\n            a.setHours(a.getHours() + c * f);\n            break;\n        case \"mm\":\n            a.setMinutes(a.getMinutes() +\n                c * f);\n            break;\n        case \"ss\":\n            a.setSeconds(a.getSeconds() + c * f);\n            break;\n        case \"fff\":\n            a.setMilliseconds(a.getMilliseconds() + c * f)\n    }\n    return a\n};","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":379,"column":0},"end":{"row":379,"column":122}},"text":"c*f);break;case \"ss\":a.setSeconds(a.getSeconds()+c*f);break;case \"fff\":a.setMilliseconds(a.getMilliseconds()+c*f)}return a"},{"action":"removeLines","range":{"start":{"row":1,"column":0},"end":{"row":379,"column":0}},"nl":"\n","lines":["AmCharts.Class=function(a){var b=function(){arguments[0]!==AmCharts.inheriting&&(this.events={},this.construct.apply(this,arguments))};a.inherits?(b.prototype=new a.inherits(AmCharts.inheriting),b.base=a.inherits.prototype,delete a.inherits):(b.prototype.createEvents=function(){for(var a=0,b=arguments.length;a<b;a++)this.events[arguments[a]]=[]},b.prototype.listenTo=function(a,b,c){this.removeListener(a,b,c);a.events[b].push({handler:c,scope:this})},b.prototype.addListener=function(a,b,c){this.removeListener(this,","a,b);this.events[a].push({handler:b,scope:c})},b.prototype.removeListener=function(a,b,c){if(a&&a.events)for(a=a.events[b],b=a.length-1;0<=b;b--)a[b].handler===c&&a.splice(b,1)},b.prototype.fire=function(a,b){for(var c=this.events[a],g=0,h=c.length;g<h;g++){var k=c[g];k.handler.call(k.scope,b)}});for(var c in a)b.prototype[c]=a[c];return b};AmCharts.addChart=function(a){AmCharts.charts.push(a)};AmCharts.removeChart=function(a){for(var b=AmCharts.charts,c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1)};","AmCharts.isModern=!0;AmCharts.getIEVersion=function(){var a=0;if(\"Microsoft Internet Explorer\"==navigator.appName){var b=navigator.userAgent,c=/MSIE ([0-9]{1,}[.0-9]{0,})/;null!=c.exec(b)&&(a=parseFloat(RegExp.$1))}else\"Netscape\"==navigator.appName&&(b=navigator.userAgent,c=/Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/,null!=c.exec(b)&&(a=parseFloat(RegExp.$1)));return a};","AmCharts.applyLang=function(a,b){var c=AmCharts.translations;b.dayNames=AmCharts.dayNames;b.shortDayNames=AmCharts.shortDayNames;b.monthNames=AmCharts.monthNames;b.shortMonthNames=AmCharts.shortMonthNames;c&&(c=c[a])&&(AmCharts.lang=c,c.monthNames&&(b.dayNames=c.dayNames,b.shortDayNames=c.shortDayNames,b.monthNames=c.monthNames,b.shortMonthNames=c.shortMonthNames))};AmCharts.IEversion=AmCharts.getIEVersion();9>AmCharts.IEversion&&0<AmCharts.IEversion&&(AmCharts.isModern=!1,AmCharts.isIE=!0);","AmCharts.dx=0;AmCharts.dy=0;if(document.addEventListener||window.opera)AmCharts.isNN=!0,AmCharts.isIE=!1,AmCharts.dx=.5,AmCharts.dy=.5;document.attachEvent&&(AmCharts.isNN=!1,AmCharts.isIE=!0,AmCharts.isModern||(AmCharts.dx=0,AmCharts.dy=0));window.chrome&&(AmCharts.chrome=!0);AmCharts.handleResize=function(){for(var a=AmCharts.charts,b=0;b<a.length;b++){var c=a[b];c&&c.div&&c.handleResize()}};AmCharts.handleMouseUp=function(a){for(var b=AmCharts.charts,c=0;c<b.length;c++){var d=b[c];d&&d.handleReleaseOutside(a)}};","AmCharts.handleMouseMove=function(a){for(var b=AmCharts.charts,c=0;c<b.length;c++){var d=b[c];d&&d.handleMouseMove(a)}};AmCharts.resetMouseOver=function(){for(var a=AmCharts.charts,b=0;b<a.length;b++){var c=a[b];c&&(c.mouseIsOver=!1)}};AmCharts.ready=function(a){AmCharts.onReadyArray.push(a)};AmCharts.handleLoad=function(){AmCharts.isReady=!0;for(var a=AmCharts.onReadyArray,b=0;b<a.length;b++){var c=a[b];isNaN(AmCharts.processDelay)?c():setTimeout(c,AmCharts.processDelay*b)}};","AmCharts.addInitHandler=function(a,b){AmCharts.initHandlers.push({method:a,types:b})};AmCharts.callInitHandler=function(a){var b=AmCharts.initHandlers;if(AmCharts.initHandlers)for(var c=0;c<b.length;c++){var d=b[c];d.types&&-1!=d.types.indexOf(a.type)&&d.method(a)}};AmCharts.getUniqueId=function(){AmCharts.uid++;return\"AmChartsEl-\"+AmCharts.uid};","AmCharts.isNN&&(document.addEventListener(\"mousemove\",AmCharts.handleMouseMove,!0),window.addEventListener(\"resize\",AmCharts.handleResize,!0),document.addEventListener(\"mouseup\",AmCharts.handleMouseUp,!0),window.addEventListener(\"load\",AmCharts.handleLoad,!0));AmCharts.isIE&&(document.attachEvent(\"onmousemove\",AmCharts.handleMouseMove),window.attachEvent(\"onresize\",AmCharts.handleResize),document.attachEvent(\"onmouseup\",AmCharts.handleMouseUp),window.attachEvent(\"onload\",AmCharts.handleLoad));","AmCharts.clear=function(){var a=AmCharts.charts;if(a)for(var b=0;b<a.length;b++)a[b].clear();AmCharts.charts=null;AmCharts.isNN&&(document.removeEventListener(\"mousemove\",AmCharts.handleMouseMove,!0),window.removeEventListener(\"resize\",AmCharts.handleResize,!0),document.removeEventListener(\"mouseup\",AmCharts.handleMouseUp,!0),window.removeEventListener(\"load\",AmCharts.handleLoad,!0));AmCharts.isIE&&(document.detachEvent(\"onmousemove\",AmCharts.handleMouseMove),window.detachEvent(\"onresize\",AmCharts.handleResize),","document.detachEvent(\"onmouseup\",AmCharts.handleMouseUp),window.detachEvent(\"onload\",AmCharts.handleLoad))};","AmCharts.makeChart=function(a,b,c){var d=b.type,e=b.theme;AmCharts.isString(e)&&(e=AmCharts.themes[e],b.theme=e);var f;switch(d){case \"serial\":f=new AmCharts.AmSerialChart(e);break;case \"xy\":f=new AmCharts.AmXYChart(e);break;case \"pie\":f=new AmCharts.AmPieChart(e);break;case \"radar\":f=new AmCharts.AmRadarChart(e);break;case \"gauge\":f=new AmCharts.AmAngularGauge(e);break;case \"funnel\":f=new AmCharts.AmFunnelChart(e);break;case \"map\":f=new AmCharts.AmMap(e);break;case \"stock\":f=new AmCharts.AmStockChart(e)}AmCharts.extend(f,","b);AmCharts.isReady?isNaN(c)?f.write(a):setTimeout(function(){AmCharts.realWrite(f,a)},c):AmCharts.ready(function(){isNaN(c)?f.write(a):setTimeout(function(){AmCharts.realWrite(f,a)},c)});return f};AmCharts.realWrite=function(a,b){a.write(b)};AmCharts.toBoolean=function(a,b){if(void 0===a)return b;switch(String(a).toLowerCase()){case \"true\":case \"yes\":case \"1\":return!0;case \"false\":case \"no\":case \"0\":case null:return!1;default:return Boolean(a)}};AmCharts.removeFromArray=function(a,b){var c;for(c=a.length-1;0<=c;c--)a[c]==b&&a.splice(c,1)};AmCharts.getDecimals=function(a){var b=0;isNaN(a)||(a=String(a),-1!=a.indexOf(\"e-\")?b=Number(a.split(\"-\")[1]):-1!=a.indexOf(\".\")&&(b=a.split(\".\")[1].length));return b};","AmCharts.wrappedText=function(a,b,c,d,e,f,g,h,k){var l=AmCharts.text(a,b,c,d,e,f,g),m=\"\\n\";AmCharts.isModern||(m=\"<br>\");if(10<k)return l;if(l){var n=l.getBBox();if(n.width>h){l.remove();for(var l=[],p=0;-1<(index=b.indexOf(\" \",p));)l.push(index),p=index+1;for(var q=Math.round(b.length/2),r=1E3,s,p=0;p<l.length;p++){var w=Math.abs(l[p]-q);w<r&&(s=l[p],r=w)}if(isNaN(s)){h=Math.ceil(n.width/h);if(0==k)for(p=1;p<h;p++)s=Math.round(b.length/h*p),b=b.substr(0,s)+m+b.substr(s);return AmCharts.text(a,b,","c,d,e,f,g)}b=b.substr(0,s)+m+b.substr(s+1);return AmCharts.wrappedText(a,b,c,d,e,f,g,h,k+1)}return l}};AmCharts.getStyle=function(a,b){var c=\"\";document.defaultView&&document.defaultView.getComputedStyle?c=document.defaultView.getComputedStyle(a,\"\").getPropertyValue(b):a.currentStyle&&(b=b.replace(/\\-(\\w)/g,function(a,b){return b.toUpperCase()}),c=a.currentStyle[b]);return c};AmCharts.removePx=function(a){if(void 0!=a)return Number(a.substring(0,a.length-2))};","AmCharts.getURL=function(a,b){if(a)if(\"_self\"!=b&&b)if(\"_top\"==b&&window.top)window.top.location.href=a;else if(\"_parent\"==b&&window.parent)window.parent.location.href=a;else if(\"_blank\"==b)window.open(a);else{var c=document.getElementsByName(b)[0];c?c.src=a:(c=AmCharts.windows[b])?c.opener&&!c.opener.closed?c.location.href=a:AmCharts.windows[b]=window.open(a):AmCharts.windows[b]=window.open(a)}else window.location.href=a};AmCharts.ifArray=function(a){return a&&0<a.length?!0:!1};","AmCharts.callMethod=function(a,b){var c;for(c=0;c<b.length;c++){var d=b[c];if(d){if(d[a])d[a]();var e=d.length;if(0<e){var f;for(f=0;f<e;f++){var g=d[f];if(g&&g[a])g[a]()}}}}};AmCharts.toNumber=function(a){return\"number\"==typeof a?a:Number(String(a).replace(/[^0-9\\-.]+/g,\"\"))};","AmCharts.toColor=function(a){if(\"\"!==a&&void 0!==a)if(-1!=a.indexOf(\",\")){a=a.split(\",\");var b;for(b=0;b<a.length;b++){var c=a[b].substring(a[b].length-6,a[b].length);a[b]=\"#\"+c}}else a=a.substring(a.length-6,a.length),a=\"#\"+a;return a};AmCharts.toCoordinate=function(a,b,c){var d;void 0!==a&&(a=String(a),c&&c<b&&(b=c),d=Number(a),-1!=a.indexOf(\"!\")&&(d=b-Number(a.substr(1))),-1!=a.indexOf(\"%\")&&(d=b*Number(a.substr(0,a.length-1))/100));return d};","AmCharts.fitToBounds=function(a,b,c){a<b&&(a=b);a>c&&(a=c);return a};AmCharts.isDefined=function(a){return void 0===a?!1:!0};AmCharts.stripNumbers=function(a){return a.replace(/[0-9]+/g,\"\")};AmCharts.roundTo=function(a,b){if(0>b)return a;var c=Math.pow(10,b);return Math.round(a*c)/c};AmCharts.toFixed=function(a,b){var c=String(Math.round(a*Math.pow(10,b)));if(0<b){var d=c.length;if(d<b){var e;for(e=0;e<b-d;e++)c=\"0\"+c}d=c.substring(0,c.length-b);\"\"===d&&(d=0);return d+\".\"+c.substring(c.length-b,c.length)}return String(c)};","AmCharts.formatDuration=function(a,b,c,d,e,f){var g=AmCharts.intervals,h=f.decimalSeparator;if(a>=g[b].contains){var k=a-Math.floor(a/g[b].contains)*g[b].contains;\"ss\"==b&&(k=AmCharts.formatNumber(k,f),1==k.split(h)[0].length&&(k=\"0\"+k));(\"mm\"==b||\"hh\"==b)&&10>k&&(k=\"0\"+k);c=k+\"\"+d[b]+\"\"+c;a=Math.floor(a/g[b].contains);b=g[b].nextInterval;return AmCharts.formatDuration(a,b,c,d,e,f)}\"ss\"==b&&(a=AmCharts.formatNumber(a,f),1==a.split(h)[0].length&&(a=\"0\"+a));(\"mm\"==b||\"hh\"==b)&&10>a&&(a=\"0\"+a);c=a+\"\"+","d[b]+\"\"+c;if(g[e].count>g[b].count)for(a=g[b].count;a<g[e].count;a++)b=g[b].nextInterval,\"ss\"==b||\"mm\"==b||\"hh\"==b?c=\"00\"+d[b]+\"\"+c:\"DD\"==b&&(c=\"0\"+d[b]+\"\"+c);\":\"==c.charAt(c.length-1)&&(c=c.substring(0,c.length-1));return c};","AmCharts.formatNumber=function(a,b,c,d,e){a=AmCharts.roundTo(a,b.precision);isNaN(c)&&(c=b.precision);var f=b.decimalSeparator;b=b.thousandsSeparator;var g;g=0>a?\"-\":\"\";a=Math.abs(a);var h=String(a),k=!1;-1!=h.indexOf(\"e\")&&(k=!0);0<=c&&!k&&(h=AmCharts.toFixed(a,c));var l=\"\";if(k)l=h;else{var h=h.split(\".\"),k=String(h[0]),m;for(m=k.length;0<=m;m-=3)l=m!=k.length?0!==m?k.substring(m-3,m)+b+l:k.substring(m-3,m)+l:k.substring(m-3,m);void 0!==h[1]&&(l=l+f+h[1]);void 0!==c&&0<c&&\"0\"!=l&&(l=AmCharts.addZeroes(l,","f,c))}l=g+l;\"\"===g&&!0===d&&0!==a&&(l=\"+\"+l);!0===e&&(l+=\"%\");return l};AmCharts.addZeroes=function(a,b,c){a=a.split(b);void 0===a[1]&&0<c&&(a[1]=\"0\");return a[1].length<c?(a[1]+=\"0\",AmCharts.addZeroes(a[0]+b+a[1],b,c)):void 0!==a[1]?a[0]+b+a[1]:a[0]};","AmCharts.scientificToNormal=function(a){var b;a=String(a).split(\"e\");var c;if(\"-\"==a[1].substr(0,1)){b=\"0.\";for(c=0;c<Math.abs(Number(a[1]))-1;c++)b+=\"0\";b+=a[0].split(\".\").join(\"\")}else{var d=0;b=a[0].split(\".\");b[1]&&(d=b[1].length);b=a[0].split(\".\").join(\"\");for(c=0;c<Math.abs(Number(a[1]))-d;c++)b+=\"0\"}return b};","AmCharts.toScientific=function(a,b){if(0===a)return\"0\";var c=Math.floor(Math.log(Math.abs(a))*Math.LOG10E);Math.pow(10,c);mantissa=String(mantissa).split(\".\").join(b);return String(mantissa)+\"e\"+c};AmCharts.randomColor=function(){return\"#\"+(\"00000\"+(16777216*Math.random()<<0).toString(16)).substr(-6)};","AmCharts.hitTest=function(a,b,c){var d=!1,e=a.x,f=a.x+a.width,g=a.y,h=a.y+a.height,k=AmCharts.isInRectangle;d||(d=k(e,g,b));d||(d=k(e,h,b));d||(d=k(f,g,b));d||(d=k(f,h,b));d||!0===c||(d=AmCharts.hitTest(b,a,!0));return d};AmCharts.isInRectangle=function(a,b,c){return a>=c.x-5&&a<=c.x+c.width+5&&b>=c.y-5&&b<=c.y+c.height+5?!0:!1};AmCharts.isPercents=function(a){if(-1!=String(a).indexOf(\"%\"))return!0};","AmCharts.findPosX=function(a){var b=a,c=a.offsetLeft;if(a.offsetParent){for(;a=a.offsetParent;)c+=a.offsetLeft;for(;(b=b.parentNode)&&b!=document.body;)c-=b.scrollLeft||0}return c};AmCharts.findPosY=function(a){var b=a,c=a.offsetTop;if(a.offsetParent){for(;a=a.offsetParent;)c+=a.offsetTop;for(;(b=b.parentNode)&&b!=document.body;)c-=b.scrollTop||0}return c};AmCharts.findIfFixed=function(a){if(a.offsetParent)for(;a=a.offsetParent;)if(\"fixed\"==AmCharts.getStyle(a,\"position\"))return!0;return!1};","AmCharts.findIfAuto=function(a){return a.style&&\"auto\"==AmCharts.getStyle(a,\"overflow\")?!0:a.parentNode?AmCharts.findIfAuto(a.parentNode):!1};AmCharts.findScrollLeft=function(a,b){a.scrollLeft&&(b+=a.scrollLeft);return a.parentNode?AmCharts.findScrollLeft(a.parentNode,b):b};AmCharts.findScrollTop=function(a,b){a.scrollTop&&(b+=a.scrollTop);return a.parentNode?AmCharts.findScrollTop(a.parentNode,b):b};","AmCharts.formatValue=function(a,b,c,d,e,f,g,h){if(b){void 0===e&&(e=\"\");var k;for(k=0;k<c.length;k++){var l=c[k],m=b[l];void 0!==m&&(m=f?AmCharts.addPrefix(m,h,g,d):AmCharts.formatNumber(m,d),a=a.replace(new RegExp(\"\\\\[\\\\[\"+e+\"\"+l+\"\\\\]\\\\]\",\"g\"),m))}}return a};AmCharts.formatDataContextValue=function(a,b){if(a){var c=a.match(/\\[\\[.*?\\]\\]/g),d;for(d=0;d<c.length;d++){var e=c[d],e=e.substr(2,e.length-4);void 0!==b[e]&&(a=a.replace(new RegExp(\"\\\\[\\\\[\"+e+\"\\\\]\\\\]\",\"g\"),b[e]))}}return a};","AmCharts.massReplace=function(a,b){for(var c in b)if(b.hasOwnProperty(c)){var d=b[c];void 0===d&&(d=\"\");a=a.replace(c,d)}return a};AmCharts.cleanFromEmpty=function(a){return a.replace(/\\[\\[[^\\]]*\\]\\]/g,\"\")};","AmCharts.addPrefix=function(a,b,c,d,e){var f=AmCharts.formatNumber(a,d),g=\"\",h,k,l;if(0===a)return\"0\";0>a&&(g=\"-\");a=Math.abs(a);if(1<a)for(h=b.length-1;-1<h;h--){if(a>=b[h].number&&(k=a/b[h].number,l=Number(d.precision),1>l&&(l=1),c=AmCharts.roundTo(k,l),l=AmCharts.formatNumber(c,{precision:-1,decimalSeparator:d.decimalSeparator,thousandsSeparator:d.thousandsSeparator}),!e||k==c)){f=g+\"\"+l+\"\"+b[h].prefix;break}}else for(h=0;h<c.length;h++)if(a<=c[h].number){k=a/c[h].number;l=Math.abs(Math.round(Math.log(k)*","Math.LOG10E));k=AmCharts.roundTo(k,l);f=g+\"\"+k+\"\"+c[h].prefix;break}return f};AmCharts.remove=function(a){a&&a.remove()};AmCharts.recommended=function(){var a=\"js\";document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")||swfobject&&swfobject.hasFlashPlayerVersion(\"8\")&&(a=\"flash\");return a};AmCharts.getEffect=function(a){\">\"==a&&(a=\"easeOutSine\");\"<\"==a&&(a=\"easeInSine\");\"elastic\"==a&&(a=\"easeOutElastic\");return a};","AmCharts.getObjById=function(a,b){var c,d;for(d=0;d<a.length;d++){var e=a[d];e.id==b&&(c=e)}return c};AmCharts.applyTheme=function(a,b,c){b||(b=AmCharts.theme);b&&b[c]&&AmCharts.extend(a,b[c])};AmCharts.isString=function(a){return\"string\"==typeof a?!0:!1};AmCharts.extend=function(a,b,c){for(var d in b)c?a.hasOwnProperty(d)||(a[d]=b[d]):a[d]=b[d];return a};","AmCharts.copyProperties=function(a,b){for(var c in a)a.hasOwnProperty(c)&&\"events\"!=c&&void 0!==a[c]&&\"function\"!=typeof a[c]&&\"cname\"!=c&&(b[c]=a[c])};AmCharts.processObject=function(a,b,c){!1===a instanceof b&&(a=AmCharts.extend(new b(c),a));return a};AmCharts.fixNewLines=function(a){var b=RegExp(\"\\\\n\",\"g\");a&&(a=a.replace(b,\"<br />\"));return a};AmCharts.fixBrakes=function(a){if(AmCharts.isModern){var b=RegExp(\"<br>\",\"g\");a&&(a=a.replace(b,\"\\n\"))}else a=AmCharts.fixNewLines(a);return a};","AmCharts.deleteObject=function(a,b){if(a){if(void 0===b||null===b)b=20;if(0!==b)if(\"[object Array]\"===Object.prototype.toString.call(a))for(var c=0;c<a.length;c++)AmCharts.deleteObject(a[c],b-1),a[c]=null;else if(a&&!a.tagName)try{for(c in a)a[c]&&(\"object\"==typeof a[c]&&AmCharts.deleteObject(a[c],b-1),\"function\"!=typeof a[c]&&(a[c]=null))}catch(d){}}};","AmCharts.bounce=function(a,b,c,d,e){return(b/=e)<1/2.75?7.5625*d*b*b+c:b<2/2.75?d*(7.5625*(b-=1.5/2.75)*b+.75)+c:b<2.5/2.75?d*(7.5625*(b-=2.25/2.75)*b+.9375)+c:d*(7.5625*(b-=2.625/2.75)*b+.984375)+c};AmCharts.easeInSine=function(a,b,c,d,e){return-d*Math.cos(b/e*(Math.PI/2))+d+c};AmCharts.easeOutSine=function(a,b,c,d,e){return d*Math.sin(b/e*(Math.PI/2))+c};","AmCharts.easeOutElastic=function(a,b,c,d,e){a=1.70158;var f=0,g=d;if(0===b)return c;if(1==(b/=e))return c+d;f||(f=.3*e);g<Math.abs(d)?(g=d,a=f/4):a=f/(2*Math.PI)*Math.asin(d/g);return g*Math.pow(2,-10*b)*Math.sin(2*(b*e-a)*Math.PI/f)+d+c};AmCharts.AxisBase=AmCharts.Class({construct:function(a){this.createEvents(\"clickItem\",\"rollOverItem\",\"rollOutItem\");this.viY=this.viX=this.y=this.x=this.dy=this.dx=0;this.axisThickness=1;this.axisColor=\"#000000\";this.axisAlpha=1;this.gridCount=this.tickLength=5;this.gridAlpha=.15;this.gridThickness=1;this.gridColor=\"#000000\";this.dashLength=0;this.labelFrequency=1;this.showLastLabel=this.showFirstLabel=!0;this.fillColor=\"#FFFFFF\";this.fillAlpha=0;this.labelsEnabled=!0;this.labelRotation=0;this.autoGridCount=","!0;this.valueRollOverColor=\"#CC0000\";this.offset=0;this.guides=[];this.visible=!0;this.counter=0;this.guides=[];this.ignoreAxisWidth=this.inside=!1;this.minHorizontalGap=75;this.minVerticalGap=35;this.titleBold=!0;this.minorGridEnabled=!1;this.minorGridAlpha=.07;this.autoWrap=!1;this.titleAlign=\"middle\";this.labelOffset=0;AmCharts.applyTheme(this,a,\"AxisBase\")},zoom:function(a,b){this.start=a;this.end=b;this.dataChanged=!0;this.draw()},fixAxisPosition:function(){var a=this.position;\"H\"==this.orientation?","(\"left\"==a&&(a=\"bottom\"),\"right\"==a&&(a=\"top\")):(\"bottom\"==a&&(a=\"left\"),\"top\"==a&&(a=\"right\"));this.position=a},draw:function(){var a=this.chart;this.allLabels=[];this.counter=0;this.destroy();this.fixAxisPosition();this.labels=[];var b=a.container,c=b.set();a.gridSet.push(c);this.set=c;b=b.set();a.axesLabelsSet.push(b);this.labelsSet=b;this.axisLine=new this.axisRenderer(this);this.autoGridCount?(\"V\"==this.orientation?(a=this.height/this.minVerticalGap,3>a&&(a=3)):a=this.width/this.minHorizontalGap,","this.gridCountR=Math.max(a,1)):this.gridCountR=this.gridCount;this.axisWidth=this.axisLine.axisWidth;this.addTitle()},setOrientation:function(a){this.orientation=a?\"H\":\"V\"},addTitle:function(){var a=this.title;if(a){var b=this.chart,c=this.titleColor;void 0===c&&(c=b.color);var d=this.titleFontSize;isNaN(d)&&(d=b.fontSize+1);this.titleLabel=AmCharts.text(b.container,a,c,b.fontFamily,d,this.titleAlign,this.titleBold)}},positionTitle:function(){var a=this.titleLabel;if(a){var b,c,d=this.labelsSet,e=","{};0<d.length()?e=d.getBBox():(e.x=0,e.y=0,e.width=this.viW,e.height=this.viH);d.push(a);var d=e.x,f=e.y;AmCharts.VML&&(this.rotate?d-=this.x:f-=this.y);var g=e.width,e=e.height,h=this.viW,k=this.viH,l=0,m=a.getBBox().height/2,n=this.inside,p=this.titleAlign;switch(this.position){case \"top\":b=\"left\"==p?-1:\"right\"==p?h:h/2;c=f-10-m;break;case \"bottom\":b=\"left\"==p?-1:\"right\"==p?h:h/2;c=f+e+10+m;break;case \"left\":b=d-10-m;n&&(b-=5);c=\"left\"==p?k+1:\"right\"==p?-1:k/2;l=-90;break;case \"right\":b=d+g+10+","m-3,n&&(b+=7),c=\"left\"==p?k+2:\"right\"==p?-2:k/2,l=-90}this.marginsChanged?(a.translate(b,c),this.tx=b,this.ty=c):a.translate(this.tx,this.ty);this.marginsChanged=!1;0!==l&&a.rotate(l)}},pushAxisItem:function(a,b){var c=this,d=a.graphics();0<d.length()&&(b?c.labelsSet.push(d):c.set.push(d));if(d=a.getLabel())this.labelsSet.push(d),d.click(function(b){c.handleMouse(b,a,\"clickItem\")}).mouseover(function(b){c.handleMouse(b,a,\"rollOverItem\")}).mouseout(function(b){c.handleMouse(b,a,\"rollOutItem\")})},handleMouse:function(a,","b,c){this.fire(c,{type:c,value:b.value,serialDataItem:b.serialDataItem,axis:this,target:b.label,chart:this.chart,event:a})},addGuide:function(a){for(var b=this.guides,c=!1,d=0;d<b.length;d++)b[d]==a&&(c=!0);c||b.push(a)},removeGuide:function(a){var b=this.guides,c;for(c=0;c<b.length;c++)b[c]==a&&b.splice(c,1)},handleGuideOver:function(a){clearTimeout(this.chart.hoverInt);var b=a.graphics.getBBox(),c=b.x+b.width/2,b=b.y+b.height/2,d=a.fillColor;void 0===d&&(d=a.lineColor);this.chart.showBalloon(a.balloonText,","d,!0,c,b)},handleGuideOut:function(a){this.chart.hideBalloon()},addEventListeners:function(a,b){var c=this;a.mouseover(function(){c.handleGuideOver(b)});a.mouseout(function(){c.handleGuideOut(b)})},getBBox:function(){var a=this.labelsSet.getBBox();AmCharts.VML||(a={x:a.x+this.x,y:a.y+this.y,width:a.width,height:a.height});return a},destroy:function(){AmCharts.remove(this.set);AmCharts.remove(this.labelsSet);var a=this.axisLine;a&&AmCharts.remove(a.set);AmCharts.remove(this.grid0)}});AmCharts.ValueAxis=AmCharts.Class({inherits:AmCharts.AxisBase,construct:function(a){this.cname=\"ValueAxis\";this.createEvents(\"axisChanged\",\"logarithmicAxisFailed\",\"axisSelfZoomed\",\"axisZoomed\");AmCharts.ValueAxis.base.construct.call(this,a);this.dataChanged=!0;this.stackType=\"none\";this.position=\"left\";this.unitPosition=\"right\";this.recalculateToPercents=this.includeHidden=this.includeGuidesInMinMax=this.integersOnly=!1;this.durationUnits={DD:\"d. \",hh:\":\",mm:\":\",ss:\"\"};this.scrollbar=!1;this.baseValue=","0;this.radarCategoriesEnabled=!0;this.gridType=\"polygons\";this.useScientificNotation=!1;this.axisTitleOffset=10;this.minMaxMultiplier=1;this.logGridLimit=2;AmCharts.applyTheme(this,a,this.cname)},updateData:function(){0>=this.gridCountR&&(this.gridCountR=1);this.totals=[];this.data=this.chart.chartData;var a=this.chart;\"xy\"!=a.type&&(this.stackGraphs(\"smoothedLine\"),this.stackGraphs(\"line\"),this.stackGraphs(\"column\"),this.stackGraphs(\"step\"));this.recalculateToPercents&&this.recalculate();this.synchronizationMultiplier&&","this.synchronizeWith?(AmCharts.isString(this.synchronizeWith)&&(this.synchronizeWith=a.getValueAxisById(this.synchronizeWith)),this.synchronizeWith&&(this.synchronizeWithAxis(this.synchronizeWith),this.foundGraphs=!0)):(this.foundGraphs=!1,this.getMinMax())},draw:function(){AmCharts.ValueAxis.base.draw.call(this);var a=this.chart,b=this.set;\"duration\"==this.type&&(this.duration=\"ss\");!0===this.dataChanged&&(this.updateData(),this.dataChanged=!1);if(this.logarithmic&&(0>=this.getMin(0,this.data.length-","1)||0>=this.minimum))this.fire(\"logarithmicAxisFailed\",{type:\"logarithmicAxisFailed\",chart:a});else{this.grid0=null;var c,d,e=a.dx,f=a.dy,g=!1,h=this.logarithmic;if(isNaN(this.min)||isNaN(this.max)||!this.foundGraphs||Infinity==this.min||-Infinity==this.max)g=!0;else{var k=this.labelFrequency,l=this.showFirstLabel,m=this.showLastLabel,n=1,p=0,q=Math.round((this.max-this.min)/this.step)+1,r;!0===h?(r=Math.log(this.max)*Math.LOG10E-Math.log(this.minReal)*Math.LOG10E,this.stepWidth=this.axisWidth/r,","r>this.logGridLimit&&(q=Math.ceil(Math.log(this.max)*Math.LOG10E)+1,p=Math.round(Math.log(this.minReal)*Math.LOG10E),q>this.gridCountR&&(n=Math.ceil(q/this.gridCountR)))):this.stepWidth=this.axisWidth/(this.max-this.min);var s=0;1>this.step&&-1<this.step&&(s=AmCharts.getDecimals(this.step));this.integersOnly&&(s=0);s>this.maxDecCount&&(s=this.maxDecCount);var w=this.precision;isNaN(w)||(s=w);this.max=AmCharts.roundTo(this.max,this.maxDecCount);this.min=AmCharts.roundTo(this.min,this.maxDecCount);","d={};d.precision=s;d.decimalSeparator=a.nf.decimalSeparator;d.thousandsSeparator=a.nf.thousandsSeparator;this.numberFormatter=d;var v,t=this.guides;c=t.length;if(0<c){var u=this.fillAlpha;for(d=this.fillAlpha=0;d<c;d++){var x=t[d],E=NaN,A=x.above;isNaN(x.toValue)||(E=this.getCoordinate(x.toValue),v=new this.axisItemRenderer(this,E,\"\",!0,NaN,NaN,x),this.pushAxisItem(v,A));var z=NaN;isNaN(x.value)||(z=this.getCoordinate(x.value),v=new this.axisItemRenderer(this,z,x.label,!0,NaN,(E-z)/2,x),this.pushAxisItem(v,","A));isNaN(E-z)||(v=new this.guideFillRenderer(this,z,E,x),this.pushAxisItem(v,A),v=v.graphics(),x.graphics=v,x.balloonText&&this.addEventListeners(v,x))}this.fillAlpha=u}this.exponential=!1;for(d=p;d<q;d+=n)t=AmCharts.roundTo(this.step*d+this.min,s),-1!=String(t).indexOf(\"e\")&&(this.exponential=!0,String(t).split(\"e\"));this.duration&&(this.maxInterval=AmCharts.getMaxInterval(this.max,this.duration));var s=this.step,H,t=this.minorGridAlpha;this.minorGridEnabled&&(H=this.getMinorGridStep(s,this.stepWidth*","s));for(d=p;d<q;d+=n)if(p=s*d+this.min,h&&this.max-this.min>5*this.min&&(p-=this.min),p=AmCharts.roundTo(p,this.maxDecCount+1),!this.integersOnly||Math.round(p)==p)if(isNaN(w)||Number(AmCharts.toFixed(p,w))==p){!0===h&&(0===p&&(p=this.minReal),r>this.logGridLimit&&(p=Math.pow(10,d)));v=this.formatValue(p,!1,d);Math.round(d/k)!=d/k&&(v=void 0);if(0===d&&!l||d==q-1&&!m)v=\" \";c=this.getCoordinate(p);v=new this.axisItemRenderer(this,c,v,void 0,void 0,void 0,void 0,this.boldLabels);this.pushAxisItem(v);","if(p==this.baseValue&&\"radar\"!=a.type){var F,G,x=this.viW,A=this.viH;v=this.viX;u=this.viY;\"H\"==this.orientation?0<=c&&c<=x+1&&(F=[c,c,c+e],G=[A,0,f]):0<=c&&c<=A+1&&(F=[0,x,x+e],G=[c,c,c+f]);F&&(c=AmCharts.fitToBounds(2*this.gridAlpha,0,1),c=AmCharts.line(a.container,F,G,this.gridColor,c,1,this.dashLength),c.translate(v,u),this.grid0=c,a.axesSet.push(c),c.toBack())}if(!isNaN(H)&&0<t&&d<q-1){v=this.gridAlpha;this.gridAlpha=this.minorGridAlpha;for(c=1;c<s/H;c++)u=this.getCoordinate(p+H*c),u=new this.axisItemRenderer(this,","u,\"\",!1,0,0,!1,!1,0,!0),this.pushAxisItem(u);this.gridAlpha=v}}e=this.baseValue;this.min>this.baseValue&&this.max>this.baseValue&&(e=this.min);this.min<this.baseValue&&this.max<this.baseValue&&(e=this.max);h&&e<this.minReal&&(e=this.minReal);this.baseCoord=this.getCoordinate(e);e={type:\"axisChanged\",target:this,chart:a};e.min=h?this.minReal:this.min;e.max=this.max;this.fire(\"axisChanged\",e);this.axisCreated=!0}h=this.axisLine.set;e=this.labelsSet;this.positionTitle();\"radar\"!=a.type?(a=this.viX,f=","this.viY,b.translate(a,f),e.translate(a,f)):h.toFront();!this.visible||g?(b.hide(),h.hide(),e.hide()):(b.show(),h.show(),e.show());this.axisY=this.y-this.viY;this.axisX=this.x-this.viX}},formatValue:function(a,b,c){var d=this.exponential,e=this.logarithmic,f=this.numberFormatter,g=this.chart;!0===this.logarithmic&&(d=-1!=String(a).indexOf(\"e\")?!0:!1);this.useScientificNotation&&(d=!0);this.usePrefixes&&(d=!1);d?(valueText=-1==String(a).indexOf(\"e\")?a.toExponential(15):String(a),c=valueText.split(\"e\"),","b=Number(c[0]),c=Number(c[1]),b=AmCharts.roundTo(b,14),10==b&&(b=1,c+=1),valueText=b+\"e\"+c,0===a&&(valueText=\"0\"),1==a&&(valueText=\"1\")):(e&&(d=String(a).split(\".\"),d[1]?(f.precision=d[1].length,0>c&&(f.precision=Math.abs(c))):f.precision=-1),valueText=this.usePrefixes?AmCharts.addPrefix(a,g.prefixesOfBigNumbers,g.prefixesOfSmallNumbers,f,!b):AmCharts.formatNumber(a,f,f.precision));this.duration&&(valueText=AmCharts.formatDuration(a,this.duration,\"\",this.durationUnits,this.maxInterval,f));this.recalculateToPercents?","valueText+=\"%\":(f=this.unit)&&(valueText=\"left\"==this.unitPosition?f+valueText:valueText+f);this.labelFunction&&(valueText=this.labelFunction(a,valueText,this).toString());return valueText},getMinorGridStep:function(a,b){var c=[5,4,2];60>b&&c.shift();for(var d=Math.floor(Math.log(Math.abs(a))*Math.LOG10E),e=0;e<c.length;e++){var f=a/c[e],g=Math.floor(Math.log(Math.abs(f))*Math.LOG10E);if(!(0<Math.abs(d-g)))if(1>a){if(g=Math.pow(10,-g)*f,g==Math.round(g))return f}else if(f==Math.round(f))return f}},","stackGraphs:function(a){var b=this.stackType;\"stacked\"==b&&(b=\"regular\");\"line\"==b&&(b=\"none\");\"100% stacked\"==b&&(b=\"100%\");this.stackType=b;var c=[],d=[],e=[],f=[],g,h=this.chart.graphs,k,l,m,n,p=this.baseValue,q=!1;if(\"line\"==a||\"step\"==a||\"smoothedLine\"==a)q=!0;if(q&&(\"regular\"==b||\"100%\"==b))for(n=0;n<h.length;n++)m=h[n],m.hidden||(l=m.type,m.chart==this.chart&&m.valueAxis==this&&a==l&&m.stackable&&(k&&(m.stackGraph=k),k=m));for(k=this.start;k<=this.end;k++){var r=0;for(n=0;n<h.length;n++)if(m=","h[n],m.hidden)m.newStack&&(e[k]=NaN,d[k]=NaN);else if(l=m.type,m.chart==this.chart&&m.valueAxis==this&&a==l&&m.stackable)if(l=this.data[k].axes[this.id].graphs[m.id],g=l.values.value,isNaN(g))m.newStack&&(e[k]=NaN,d[k]=NaN);else{var s=AmCharts.getDecimals(g);r<s&&(r=s);isNaN(f[k])?f[k]=Math.abs(g):f[k]+=Math.abs(g);f[k]=AmCharts.roundTo(f[k],r);s=m.fillToGraph;q&&s&&(s=this.data[k].axes[this.id].graphs[s.id])&&(l.values.open=s.values.value);\"regular\"==b&&(q&&(isNaN(c[k])?(c[k]=g,l.values.close=g,","l.values.open=this.baseValue):(isNaN(g)?l.values.close=c[k]:l.values.close=g+c[k],l.values.open=c[k],c[k]=l.values.close)),\"column\"==a&&(m.newStack&&(e[k]=NaN,d[k]=NaN),l.values.close=g,0>g?(l.values.close=g,isNaN(d[k])?l.values.open=p:(l.values.close+=d[k],l.values.open=d[k]),d[k]=l.values.close):(l.values.close=g,isNaN(e[k])?l.values.open=p:(l.values.close+=e[k],l.values.open=e[k]),e[k]=l.values.close)))}}for(k=this.start;k<=this.end;k++)for(n=0;n<h.length;n++)(m=h[n],m.hidden)?m.newStack&&(e[k]=","NaN,d[k]=NaN):(l=m.type,m.chart==this.chart&&m.valueAxis==this&&a==l&&m.stackable&&(l=this.data[k].axes[this.id].graphs[m.id],g=l.values.value,isNaN(g)||(c=g/f[k]*100,l.values.percents=c,l.values.total=f[k],m.newStack&&(e[k]=NaN,d[k]=NaN),\"100%\"==b&&(isNaN(d[k])&&(d[k]=0),isNaN(e[k])&&(e[k]=0),0>c?(l.values.close=AmCharts.fitToBounds(c+d[k],-100,100),l.values.open=d[k],d[k]=l.values.close):(l.values.close=AmCharts.fitToBounds(c+e[k],-100,100),l.values.open=e[k],e[k]=l.values.close)))))},recalculate:function(){var a=","this.chart,b=a.graphs,c;for(c=0;c<b.length;c++){var d=b[c];if(d.valueAxis==this){var e=\"value\";if(\"candlestick\"==d.type||\"ohlc\"==d.type)e=\"open\";var f,g,h=this.end+2,h=AmCharts.fitToBounds(this.end+1,0,this.data.length-1),k=this.start;0<k&&k--;var l;g=this.start;d.compareFromStart&&(g=0);if(!isNaN(a.startTime)&&(l=a.categoryAxis)){minDuration=l.minDuration();var m=new Date(a.startTime+minDuration/2),n=AmCharts.resetDateToMin(new Date(a.startTime),l.minPeriod).getTime();AmCharts.resetDateToMin(new Date(m),","l.minPeriod).getTime()>n&&g++}if(l=a.recalculateFromDate)a.dataDateFormat&&(l=AmCharts.stringToDate(l,a.dataDateFormat)),g=a.getClosestIndex(a.chartData,\"time\",l.getTime(),!0,0,a.chartData.length),h=a.chartData.length-1;for(l=g;l<=h&&(g=this.data[l].axes[this.id].graphs[d.id],f=g.values[e],isNaN(f));l++);this.recBaseValue=f;for(e=k;e<=h;e++){g=this.data[e].axes[this.id].graphs[d.id];g.percents={};var k=g.values,p;for(p in k)g.percents[p]=\"percents\"!=p?k[p]/f*100-100:k[p]}}}},getMinMax:function(){var a=","!1,b=this.chart,c=b.graphs,d;for(d=0;d<c.length;d++){var e=c[d].type;(\"line\"==e||\"step\"==e||\"smoothedLine\"==e)&&this.expandMinMax&&(a=!0)}a&&(0<this.start&&this.start--,this.end<this.data.length-1&&this.end++);\"serial\"==b.type&&(!0!==b.categoryAxis.parseDates||a||this.end<this.data.length-1&&this.end++);a=this.minMaxMultiplier;this.min=this.getMin(this.start,this.end);this.max=this.getMax();a=(this.max-this.min)*(a-1);this.min-=a;this.max+=a;a=this.guides.length;if(this.includeGuidesInMinMax&&0<a)for(b=","0;b<a;b++)c=this.guides[b],c.toValue<this.min&&(this.min=c.toValue),c.value<this.min&&(this.min=c.value),c.toValue>this.max&&(this.max=c.toValue),c.value>this.max&&(this.max=c.value);isNaN(this.minimum)||(this.min=this.minimum);isNaN(this.maximum)||(this.max=this.maximum);this.min>this.max&&(a=this.max,this.max=this.min,this.min=a);isNaN(this.minTemp)||(this.min=this.minTemp);isNaN(this.maxTemp)||(this.max=this.maxTemp);this.minReal=this.min;this.maxReal=this.max;0===this.min&&0===this.max&&(this.max=","9);this.min>this.max&&(this.min=this.max-1);a=this.min;b=this.max;c=this.max-this.min;d=0===c?Math.pow(10,Math.floor(Math.log(Math.abs(this.max))*Math.LOG10E))/10:Math.pow(10,Math.floor(Math.log(Math.abs(c))*Math.LOG10E))/10;isNaN(this.maximum)&&isNaN(this.maxTemp)&&(this.max=Math.ceil(this.max/d)*d+d);isNaN(this.minimum)&&isNaN(this.minTemp)&&(this.min=Math.floor(this.min/d)*d-d);0>this.min&&0<=a&&(this.min=0);0<this.max&&0>=b&&(this.max=0);\"100%\"==this.stackType&&(this.min=0>this.min?-100:0,this.max=","0>this.max?0:100);c=this.max-this.min;d=Math.pow(10,Math.floor(Math.log(Math.abs(c))*Math.LOG10E))/10;this.step=Math.ceil(c/this.gridCountR/d)*d;c=Math.pow(10,Math.floor(Math.log(Math.abs(this.step))*Math.LOG10E));c=this.fixStepE(c);d=Math.ceil(this.step/c);5<d&&(d=10);5>=d&&2<d&&(d=5);this.step=Math.ceil(this.step/(c*d))*c*d;1>c?(this.maxDecCount=Math.abs(Math.log(Math.abs(c))*Math.LOG10E),this.maxDecCount=Math.round(this.maxDecCount),this.step=AmCharts.roundTo(this.step,this.maxDecCount+1)):this.maxDecCount=","0;this.min=this.step*Math.floor(this.min/this.step);this.max=this.step*Math.ceil(this.max/this.step);0>this.min&&0<=a&&(this.min=0);0<this.max&&0>=b&&(this.max=0);1<this.minReal&&1<this.max-this.minReal&&(this.minReal=Math.floor(this.minReal));c=Math.pow(10,Math.floor(Math.log(Math.abs(this.minReal))*Math.LOG10E));0===this.min&&(this.minReal=c);0===this.min&&1<this.minReal&&(this.minReal=1);0<this.min&&0<this.minReal-this.step&&(this.minReal=this.min+this.step<this.minReal?this.min+this.step:this.min);","c=Math.log(b)*Math.LOG10E-Math.log(a)*Math.LOG10E;this.logarithmic&&(2<c?(this.minReal=this.min=Math.pow(10,Math.floor(Math.log(Math.abs(a))*Math.LOG10E)),this.max=Math.pow(10,Math.ceil(Math.log(Math.abs(b))*Math.LOG10E))):(b=Math.pow(10,Math.floor(Math.log(Math.abs(this.min))*Math.LOG10E))/10,a=Math.pow(10,Math.floor(Math.log(Math.abs(a))*Math.LOG10E))/10,b<a&&(this.minReal=this.min=10*a)))},fixStepE:function(a){a=a.toExponential(0).split(\"e\");var b=Number(a[1]);9==Number(a[0])&&b++;return this.generateNumber(1,","b)},generateNumber:function(a,b){var c=\"\",d;d=0>b?Math.abs(b)-1:Math.abs(b);var e;for(e=0;e<d;e++)c+=\"0\";return 0>b?Number(\"0.\"+c+String(a)):Number(String(a)+c)},getMin:function(a,b){var c,d;for(d=a;d<=b;d++){var e=this.data[d].axes[this.id].graphs,f;for(f in e)if(e.hasOwnProperty(f)){var g=this.chart.getGraphById(f);if(g.includeInMinMax&&(!g.hidden||this.includeHidden)){isNaN(c)&&(c=Infinity);this.foundGraphs=!0;g=e[f].values;this.recalculateToPercents&&(g=e[f].percents);var h;if(this.minMaxField)h=","g[this.minMaxField],h<c&&(c=h);else for(var k in g)g.hasOwnProperty(k)&&\"percents\"!=k&&\"total\"!=k&&(h=g[k],h<c&&(c=h))}}}return c},getMax:function(){var a,b;for(b=this.start;b<=this.end;b++){var c=this.data[b].axes[this.id].graphs,d;for(d in c)if(c.hasOwnProperty(d)){var e=this.chart.getGraphById(d);if(e.includeInMinMax&&(!e.hidden||this.includeHidden)){isNaN(a)&&(a=-Infinity);this.foundGraphs=!0;e=c[d].values;this.recalculateToPercents&&(e=c[d].percents);var f;if(this.minMaxField)f=e[this.minMaxField],","f>a&&(a=f);else for(var g in e)e.hasOwnProperty(g)&&\"percents\"!=g&&\"total\"!=g&&(f=e[g],f>a&&(a=f))}}}return a},dispatchZoomEvent:function(a,b){var c={type:\"axisZoomed\",startValue:a,endValue:b,target:this,chart:this.chart};this.fire(c.type,c)},zoomToValues:function(a,b){if(b<a){var c=b;b=a;a=c}a<this.min&&(a=this.min);b>this.max&&(b=this.max);c={type:\"axisSelfZoomed\"};c.chart=this.chart;c.valueAxis=this;c.multiplier=this.axisWidth/Math.abs(this.getCoordinate(b)-this.getCoordinate(a));c.position=\"V\"==","this.orientation?this.reversed?this.getCoordinate(a):this.getCoordinate(b):this.reversed?this.getCoordinate(b):this.getCoordinate(a);this.fire(c.type,c)},coordinateToValue:function(a){if(isNaN(a))return NaN;var b=this.axisWidth,c=this.stepWidth,d=this.reversed,e=this.rotate,f=this.min,g=this.minReal;return!0===this.logarithmic?Math.pow(10,(e?!0===d?(b-a)/c:a/c:!0===d?a/c:(b-a)/c)+Math.log(g)*Math.LOG10E):!0===d?e?f-(a-b)/c:a/c+f:e?a/c+f:f-(a-b)/c},getCoordinate:function(a){if(isNaN(a))return NaN;","var b=this.rotate,c=this.reversed,d=this.axisWidth,e=this.stepWidth,f=this.min,g=this.minReal;!0===this.logarithmic?(a=Math.log(a)*Math.LOG10E-Math.log(g)*Math.LOG10E,b=b?!0===c?d-e*a:e*a:!0===c?e*a:d-e*a):b=!0===c?b?d-e*(a-f):e*(a-f):b?e*(a-f):d-e*(a-f);b=this.rotate?b+(this.x-this.viX):b+(this.y-this.viY);1E7<Math.abs(b)&&(b=1E7*(b/Math.abs(b)));return Math.round(b)},synchronizeWithAxis:function(a){this.synchronizeWith=a;this.listenTo(this.synchronizeWith,\"axisChanged\",this.handleSynchronization)},","handleSynchronization:function(a){var b=this.synchronizeWith;a=b.min;var c=b.max,b=b.step,d=this.synchronizationMultiplier;d&&(this.min=a*d,this.max=c*d,this.step=b*d,a=Math.pow(10,Math.floor(Math.log(Math.abs(this.step))*Math.LOG10E)),a=Math.abs(Math.log(Math.abs(a))*Math.LOG10E),this.maxDecCount=a=Math.round(a),this.draw())}});AmCharts.RecAxis=AmCharts.Class({construct:function(a){var b=a.chart,c=a.axisThickness,d=a.axisColor,e=a.axisAlpha,f=a.offset,g=a.dx,h=a.dy,k=a.viX,l=a.viY,m=a.viH,n=a.viW,p=b.container;\"H\"==a.orientation?(d=AmCharts.line(p,[0,n],[0,0],d,e,c),this.axisWidth=a.width,\"bottom\"==a.position?(a=c/2+f+m+l-1,c=k):(a=-c/2-f+l+h,c=g+k)):(this.axisWidth=a.height,\"right\"==a.position?(d=AmCharts.line(p,[0,0,-g],[0,m,m-h],d,e,c),a=l+h,c=c/2+f+g+n+k-1):(d=AmCharts.line(p,[0,0],[0,m],d,e,c),a=l,c=-c/2-f+k));d.translate(c,","a);b.axesSet.push(d);this.set=d}});AmCharts.RecItem=AmCharts.Class({construct:function(a,b,c,d,e,f,g,h,k,l,m){b=Math.round(b);this.value=c;void 0==c&&(c=\"\");k||(k=0);void 0==d&&(d=!0);var n=a.chart.fontFamily,p=a.fontSize;void 0==p&&(p=a.chart.fontSize);var q=a.color;void 0==q&&(q=a.chart.color);void 0!==m&&(q=m);var r=a.chart.container,s=r.set();this.set=s;var w=a.axisThickness,v=a.axisColor,t=a.axisAlpha,u=a.tickLength,x=a.gridAlpha,E=a.gridThickness,A=a.gridColor,z=a.dashLength,H=a.fillColor,F=a.fillAlpha,G=a.labelsEnabled;m=a.labelRotation;","var V=a.counter,N=a.inside,ia=a.labelOffset,da=a.dx,ba=a.dy,Sa=a.orientation,na=a.position,ta=a.previousCoord,L=a.viH,Y=a.viW,$=a.offset,oa,W;g?(G=!0,isNaN(g.tickLength)||(u=g.tickLength),void 0!=g.lineColor&&(A=g.lineColor),void 0!=g.color&&(q=g.color),isNaN(g.lineAlpha)||(x=g.lineAlpha),isNaN(g.dashLength)||(z=g.dashLength),isNaN(g.lineThickness)||(E=g.lineThickness),!0===g.inside&&(N=!0),isNaN(g.labelRotation)||(m=g.labelRotation),isNaN(g.fontSize)||(p=g.fontSize),g.position&&(na=g.position),void 0!==","g.boldLabel&&(h=g.boldLabel),isNaN(g.labelOffset)||(ia=g.labelOffset)):\"\"===c&&(u=0);W=\"start\";e&&(W=\"middle\");var Z=m*Math.PI/180,pa,I=0,D=0,aa=0,S=pa=0,Ta=0;\"V\"==Sa&&(m=0);var T;G&&(T=a.autoWrap&&0===m?AmCharts.wrappedText(r,c,q,n,p,W,h,e,0):AmCharts.text(r,c,q,n,p,W,h),W=T.getBBox(),S=W.width,Ta=W.height);if(\"H\"==Sa){if(0<=b&&b<=Y+1&&(0<u&&0<t&&b+k<=Y+1&&(oa=AmCharts.line(r,[b+k,b+k],[0,u],v,t,E),s.push(oa)),0<x&&(W=AmCharts.line(r,[b,b+da,b+da],[L,L+ba,ba],A,x,E,z),s.push(W))),D=0,I=b,g&&90==","m&&N&&(I-=p),!1===d?(W=\"start\",D=\"bottom\"==na?N?D+u:D-u:N?D-u:D+u,I+=3,e&&(I+=e/2-3,W=\"middle\"),0<m&&(W=\"middle\")):W=\"middle\",1==V&&0<F&&!g&&!l&&ta<Y&&(d=AmCharts.fitToBounds(b,0,Y),ta=AmCharts.fitToBounds(ta,0,Y),pa=d-ta,0<pa&&(fill=AmCharts.rect(r,pa,a.height,H,F),fill.translate(d-pa+da,ba),s.push(fill))),\"bottom\"==na?(D+=L+p/2+$,N?(0<m?(D=L-S/2*Math.sin(Z)-u-3,I+=S/2*Math.cos(Z)-4+2):0>m?(D=L+S*Math.sin(Z)-u-3+2,I+=-S*Math.cos(Z)-Ta*Math.sin(Z)-4):D-=u+p+3+3,D-=ia):(0<m?(D=L+S/2*Math.sin(Z)+u+","3,I-=S/2*Math.cos(Z)):0>m?(D=L+u+3-S/2*Math.sin(Z)+2,I+=S/2*Math.cos(Z)):D+=u+w+3+3,D+=ia)):(D+=ba+p/2-$,I+=da,N?(0<m?(D=S/2*Math.sin(Z)+u+3,I-=S/2*Math.cos(Z)):D+=u+3,D+=ia):(0<m?(D=-(S/2)*Math.sin(Z)-u-6,I+=S/2*Math.cos(Z)):D-=u+p+3+w+3,D-=ia)),\"bottom\"==na?pa=(N?L-u-1:L+w-1)+$:(aa=da,pa=(N?ba:ba-u-w+1)-$),f&&(I+=f),f=I,0<m&&(f+=S/2*Math.cos(Z)),T&&(p=0,N&&(p=S/2*Math.cos(Z)),f+p>Y+2||0>f))T.remove(),T=null}else{0<=b&&b<=L+1&&(0<u&&0<t&&b+k<=L+1&&(oa=AmCharts.line(r,[0,u],[b+k,b+k],v,t,E),s.push(oa)),","0<x&&(W=AmCharts.line(r,[0,da,Y+da],[b,b+ba,b+ba],A,x,E,z),s.push(W)));W=\"end\";if(!0===N&&\"left\"==na||!1===N&&\"right\"==na)W=\"start\";D=b-p/2;1==V&&0<F&&!g&&!l&&(d=AmCharts.fitToBounds(b,0,L),ta=AmCharts.fitToBounds(ta,0,L),Z=d-ta,fill=AmCharts.polygon(r,[0,a.width,a.width,0],[0,0,Z,Z],H,F),fill.translate(da,d-Z+ba),s.push(fill));D+=p/2;\"right\"==na?(I+=da+Y+$,D+=ba,N?(f||(D-=p/2+3),I=I-(u+4)-ia):(I+=u+4+w,D-=2,I+=ia)):N?(I+=u+4-$,f||(D-=p/2+3),g&&(I+=da,D+=ba),I+=ia):(I+=-u-w-4-2-$,D-=2,I-=ia);oa&&","(\"right\"==na?(aa+=da+$+Y,pa+=ba,aa=N?aa-w:aa+w):(aa-=$,N||(aa-=u+w)));f&&(D+=f);N=-3;\"right\"==na&&(N+=ba);T&&(D>L+1||D<N)&&(T.remove(),T=null)}oa&&oa.translate(aa,pa);!1===a.visible&&(oa&&oa.remove(),T&&(T.remove(),T=null));T&&(T.attr({\"text-anchor\":W}),T.translate(I,D),0!==m&&T.rotate(-m,a.chart.backgroundColor),a.allLabels.push(T),\" \"!=c&&(this.label=T));l||(a.counter=0===V?1:0,a.previousCoord=b);0===this.set.node.childNodes.length&&this.set.remove()},graphics:function(){return this.set},getLabel:function(){return this.label}});AmCharts.RecFill=AmCharts.Class({construct:function(a,b,c,d){var e=a.dx,f=a.dy,g=a.orientation,h=0;if(c<b){var k=b;b=c;c=k}var l=d.fillAlpha;isNaN(l)&&(l=0);k=a.chart.container;d=d.fillColor;\"V\"==g?(b=AmCharts.fitToBounds(b,0,a.viH),c=AmCharts.fitToBounds(c,0,a.viH)):(b=AmCharts.fitToBounds(b,0,a.viW),c=AmCharts.fitToBounds(c,0,a.viW));c-=b;isNaN(c)&&(c=4,h=2,l=0);0>c&&\"object\"==typeof d&&(d=d.join(\",\").split(\",\").reverse());\"V\"==g?(a=AmCharts.rect(k,a.width,c,d,l),a.translate(e,b-h+f)):(a=AmCharts.rect(k,","c,a.height,d,l),a.translate(b-h+e,f));this.set=k.set([a])},graphics:function(){return this.set},getLabel:function(){}});AmCharts.AmChart=AmCharts.Class({construct:function(a){this.theme=a;this.version=\"3.11.1\";AmCharts.addChart(this);this.createEvents(\"dataUpdated\",\"init\",\"rendered\",\"drawn\",\"failed\");this.height=this.width=\"100%\";this.dataChanged=!0;this.chartCreated=!1;this.previousWidth=this.previousHeight=0;this.backgroundColor=\"#FFFFFF\";this.borderAlpha=this.backgroundAlpha=0;this.color=this.borderColor=\"#000000\";this.fontFamily=\"Verdana\";this.fontSize=11;this.usePrefixes=!1;this.precision=-1;this.percentPrecision=","2;this.decimalSeparator=\".\";this.thousandsSeparator=\",\";this.labels=[];this.allLabels=[];this.titles=[];this.marginRight=this.marginLeft=this.autoMarginOffset=0;this.timeOuts=[];this.creditsPosition=\"top-left\";var b=document.createElement(\"div\"),c=b.style;c.overflow=\"hidden\";c.position=\"relative\";c.textAlign=\"left\";this.chartDiv=b;b=document.createElement(\"div\");c=b.style;c.overflow=\"hidden\";c.position=\"relative\";c.textAlign=\"left\";this.legendDiv=b;this.titleHeight=0;this.hideBalloonTime=150;this.handDrawScatter=","2;this.handDrawThickness=1;this.prefixesOfBigNumbers=[{number:1E3,prefix:\"k\"},{number:1E6,prefix:\"M\"},{number:1E9,prefix:\"G\"},{number:1E12,prefix:\"T\"},{number:1E15,prefix:\"P\"},{number:1E18,prefix:\"E\"},{number:1E21,prefix:\"Z\"},{number:1E24,prefix:\"Y\"}];this.prefixesOfSmallNumbers=[{number:1E-24,prefix:\"y\"},{number:1E-21,prefix:\"z\"},{number:1E-18,prefix:\"a\"},{number:1E-15,prefix:\"f\"},{number:1E-12,prefix:\"p\"},{number:1E-9,prefix:\"n\"},{number:1E-6,prefix:\"\\u03bc\"},{number:.001,prefix:\"m\"}];this.panEventsEnabled=","!0;AmCharts.bezierX=3;AmCharts.bezierY=6;this.product=\"amcharts\";this.animations=[];this.balloon=new AmCharts.AmBalloon(this.theme);this.balloon.chart=this;AmCharts.applyTheme(this,a,\"AmChart\")},drawChart:function(){this.drawBackground();this.redrawLabels();this.drawTitles();this.brr()},drawBackground:function(){AmCharts.remove(this.background);var a=this.container,b=this.backgroundColor,c=this.backgroundAlpha,d=this.set;AmCharts.isModern||0!==c||(c=.001);var e=this.updateWidth();this.realWidth=e;","var f=this.updateHeight();this.realHeight=f;this.background=b=AmCharts.polygon(a,[0,e-1,e-1,0],[0,0,f-1,f-1],b,c,1,this.borderColor,this.borderAlpha);d.push(b);if(b=this.backgroundImage)this.path&&(b=this.path+b),this.bgImg=a=a.image(b,0,0,e,f),d.push(a)},drawTitles:function(){var a=this.titles;if(AmCharts.ifArray(a)){var b=20,c;for(c=0;c<a.length;c++){var d=a[c],e=d.color;void 0===e&&(e=this.color);var f=d.size;isNaN(f)&&(f=this.fontSize+2);isNaN(d.alpha);var g=this.marginLeft,e=AmCharts.text(this.container,","d.text,e,this.fontFamily,f);e.translate(g+(this.realWidth-this.marginRight-g)/2,b);e.node.style.pointerEvents=\"none\";g=!0;void 0!==d.bold&&(g=d.bold);g&&e.attr({\"font-weight\":\"bold\"});e.attr({opacity:d.alpha});b+=f+6;this.freeLabelsSet.push(e)}}},write:function(a){if(a=\"object\"!=typeof a?document.getElementById(a):a){a.innerHTML=\"\";this.div=a;a.style.overflow=\"hidden\";a.style.textAlign=\"left\";var b=this.chartDiv,c=this.legendDiv,d=this.legend,e=c.style,f=b.style;this.measure();var g,h=document.createElement(\"div\");","g=h.style;g.position=\"relative\";this.containerDiv=h;a.appendChild(h);var k=this.exportConfig;k&&AmCharts.AmExport&&!this.AmExport&&(this.AmExport=new AmCharts.AmExport(this,k));this.amExport&&AmCharts.AmExport&&(this.AmExport=AmCharts.extend(this.amExport,new AmCharts.AmExport(this),!0));this.AmExport&&this.AmExport.init&&this.AmExport.init();if(d)switch(d=this.addLegend(d,d.divId),d.position){case \"bottom\":h.appendChild(b);h.appendChild(c);break;case \"top\":h.appendChild(c);h.appendChild(b);break;","case \"absolute\":g.width=a.style.width;g.height=a.style.height;e.position=\"absolute\";f.position=\"absolute\";void 0!==d.left&&(e.left=d.left+\"px\");void 0!==d.right&&(e.right=d.right+\"px\");void 0!==d.top&&(e.top=d.top+\"px\");void 0!==d.bottom&&(e.bottom=d.bottom+\"px\");d.marginLeft=0;d.marginRight=0;h.appendChild(b);h.appendChild(c);break;case \"right\":g.width=a.style.width;g.height=a.style.height;e.position=\"relative\";f.position=\"absolute\";h.appendChild(b);h.appendChild(c);break;case \"left\":g.width=a.style.width;","g.height=a.style.height;e.position=\"absolute\";f.position=\"relative\";h.appendChild(b);h.appendChild(c);break;case \"outside\":h.appendChild(b)}else h.appendChild(b);this.listenersAdded||(this.addListeners(),this.listenersAdded=!0);this.initChart()}},createLabelsSet:function(){AmCharts.remove(this.labelsSet);this.labelsSet=this.container.set();this.freeLabelsSet.push(this.labelsSet)},initChart:function(){AmCharts.callInitHandler(this);AmCharts.applyLang(this.language,this);var a=this.numberFormatter;","a&&(isNaN(a.precision)||(this.precision=a.precision),void 0!==a.thousandsSeparator&&(this.thousandsSeparator=a.thousandsSeparator),void 0!==a.decimalSeparator&&(this.decimalSeparator=a.decimalSeparator));(a=this.percentFormatter)&&!isNaN(a.precision)&&(this.percentPrecision=a.precision);this.nf={precision:this.precision,thousandsSeparator:this.thousandsSeparator,decimalSeparator:this.decimalSeparator};this.pf={precision:this.percentPrecision,thousandsSeparator:this.thousandsSeparator,decimalSeparator:this.decimalSeparator};","this.divIsFixed=AmCharts.findIfFixed(this.chartDiv);this.previousHeight=this.divRealHeight;this.previousWidth=this.divRealWidth;this.destroy();this.startInterval();a=0;document.attachEvent&&!window.opera&&(a=1);this.dmouseX=this.dmouseY=0;var b=document.getElementsByTagName(\"html\")[0];b&&window.getComputedStyle&&(b=window.getComputedStyle(b,null))&&(this.dmouseY=AmCharts.removePx(b.getPropertyValue(\"margin-top\")),this.dmouseX=AmCharts.removePx(b.getPropertyValue(\"margin-left\")));this.mouseMode=a;","(a=this.container)?(a.container.innerHTML=\"\",this.chartDiv.appendChild(a.container),a.setSize(this.realWidth,this.realHeight)):a=new AmCharts.AmDraw(this.chartDiv,this.realWidth,this.realHeight,this);AmCharts.VML||AmCharts.SVG?(a.handDrawn=this.handDrawn,a.handDrawScatter=this.handDrawScatter,a.handDrawThickness=this.handDrawThickness,this.container=a,this.set&&this.set.remove(),this.set=a.set(),this.gridSet&&this.gridSet.remove(),this.gridSet=a.set(),this.cursorLineSet&&this.cursorLineSet.remove(),","this.cursorLineSet=a.set(),this.graphsBehindSet&&this.graphsBehindSet.remove(),this.graphsBehindSet=a.set(),this.bulletBehindSet&&this.bulletBehindSet.remove(),this.bulletBehindSet=a.set(),this.columnSet&&this.columnSet.remove(),this.columnSet=a.set(),this.graphsSet&&this.graphsSet.remove(),this.graphsSet=a.set(),this.trendLinesSet&&this.trendLinesSet.remove(),this.trendLinesSet=a.set(),this.axesLabelsSet&&this.axesLabelsSet.remove(),this.axesLabelsSet=a.set(),this.axesSet&&this.axesSet.remove(),","this.axesSet=a.set(),this.cursorSet&&this.cursorSet.remove(),this.cursorSet=a.set(),this.scrollbarsSet&&this.scrollbarsSet.remove(),this.scrollbarsSet=a.set(),this.bulletSet&&this.bulletSet.remove(),this.bulletSet=a.set(),this.freeLabelsSet&&this.freeLabelsSet.remove(),this.freeLabelsSet=a.set(),this.balloonsSet&&this.balloonsSet.remove(),this.balloonsSet=a.set(),this.zoomButtonSet&&this.zoomButtonSet.remove(),this.zoomButtonSet=a.set(),this.linkSet&&this.linkSet.remove(),this.linkSet=a.set(),this.renderFix()):","this.fire(\"failed\",{type:\"failed\",chart:this})},measure:function(){var a=this.div;if(a){var b=this.chartDiv,c=a.offsetWidth,d=a.offsetHeight,e=this.container;a.clientHeight&&(c=a.clientWidth,d=a.clientHeight);var f=AmCharts.removePx(AmCharts.getStyle(a,\"padding-left\")),g=AmCharts.removePx(AmCharts.getStyle(a,\"padding-right\")),h=AmCharts.removePx(AmCharts.getStyle(a,\"padding-top\")),k=AmCharts.removePx(AmCharts.getStyle(a,\"padding-bottom\"));isNaN(f)||(c-=f);isNaN(g)||(c-=g);isNaN(h)||(d-=h);isNaN(k)||","(d-=k);f=a.style;a=f.width;f=f.height;-1!=a.indexOf(\"px\")&&(c=AmCharts.removePx(a));-1!=f.indexOf(\"px\")&&(d=AmCharts.removePx(f));a=AmCharts.toCoordinate(this.width,c);f=AmCharts.toCoordinate(this.height,d);this.balloon=AmCharts.processObject(this.balloon,AmCharts.AmBalloon,this.theme);this.balloon.chart=this;(a!=this.previousWidth||f!=this.previousHeight)&&0<a&&0<f&&(b.style.width=a+\"px\",b.style.height=f+\"px\",e&&e.setSize(a,f));this.balloon.setBounds(2,2,a-2,f);this.realWidth=a;this.realHeight=f;","this.divRealWidth=c;this.divRealHeight=d}},destroy:function(){this.chartDiv.innerHTML=\"\";this.clearTimeOuts();this.interval&&clearInterval(this.interval);this.interval=NaN},clearTimeOuts:function(){var a=this.timeOuts;if(a){var b;for(b=0;b<a.length;b++)clearTimeout(a[b])}this.timeOuts=[]},clear:function(a){AmCharts.callMethod(\"clear\",[this.chartScrollbar,this.scrollbarV,this.scrollbarH,this.chartCursor]);this.chartCursor=this.scrollbarH=this.scrollbarV=this.chartScrollbar=null;this.clearTimeOuts();","this.interval&&clearInterval(this.interval);this.container&&(this.container.remove(this.chartDiv),this.container.remove(this.legendDiv));a||AmCharts.removeChart(this)},setMouseCursor:function(a){\"auto\"==a&&AmCharts.isNN&&(a=\"default\");this.chartDiv.style.cursor=a;this.legendDiv.style.cursor=a},redrawLabels:function(){this.labels=[];var a=this.allLabels;this.createLabelsSet();var b;for(b=0;b<a.length;b++)this.drawLabel(a[b])},drawLabel:function(a){if(this.container){var b=a.y,c=a.text,d=a.align,e=","a.size,f=a.color,g=a.rotation,h=a.alpha,k=a.bold,l=AmCharts.toCoordinate(a.x,this.realWidth),b=AmCharts.toCoordinate(b,this.realHeight);l||(l=0);b||(b=0);void 0===f&&(f=this.color);isNaN(e)&&(e=this.fontSize);d||(d=\"start\");\"left\"==d&&(d=\"start\");\"right\"==d&&(d=\"end\");\"center\"==d&&(d=\"middle\",g?b=this.realHeight-b+b/2:l=this.realWidth/2-l);void 0===h&&(h=1);void 0===g&&(g=0);b+=e/2;c=AmCharts.text(this.container,c,f,this.fontFamily,e,d,k,h);c.translate(l,b);0!==g&&c.rotate(g);a.url?(c.setAttr(\"cursor\",","\"pointer\"),c.click(function(){AmCharts.getURL(a.url)})):c.node.style.pointerEvents=\"none\";this.labelsSet.push(c);this.labels.push(c)}},addLabel:function(a,b,c,d,e,f,g,h,k,l){a={x:a,y:b,text:c,align:d,size:e,color:f,alpha:h,rotation:g,bold:k,url:l};this.container&&this.drawLabel(a);this.allLabels.push(a)},clearLabels:function(){var a=this.labels,b;for(b=a.length-1;0<=b;b--)a[b].remove();this.labels=[];this.allLabels=[]},updateHeight:function(){var a=this.divRealHeight,b=this.legend;if(b){var c=this.legendDiv.offsetHeight,","b=b.position;if(\"top\"==b||\"bottom\"==b){a-=c;if(0>a||isNaN(a))a=0;this.chartDiv.style.height=a+\"px\"}}return a},updateWidth:function(){var a=this.divRealWidth,b=this.divRealHeight,c=this.legend;if(c){var d=this.legendDiv,e=d.offsetWidth;isNaN(c.width)||(e=c.width);var f=d.offsetHeight,d=d.style,g=this.chartDiv.style,c=c.position;if(\"right\"==c||\"left\"==c){a-=e;if(0>a||isNaN(a))a=0;g.width=a+\"px\";\"left\"==c?g.left=e+\"px\":d.left=a+\"px\";b>f&&(d.top=(b-f)/2+\"px\")}}return a},getTitleHeight:function(){var a=","0,b=this.titles;if(0<b.length){var a=15,c;for(c=0;c<b.length;c++){var d=b[c].size;isNaN(d)&&(d=this.fontSize+2);a+=d+6}}return a},addTitle:function(a,b,c,d,e){isNaN(b)&&(b=this.fontSize+2);a={text:a,size:b,color:c,alpha:d,bold:e};this.titles.push(a);return a},addMouseWheel:function(){var a=this;window.addEventListener&&!a.wheelAdded&&(window.addEventListener(\"DOMMouseScroll\",function(b){a.handleWheel.call(a,b)},!1),document.addEventListener(\"mousewheel\",function(b){a.handleWheel.call(a,b)},!1),a.wheelAdded=","!0)},handleWheel:function(a){if(this.mouseIsOver){var b=0;a||(a=window.event);a.wheelDelta?b=a.wheelDelta/120:a.detail&&(b=-a.detail/3);b&&this.handleWheelReal(b,a.shiftKey);a.preventDefault&&a.preventDefault()}},handleWheelReal:function(a){},addListeners:function(){var a=this,b=a.chartDiv;document.addEventListener?(a.panEventsEnabled&&(b.style.msTouchAction=\"none\",\"ontouchstart\"in document.documentElement&&(b.addEventListener(\"touchstart\",function(b){a.handleTouchMove.call(a,b);a.handleTouchStart.call(a,","b)},!0),b.addEventListener(\"touchmove\",function(b){a.handleTouchMove.call(a,b)},!0),b.addEventListener(\"touchend\",function(b){a.handleTouchEnd.call(a,b)},!0))),b.addEventListener(\"mousedown\",function(b){a.mouseIsOver=!0;a.handleMouseMove.call(a,b);a.handleMouseDown.call(a,b)},!0),b.addEventListener(\"mouseover\",function(b){a.handleMouseOver.call(a,b)},!0),b.addEventListener(\"mouseout\",function(b){a.handleMouseOut.call(a,b)},!0)):(b.attachEvent(\"onmousedown\",function(b){a.handleMouseDown.call(a,b)}),","b.attachEvent(\"onmouseover\",function(b){a.handleMouseOver.call(a,b)}),b.attachEvent(\"onmouseout\",function(b){a.handleMouseOut.call(a,b)}))},dispDUpd:function(){var a;this.dispatchDataUpdated&&(this.dispatchDataUpdated=!1,a=\"dataUpdated\",this.fire(a,{type:a,chart:this}));this.chartCreated||(a=\"init\",this.fire(a,{type:a,chart:this}));this.chartRendered||(a=\"rendered\",this.fire(a,{type:a,chart:this}),this.chartRendered=!0);a=\"drawn\";this.fire(a,{type:a,chart:this})},validateSize:function(){var a=this;","a.measure();var b=a.legend;if((a.realWidth!=a.previousWidth||a.realHeight!=a.previousHeight)&&0<a.realWidth&&0<a.realHeight){a.sizeChanged=!0;if(b){clearTimeout(a.legendInitTO);var c=setTimeout(function(){b.invalidateSize()},100);a.timeOuts.push(c);a.legendInitTO=c}a.marginsUpdated=\"xy\"!=a.type?!1:!0;clearTimeout(a.initTO);c=setTimeout(function(){a.initChart()},150);a.timeOuts.push(c);a.initTO=c}a.renderFix();b&&b.renderFix()},invalidateSize:function(){this.previousHeight=this.previousWidth=NaN;this.invalidateSizeReal()},","invalidateSizeReal:function(){var a=this;a.marginsUpdated=!1;clearTimeout(a.validateTO);var b=setTimeout(function(){a.validateSize()},5);a.timeOuts.push(b);a.validateTO=b},validateData:function(a){this.chartCreated&&(this.dataChanged=!0,this.marginsUpdated=\"xy\"!=this.type?!1:!0,this.initChart(a))},validateNow:function(){this.chartRendered=!1;this.write(this.div)},showItem:function(a){a.hidden=!1;this.initChart()},hideItem:function(a){a.hidden=!0;this.initChart()},hideBalloon:function(){var a=this;","clearInterval(a.hoverInt);clearTimeout(a.balloonTO);a.hoverInt=setTimeout(function(){a.hideBalloonReal.call(a)},a.hideBalloonTime)},cleanChart:function(){},hideBalloonReal:function(){var a=this.balloon;a&&a.hide()},showBalloon:function(a,b,c,d,e){var f=this;clearTimeout(f.balloonTO);clearInterval(f.hoverInt);f.balloonTO=setTimeout(function(){f.showBalloonReal.call(f,a,b,c,d,e)},1)},showBalloonReal:function(a,b,c,d,e){this.handleMouseMove();var f=this.balloon;f.enabled&&(f.followCursor(!1),f.changeColor(b),","!c||f.fixedPosition?(f.setPosition(d,e),f.followCursor(!1)):f.followCursor(!0),a&&f.showBalloon(a))},handleTouchMove:function(a){this.hideBalloon();var b=this.chartDiv;a.touches&&(a=a.touches.item(0),this.mouseX=a.pageX-AmCharts.findPosX(b),this.mouseY=a.pageY-AmCharts.findPosY(b))},handleMouseOver:function(a){AmCharts.resetMouseOver();this.mouseIsOver=!0},handleMouseOut:function(a){AmCharts.resetMouseOver();this.mouseIsOver=!1},handleMouseMove:function(a){if(this.mouseIsOver){var b=this.chartDiv;","a||(a=window.event);var c,d;if(a){this.posX=AmCharts.findPosX(b);this.posY=AmCharts.findPosY(b);switch(this.mouseMode){case 1:c=a.clientX-this.posX;d=a.clientY-this.posY;if(!this.divIsFixed){var b=document.body,e,f;b&&(e=b.scrollLeft,y1=b.scrollTop);if(b=document.documentElement)f=b.scrollLeft,y2=b.scrollTop;e=Math.max(e,f);f=Math.max(y1,y2);c+=e;d+=f}break;case 0:this.divIsFixed?(c=a.clientX-this.posX,d=a.clientY-this.posY):(c=a.pageX-this.posX,d=a.pageY-this.posY)}a.touches&&(a=a.touches.item(0),","c=a.pageX-this.posX,d=a.pageY-this.posY);this.mouseX=c-this.dmouseX;this.mouseY=d-this.dmouseY}}},handleTouchStart:function(a){this.handleMouseDown(a)},handleTouchEnd:function(a){AmCharts.resetMouseOver();this.handleReleaseOutside(a)},handleReleaseOutside:function(a){},handleMouseDown:function(a){AmCharts.resetMouseOver();this.mouseIsOver=!0;a&&a.preventDefault&&a.preventDefault()},addLegend:function(a,b){a=AmCharts.processObject(a,AmCharts.AmLegend,this.theme);a.divId=b;var c;c=\"object\"!=typeof b&&","b?document.getElementById(b):b;this.legend=a;a.chart=this;c?(a.div=c,a.position=\"outside\",a.autoMargins=!1):a.div=this.legendDiv;c=this.handleLegendEvent;this.listenTo(a,\"showItem\",c);this.listenTo(a,\"hideItem\",c);this.listenTo(a,\"clickMarker\",c);this.listenTo(a,\"rollOverItem\",c);this.listenTo(a,\"rollOutItem\",c);this.listenTo(a,\"rollOverMarker\",c);this.listenTo(a,\"rollOutMarker\",c);this.listenTo(a,\"clickLabel\",c);return a},removeLegend:function(){this.legend=void 0;this.legendDiv.innerHTML=\"\"},handleResize:function(){(AmCharts.isPercents(this.width)||","AmCharts.isPercents(this.height))&&this.invalidateSizeReal();this.renderFix()},renderFix:function(){if(!AmCharts.VML){var a=this.container;a&&a.renderFix()}},getSVG:function(){if(AmCharts.hasSVG)return this.container},animate:function(a,b,c,d,e,f,g){a[\"an_\"+b]&&AmCharts.removeFromArray(this.animations,a[\"an_\"+b]);c={obj:a,frame:0,attribute:b,from:c,to:d,time:e,effect:f,suffix:g};a[\"an_\"+b]=c;this.animations.push(c);return c},setLegendData:function(a){var b=this.legend;b&&b.setData(a)},startInterval:function(){var a=","this;clearInterval(a.interval);a.interval=setInterval(function(){a.updateAnimations.call(a)},AmCharts.updateRate)},stopAnim:function(a){AmCharts.removeFromArray(this.animations,a)},updateAnimations:function(){var a;this.container&&this.container.update();for(a=this.animations.length-1;0<=a;a--){var b=this.animations[a],c=1E3*b.time/AmCharts.updateRate,d=b.frame+1,e=b.obj,f=b.attribute;if(d<=c){b.frame++;var g=Number(b.from),h=Number(b.to)-g,c=AmCharts[b.effect](0,d,g,h,c);0===h?(this.animations.splice(a,","1),e.node.style[f]=Number(b.to)+b.suffix):e.node.style[f]=c+b.suffix}else e.node.style[f]=Number(b.to)+b.suffix,this.animations.splice(a,1)}},inIframe:function(){try{return window.self!==window.top}catch(a){return!0}},brr:function(){var a=window.location.hostname.split(\".\"),b;2<=a.length&&(b=a[a.length-2]+\".\"+a[a.length-1]);this.amLink&&(a=this.amLink.parentNode)&&a.removeChild(this.amLink);a=this.creditsPosition;if(\"amcharts.com\"!=b||!0===this.inIframe()){var c=b=0,d=this.realWidth,e=this.realHeight;","if(\"serial\"==this.type||\"xy\"==this.type)b=this.marginLeftReal,c=this.marginTopReal,d=b+this.plotAreaWidth,e=c+this.plotAreaHeight;var f=\"http://www.amcharts.com/javascript-charts/\",g=\"JavaScript charts\",h=\"StockChart By GetFreakingRich\";\"ammap\"==this.product&&(f=\"http://www.ammap.com/javascript-maps/\",g=\"Interactive JavaScript maps\",h=\"JS map by amCharts\");var k=document.createElement(\"a\"),h=document.createTextNode(h);k.setAttribute(\"href\",f);k.setAttribute(\"title\",g);k.appendChild(h);this.chartDiv.appendChild(k);","this.amLink=k;f=k.style;f.position=\"absolute\";f.textDecoration=\"none\";f.color=this.color;f.fontFamily=this.fontFamily;f.fontSize=this.fontSize+\"px\";f.opacity=.7;f.display=\"block\";var g=k.offsetWidth,k=k.offsetHeight,h=5+b,l=c+5;\"bottom-left\"==a&&(h=5+b,l=e-k-3);\"bottom-right\"==a&&(h=d-g-5,l=e-k-3);\"top-right\"==a&&(h=d-g-5,l=c+5);f.left=h+\"px\";f.top=l+\"px\"}}});AmCharts.Slice=AmCharts.Class({construct:function(){}});AmCharts.SerialDataItem=AmCharts.Class({construct:function(){}});","AmCharts.GraphDataItem=AmCharts.Class({construct:function(){}});AmCharts.Guide=AmCharts.Class({construct:function(a){this.cname=\"Guide\";AmCharts.applyTheme(this,a,this.cname)}});AmCharts.AmGraph=AmCharts.Class({construct:function(a){this.cname=\"AmGraph\";this.createEvents(\"rollOverGraphItem\",\"rollOutGraphItem\",\"clickGraphItem\",\"doubleClickGraphItem\",\"rightClickGraphItem\",\"clickGraph\",\"rollOverGraph\",\"rollOutGraph\");this.type=\"line\";this.stackable=!0;this.columnCount=1;this.columnIndex=0;this.centerCustomBullets=this.showBalloon=!0;this.maxBulletSize=50;this.minBulletSize=4;this.balloonText=\"[[value]]\";this.hidden=this.scrollbar=this.animationPlayed=!1;this.pointPosition=\"middle\";","this.depthCount=1;this.includeInMinMax=!0;this.negativeBase=0;this.visibleInLegend=!0;this.showAllValueLabels=!1;this.showBulletsAt=this.showBalloonAt=\"close\";this.lineThickness=1;this.dashLength=0;this.connect=!0;this.lineAlpha=1;this.bullet=\"none\";this.bulletBorderThickness=2;this.bulletBorderAlpha=0;this.bulletAlpha=1;this.bulletSize=8;this.hideBulletsCount=this.bulletOffset=0;this.labelPosition=\"top\";this.cornerRadiusTop=0;this.cursorBulletAlpha=1;this.gradientOrientation=\"vertical\";this.dy=this.dx=","0;this.periodValue=\"\";this.clustered=!0;this.periodSpan=1;this.y=this.x=0;this.switchable=!0;this.tcc=this.minDistance=1;AmCharts.applyTheme(this,a,this.cname)},draw:function(){var a=this.chart;isNaN(this.precision)||(this.numberFormatter?this.numberFormatter.precision=this.precision:this.numberFormatter={precision:this.precision,decimalSeparator:a.decimalSeparator,thousandsSeparator:a.thousandsSeparator});var b=a.container;this.container=b;this.destroy();var c=b.set(),d=b.set();this.behindColumns?","(a.graphsBehindSet.push(c),a.bulletBehindSet.push(d)):(a.graphsSet.push(c),a.bulletSet.push(d));var e=this.bulletAxis;AmCharts.isString(e)&&(this.bulletAxis=a.getValueAxisById(e));this.bulletSet=d;this.scrollbar||(e=a.marginLeftReal,a=a.marginTopReal,c.translate(e,a),d.translate(e,a));b=b.set();AmCharts.remove(this.columnsSet);c.push(b);this.set=c;this.columnsSet=b;this.columnsArray=[];this.ownColumns=[];this.allBullets=[];this.animationArray=[];AmCharts.ifArray(this.data)&&(c=!1,\"xy\"==this.chart.type?","this.xAxis.axisCreated&&this.yAxis.axisCreated&&(c=!0):this.valueAxis.axisCreated&&(c=!0),!this.hidden&&c&&this.createGraph())},createGraph:function(){var a=this,b=a.chart;\"inside\"==a.labelPosition&&\"column\"!=a.type&&(a.labelPosition=\"bottom\");a.startAlpha=b.startAlpha;a.seqAn=b.sequencedAnimation;a.baseCoord=a.valueAxis.baseCoord;void 0===a.fillAlphas&&(a.fillAlphas=0);a.bulletColorR=a.bulletColor;void 0===a.bulletColorR&&(a.bulletColorR=a.lineColorR,a.bulletColorNegative=a.negativeLineColor);void 0===","a.bulletAlpha&&(a.bulletAlpha=a.lineAlpha);clearTimeout(a.playedTO);if(!isNaN(a.valueAxis.min)&&!isNaN(a.valueAxis.max)){switch(b.type){case \"serial\":a.categoryAxis&&(a.createSerialGraph(),\"candlestick\"==a.type&&1>a.valueAxis.minMaxMultiplier&&a.positiveClip(a.set));break;case \"radar\":a.createRadarGraph();break;case \"xy\":a.createXYGraph(),a.positiveClip(a.set)}a.playedTO=setTimeout(function(){a.setAnimationPlayed.call(a)},500*a.chart.startDuration)}},setAnimationPlayed:function(){this.animationPlayed=","!0},createXYGraph:function(){var a=[],b=[],c=this.xAxis,d=this.yAxis;this.pmh=d.viH+1;this.pmw=c.viW+1;this.pmy=this.pmx=0;var e;for(e=this.start;e<=this.end;e++){var f=this.data[e].axes[c.id].graphs[this.id],g=f.values,h=g.x,k=g.y,g=c.getCoordinate(h),l=d.getCoordinate(k);!isNaN(h)&&!isNaN(k)&&(a.push(g),b.push(l),(h=this.createBullet(f,g,l,e))||(h=0),k=this.labelText)&&(f=this.createLabel(f,g,l,k),this.allBullets.push(f),this.positionLabel(g,l,f,this.labelPosition,h))}this.drawLineGraph(a,b);this.launchAnimation()},","createRadarGraph:function(){var a=this.valueAxis.stackType,b=[],c=[],d,e,f;for(f=this.start;f<=this.end;f++){var g=this.data[f].axes[this.valueAxis.id].graphs[this.id],h;h=\"none\"==a||\"3d\"==a?g.values.value:g.values.close;if(isNaN(h))this.drawLineGraph(b,c),b=[],c=[];else{var k=this.y-(this.valueAxis.getCoordinate(h)-this.height),l=180-360/(this.end-this.start+1)*f;h=k*Math.sin(l/180*Math.PI);k*=Math.cos(l/180*Math.PI);b.push(h);c.push(k);(l=this.createBullet(g,h,k,f))||(l=0);var m=this.labelText;","m&&(g=this.createLabel(g,h,k,m),this.allBullets.push(g),this.positionLabel(h,k,g,this.labelPosition,l));isNaN(d)&&(d=h);isNaN(e)&&(e=k)}}b.push(d);c.push(e);this.drawLineGraph(b,c);this.launchAnimation()},positionLabel:function(a,b,c,d,e){var f=c.getBBox();switch(d){case \"left\":a-=(f.width+e)/2+2;break;case \"top\":b-=(e+f.height)/2+1;break;case \"right\":a+=(f.width+e)/2+2;break;case \"bottom\":b+=(e+f.height)/2+1}c.translate(a,b)},getGradRotation:function(){var a=270;\"horizontal\"==this.gradientOrientation&&","(a=0);return this.gradientRotation=a},createSerialGraph:function(){this.dashLengthSwitched=this.fillColorsSwitched=this.lineColorSwitched=void 0;var a=this.chart,b=this.id,c=this.index,d=this.data,e=this.chart.container,f=this.valueAxis,g=this.type,h=this.columnWidthReal,k=this.showBulletsAt;isNaN(this.columnWidth)||(h=this.columnWidth);isNaN(h)&&(h=.8);var l=this.useNegativeColorIfDown,m=this.width,n=this.height,p=this.y,q=this.rotate,r=this.columnCount,s=AmCharts.toCoordinate(this.cornerRadiusTop,","h/2),w=this.connect,v=[],t=[],u,x,E,A,z=this.chart.graphs.length,H,F=this.dx/this.tcc,G=this.dy/this.tcc,V=f.stackType,N=this.labelPosition,ia=this.start,da=this.end,ba=this.scrollbar,Sa=this.categoryAxis,na=this.baseCoord,ta=this.negativeBase,L=this.columnIndex,Y=this.lineThickness,$=this.lineAlpha,oa=this.lineColorR,W=this.dashLength,Z=this.set,pa,I=N,D=this.getGradRotation(),aa=this.chart.columnSpacing,S=Sa.cellWidth,Ta=(S*h-r)/r;aa>Ta&&(aa=Ta);var T,y,bb,kb=n+1,lb=m+1,cb=0,mb=0,nb,ob,db,eb,pb=","this.fillColorsR,Da=this.negativeFillColors,wa=this.negativeLineColor,Ua=this.fillAlphas,Va=this.negativeFillAlphas;\"object\"==typeof Ua&&(Ua=Ua[0]);\"object\"==typeof Va&&(Va=Va[0]);var fb=f.getCoordinate(f.min);f.logarithmic&&(fb=f.getCoordinate(f.minReal));this.minCoord=fb;this.resetBullet&&(this.bullet=\"none\");if(!(ba||\"line\"!=g&&\"smoothedLine\"!=g&&\"step\"!=g||(1==d.length&&\"step\"!=g&&\"none\"==this.bullet&&(this.bullet=\"round\",this.resetBullet=!0),!Da&&void 0==wa||l))){var Na=ta;Na>f.max&&(Na=f.max);","Na<f.min&&(Na=f.min);f.logarithmic&&(Na=f.minReal);var Aa=f.getCoordinate(Na),Hb=f.getCoordinate(f.max);q?(kb=n,lb=Math.abs(Hb-Aa),nb=n,ob=Math.abs(fb-Aa),eb=mb=0,f.reversed?(cb=0,db=Aa):(cb=Aa,db=0)):(lb=m,kb=Math.abs(Hb-Aa),ob=m,nb=Math.abs(fb-Aa),db=cb=0,f.reversed?(eb=p,mb=Aa):eb=Aa+1)}var Ba=Math.round;this.pmx=Ba(cb);this.pmy=Ba(mb);this.pmh=Ba(kb);this.pmw=Ba(lb);this.nmx=Ba(db);this.nmy=Ba(eb);this.nmh=Ba(nb);this.nmw=Ba(ob);AmCharts.isModern||(this.nmy=this.nmx=0,this.nmh=this.height);this.clustered||","(r=1);h=\"column\"==g?(S*h-aa*(r-1))/r:S*h;1>h&&(h=1);var J;if(\"line\"==g||\"step\"==g||\"smoothedLine\"==g){if(0<ia){for(J=ia-1;-1<J;J--)if(T=d[J],y=T.axes[f.id].graphs[b],bb=y.values.value,!isNaN(bb)){ia=J;break}if(this.lineColorField)for(J=ia;-1<J;J--)if(T=d[J],y=T.axes[f.id].graphs[b],y.lineColor){this.bulletColorSwitched=this.lineColorSwitched=y.lineColor;break}if(this.fillColorsField)for(J=ia;-1<J;J--)if(T=d[J],y=T.axes[f.id].graphs[b],y.fillColors){this.fillColorsSwitched=y.fillColors;break}if(this.dashLengthField)for(J=","ia;-1<J;J--)if(T=d[J],y=T.axes[f.id].graphs[b],!isNaN(y.dashLength)){this.dashLengthSwitched=y.dashLength;break}}if(da<d.length-1)for(J=da+1;J<d.length;J++)if(T=d[J],y=T.axes[f.id].graphs[b],bb=y.values.value,!isNaN(bb)){da=J;break}}da<d.length-1&&da++;var O=[],P=[],Ea=!1;if(\"line\"==g||\"step\"==g||\"smoothedLine\"==g)if(this.stackable&&\"regular\"==V||\"100%\"==V||this.fillToGraph)Ea=!0;var Ib=this.noStepRisers,gb=-1E3,hb=-1E3,ib=this.minDistance,Fa=!0,Wa=!1;for(J=ia;J<=da;J++){T=d[J];y=T.axes[f.id].graphs[b];","y.index=J;var Xa,Ga=NaN;if(l&&void 0==this.openField)for(var qb=J+1;qb<d.length&&(!d[qb]||!(Xa=d[J+1].axes[f.id].graphs[b])||!Xa.values||(Ga=Xa.values.value,isNaN(Ga)));qb++);var X,Q,R,ea,la=NaN,C=NaN,B=NaN,M=NaN,K=NaN,Ha=NaN,xa=NaN,Ia=NaN,ya=NaN,ca=NaN,ja=NaN,fa=NaN,ga=NaN,U=NaN,rb=NaN,sb=NaN,ka=NaN,ra=void 0,Ca=pb,Oa=Ua,ua=oa,qa,sa,tb=this.proCandlesticks,Ya=this.pattern;void 0!=y.pattern&&(Ya=y.pattern);void 0!=y.color&&(Ca=y.color);y.fillColors&&(Ca=y.fillColors);isNaN(y.alpha)||(Oa=y.alpha);","isNaN(y.dashLength)||(W=y.dashLength);var va=y.values;f.recalculateToPercents&&(va=y.percents);if(va){U=this.stackable&&\"none\"!=V&&\"3d\"!=V?va.close:va.value;if(\"candlestick\"==g||\"ohlc\"==g)U=va.close,sb=va.low,xa=f.getCoordinate(sb),rb=va.high,ya=f.getCoordinate(rb);ka=va.open;B=f.getCoordinate(U);isNaN(ka)||(K=f.getCoordinate(ka),l&&(Ga=ka,ka=K=NaN));l&&(void 0==this.openField?Xa&&(Xa.isNegative=Ga<U?!0:!1,isNaN(Ga)&&(y.isNegative=!Fa)):y.isNegative=Ga>U?!0:!1);if(!ba)switch(this.showBalloonAt){case \"close\":y.y=","B;break;case \"open\":y.y=K;break;case \"high\":y.y=ya;break;case \"low\":y.y=xa}var la=T.x[Sa.id],Pa=this.periodSpan-1,ma=Math.floor(S/2)+Math.floor(Pa*S/2),za=ma,Jb=0;\"left\"==this.stepDirection&&(Jb=(2*S+Pa*S)/2,la-=Jb);\"start\"==this.pointPosition&&(la-=S/2+Math.floor(Pa*S/2),ma=0,za=Math.floor(S)+Math.floor(Pa*S));\"end\"==this.pointPosition&&(la+=S/2+Math.floor(Pa*S/2),ma=Math.floor(S)+Math.floor(Pa*S),za=0);if(Ib){var ub=this.columnWidth;isNaN(ub)||(ma*=ub,za*=ub)}ba||(y.x=la);-1E5>la&&(la=-1E5);la>","m+1E5&&(la=m+1E5);q?(C=B,M=K,K=B=la,isNaN(ka)&&!this.fillToGraph&&(M=na),Ha=xa,Ia=ya):(M=C=la,isNaN(ka)&&!this.fillToGraph&&(K=na));if(!tb&&U<ka||tb&&U<pa)y.isNegative=!0,Da&&(Ca=Da),Va&&(Oa=Va),void 0!=wa&&(ua=wa);Wa=!1;isNaN(U)||(l?U>Ga?(Fa&&(Wa=!0),Fa=!1):(Fa||(Wa=!0),Fa=!0):y.isNegative=U<ta?!0:!1,pa=U);switch(g){case \"line\":if(isNaN(U))w||(this.drawLineGraph(v,t,O,P),v=[],t=[],O=[],P=[]);else{if(Math.abs(C-gb)>=ib||Math.abs(B-hb)>=ib)v.push(C),t.push(B),gb=C,hb=B;ca=C;ja=B;fa=C;ga=B;!Ea||isNaN(K)||","isNaN(M)||(O.push(M),P.push(K));if(Wa||void 0!=y.lineColor||void 0!=y.fillColors||!isNaN(y.dashLength))this.drawLineGraph(v,t,O,P),v=[C],t=[B],O=[],P=[],!Ea||isNaN(K)||isNaN(M)||(O.push(M),P.push(K)),l?Fa?(this.lineColorSwitched=oa,this.fillColorsSwitched=pb):(this.lineColorSwitched=wa,this.fillColorsSwitched=Da):(this.lineColorSwitched=y.lineColor,this.fillColorsSwitched=y.fillColors),this.dashLengthSwitched=y.dashLength;y.gap&&(this.drawLineGraph(v,t,O,P),v=[],t=[],O=[],P=[])}break;case \"smoothedLine\":if(isNaN(U))w||","(this.drawSmoothedGraph(v,t,O,P),v=[],t=[],O=[],P=[]);else{if(Math.abs(C-gb)>=ib||Math.abs(B-hb)>=ib)v.push(C),t.push(B),gb=C,hb=B;ca=C;ja=B;fa=C;ga=B;!Ea||isNaN(K)||isNaN(M)||(O.push(M),P.push(K));void 0==y.lineColor&&void 0==y.fillColors&&isNaN(y.dashLength)||(this.drawSmoothedGraph(v,t,O,P),v=[C],t=[B],O=[],P=[],!Ea||isNaN(K)||isNaN(M)||(O.push(M),P.push(K)),this.lineColorSwitched=y.lineColor,this.fillColorsSwitched=y.fillColors,this.dashLengthSwitched=y.dashLength);y.gap&&(this.drawSmoothedGraph(v,","t,O,P),v=[],t=[],O=[],P=[])}break;case \"step\":if(!isNaN(U)){if(void 0==y.lineColor&&void 0==y.fillColors&&isNaN(y.dashLength)||(this.drawLineGraph(v,t,O,P),v=[],t=[],O=[],P=[],this.lineColorSwitched=y.lineColor,this.fillColorsSwitched=y.fillColors,this.dashLengthSwitched=y.dashLength),q?(isNaN(u)||(v.push(u),t.push(B-ma)),t.push(B-ma),v.push(C),t.push(B+za),v.push(C),!Ea||isNaN(K)||isNaN(M)||(O.push(E),P.push(K-ma),O.push(M),P.push(K-ma),O.push(M),P.push(K+za))):(isNaN(x)||(t.push(x),v.push(u),t.push(x),","v.push(C-ma)),v.push(C-ma),t.push(B),v.push(C+za),t.push(B),!Ea||isNaN(K)||isNaN(M)||(O.push(M-ma),P.push(A),O.push(M-ma),P.push(K),O.push(M+za),P.push(K))),u=C,x=B,E=M,A=K,ca=C,ja=B,fa=C,ga=B,Wa&&(this.drawLineGraph(v,t,O,P),v=[],t=[],O=[],P=[],l&&(Fa?(this.lineColorSwitched=oa,this.fillColorsSwitched=pb):(this.lineColorSwitched=wa,this.fillColorsSwitched=Da))),Ib||y.gap)u=x=NaN,this.drawLineGraph(v,t,O,P),v=[],t=[],O=[],P=[]}else if(!w){if(1>=this.periodSpan||1<this.periodSpan&&C-u>ma+za)u=x=NaN;","this.drawLineGraph(v,t,O,P);v=[];t=[];O=[];P=[]}break;case \"column\":qa=ua;void 0!=y.lineColor&&(qa=y.lineColor);var Kb=this.topRadius;if(!isNaN(U)){l||(y.isNegative=U<ta?!0:!1);y.isNegative&&(Da&&(Ca=Da),void 0!=wa&&(qa=wa));var Lb=f.min,Mb=f.max;if(!(U<Lb&&ka<Lb||U>Mb&&ka>Mb))if(q){\"3d\"==V?(Q=B-(r/2-this.depthCount+1)*(h+aa)+aa/2+G*L,X=M+F*L):(Q=Math.floor(B-(r/2-L)*(h+aa)+aa/2),X=M);R=h;ca=C;ja=Q+h/2;fa=C;ga=Q+h/2;Q+R>n+L*G&&(R=n-Q+L*G);Q<L*G&&(R+=Q,Q=L*G);ea=C-M;var Yb=X;X=AmCharts.fitToBounds(X,","0,m);ea+=Yb-X;ea=AmCharts.fitToBounds(ea,-X,m-X+F*L);Q<n&&0<R&&(ra=new AmCharts.Cuboid(e,ea,R,F-a.d3x,G-a.d3y,Ca,Oa,Y,qa,$,D,s,q,W,Ya,Kb),\"bottom\"!=N&&\"inside\"!=N&&\"middle\"!=N&&(N=f.reversed?\"left\":\"right\",0>U&&(N=f.reversed?\"right\":\"left\")),\"regular\"==V||\"100%\"==V)&&(ca+=this.dx)}else{\"3d\"==V?(X=C-(r/2-this.depthCount+1)*(h+aa)+aa/2+F*L,Q=K+G*L):(X=C-(r/2-L)*(h+aa)+aa/2,Q=K);R=h;ca=X+h/2;ja=B;fa=X+h/2;ga=B;X+R>m+L*F&&(R=m-X+L*F);X<L*F&&(R+=X-L*F,X=L*F);ea=B-K;var Zb=Q;Q=AmCharts.fitToBounds(Q,this.dy,","n);ea+=Zb-Q;ea=AmCharts.fitToBounds(ea,-Q+G*L,n-Q);if(X<m+L*F&&0<R)if(this.showOnAxis&&(Q-=G/2),ra=new AmCharts.Cuboid(e,R,ea,F-a.d3x,G-a.d3y,Ca,Oa,Y,qa,this.lineAlpha,D,s,q,W,Ya,Kb),0>U&&\"middle\"!=N&&\"inside\"!=N)N=\"bottom\";else if(N=I,\"regular\"==V||\"100%\"==V)ja+=this.dy}if(ra&&(sa=ra.set,y.columnGraphics=sa,sa.translate(X,Q),this.columnsSet.push(sa),(y.url||this.showHandOnHover)&&sa.setAttr(\"cursor\",\"pointer\"),!ba)){\"none\"==V&&(H=q?(this.end+1-J)*z-c:z*J+c);\"3d\"==V&&(q?(H=(this.end+1-J)*z-c-1E3*","this.depthCount,ca+=F*this.columnIndex,fa+=F*this.columnIndex,y.y+=F*this.columnIndex):(H=(z-c)*(J+1)+1E3*this.depthCount,ca+=3,ja+=G*this.columnIndex+7,ga+=G*this.columnIndex,y.y+=G*this.columnIndex));if(\"regular\"==V||\"100%\"==V)\"inside\"!=N&&(N=\"middle\"),H=q?0<va.value?(this.end+1-J)*z+c:(this.end+1-J)*z-c:0<va.value?z*J+c:z*J-c;this.columnsArray.push({column:ra,depth:H});y.x=q?Q+R/2:X+R/2;this.ownColumns.push(ra);this.animateColumns(ra,J,C,M,B,K);this.addListeners(sa,y)}}break;case \"candlestick\":if(!isNaN(ka)&&","!isNaN(U)){var jb,vb;qa=ua;void 0!=y.lineColor&&(qa=y.lineColor);if(q){if(Q=B-h/2,X=M,R=h,Q+R>n&&(R=n-Q),0>Q&&(R+=Q,Q=0),Q<n&&0<R){var wb,xb;U>ka?(wb=[C,Ia],xb=[M,Ha]):(wb=[M,Ia],xb=[C,Ha]);!isNaN(Ia)&&!isNaN(Ha)&&B<n&&0<B&&(jb=AmCharts.line(e,wb,[B,B],qa,$,Y),vb=AmCharts.line(e,xb,[B,B],qa,$,Y));ea=C-M;ra=new AmCharts.Cuboid(e,ea,R,F,G,Ca,Ua,Y,qa,$,D,s,q,W,Ya)}}else if(X=C-h/2,Q=K+Y/2,R=h,X+R>m&&(R=m-X),0>X&&(R+=X,X=0),ea=B-K,X<m&&0<R){tb&&U>=ka&&(Oa=0);var ra=new AmCharts.Cuboid(e,R,ea,F,G,Ca,Oa,","Y,qa,$,D,s,q,W,Ya),yb,zb;U>ka?(yb=[B,ya],zb=[K,xa]):(yb=[K,ya],zb=[B,xa]);!isNaN(ya)&&!isNaN(xa)&&C<m&&0<C&&(jb=AmCharts.line(e,[C,C],yb,qa,$,Y),vb=AmCharts.line(e,[C,C],zb,qa,$,Y))}ra&&(sa=ra.set,y.columnGraphics=sa,Z.push(sa),sa.translate(X,Q-Y/2),(y.url||this.showHandOnHover)&&sa.setAttr(\"cursor\",\"pointer\"),jb&&(Z.push(jb),Z.push(vb)),ca=C,ja=B,q?(ga=B,fa=C,\"open\"==k&&(fa=M),\"high\"==k&&(fa=Ia),\"low\"==k&&(fa=Ha)):(ga=B,\"open\"==k&&(ga=K),\"high\"==k&&(ga=ya),\"low\"==k&&(ga=xa),fa=C),ba||(y.x=q?Q+R/","2:X+R/2,this.animateColumns(ra,J,C,M,B,K),this.addListeners(sa,y)))}break;case \"ohlc\":if(!(isNaN(ka)||isNaN(rb)||isNaN(sb)||isNaN(U))){U<ka&&(y.isNegative=!0,void 0!=wa&&(ua=wa));var Ab,Bb,Cb;if(q){var Db=B-h/2,Db=AmCharts.fitToBounds(Db,0,n),Nb=AmCharts.fitToBounds(B,0,n),Eb=B+h/2,Eb=AmCharts.fitToBounds(Eb,0,n);Bb=AmCharts.line(e,[M,M],[Db,Nb],ua,$,Y,W);0<B&&B<n&&(Ab=AmCharts.line(e,[Ha,Ia],[B,B],ua,$,Y,W));Cb=AmCharts.line(e,[C,C],[Nb,Eb],ua,$,Y,W);ga=B;fa=C;\"open\"==k&&(fa=M);\"high\"==k&&(fa=Ia);","\"low\"==k&&(fa=Ha)}else{var Fb=C-h/2,Fb=AmCharts.fitToBounds(Fb,0,m),Ob=AmCharts.fitToBounds(C,0,m),Gb=C+h/2,Gb=AmCharts.fitToBounds(Gb,0,m);Bb=AmCharts.line(e,[Fb,Ob],[K,K],ua,$,Y,W);0<C&&C<m&&(Ab=AmCharts.line(e,[C,C],[xa,ya],ua,$,Y,W));Cb=AmCharts.line(e,[Ob,Gb],[B,B],ua,$,Y,W);ga=B;\"open\"==k&&(ga=K);\"high\"==k&&(ga=ya);\"low\"==k&&(ga=xa);fa=C}Z.push(Bb);Z.push(Ab);Z.push(Cb);ca=C;ja=B}}if(!ba&&!isNaN(U)){var Pb=this.hideBulletsCount;if(this.end-this.start<=Pb||0===Pb){var Ja=this.createBullet(y,","fa,ga,J);Ja||(Ja=0);var Qb=this.labelText;if(Qb){var ha=this.createLabel(y,0,0,Qb),Ka=0,La=0,Rb=ha.getBBox(),Qa=Rb.width,Ma=Rb.height;switch(N){case \"left\":Ka=-(Qa/2+Ja/2+3);break;case \"top\":La=-(Ma/2+Ja/2+3);break;case \"right\":Ka=Ja/2+2+Qa/2;break;case \"bottom\":q&&\"column\"==g?(ca=na,0>U||0<U&&f.reversed?(Ka=-6,ha.attr({\"text-anchor\":\"end\"})):(Ka=6,ha.attr({\"text-anchor\":\"start\"}))):(La=Ja/2+Ma/2,ha.x=-(Qa/2+2));break;case \"middle\":\"column\"==g&&(q?(La=-(Ma/2)+this.fontSize/2,Ka=-(C-M)/2-F,Math.abs(C-","M)<Qa&&!this.showAllValueLabels&&(ha.remove(),ha=null)):(La=-(B-K)/2-G,Math.abs(B-K)<Ma&&!this.showAllValueLabels&&(ha.remove(),ha=null)));break;case \"inside\":q?(La=-(Ma/2)+this.fontSize/2,Ka=0>ea?Qa/2+6:-Qa/2-6):La=0>ea?Ma:-Ma}if(ha){if(isNaN(ja)||isNaN(ca))ha.remove(),ha=null;else if(ca+=Ka,ja+=La,ha.translate(ca,ja),q){if(0>ja||ja>n)ha.remove(),ha=null}else{var Sb=0;\"3d\"==V&&(Sb=F*L);if(0>ca||ca>m+Sb)ha.remove(),ha=null}ha&&this.allBullets.push(ha)}}if(\"regular\"==V||\"100%\"==V){var Tb=f.totalText;","if(Tb){var Ra=this.createLabel(y,0,0,Tb,f.totalTextColor);this.allBullets.push(Ra);var Ub=Ra.getBBox(),Vb=Ub.width,Wb=Ub.height,Za,$a,Xb=f.totals[J];Xb&&Xb.remove();var ab=0;\"column\"!=g&&(ab=Ja);q?($a=B,Za=0>U?C-Vb/2-2-ab:C+Vb/2+3+ab):(Za=C,$a=0>U?B+Wb/2+ab:B-Wb/2-3-ab);Ra.translate(Za,$a);f.totals[J]=Ra;q?(0>$a||$a>n)&&Ra.remove():(0>Za||Za>m)&&Ra.remove()}}}}}}if(\"line\"==g||\"step\"==g||\"smoothedLine\"==g)\"smoothedLine\"==g?this.drawSmoothedGraph(v,t,O,P):this.drawLineGraph(v,t,O,P),ba||this.launchAnimation();","this.bulletsHidden&&this.hideBullets()},animateColumns:function(a,b,c,d,e,f){var g=this;c=g.chart.startDuration;0<c&&!g.animationPlayed&&(g.seqAn?(a.set.hide(),g.animationArray.push(a),a=setTimeout(function(){g.animate.call(g)},c/(g.end-g.start+1)*(b-g.start)*1E3),g.timeOuts.push(a)):g.animate(a))},createLabel:function(a,b,c,d,e){var f=this.chart,g=a.labelColor;g||(g=this.color);g||(g=f.color);e&&(g=e);e=this.fontSize;void 0===e&&(this.fontSize=e=f.fontSize);var h=this.labelFunction;d=f.formatString(d,","a);d=AmCharts.cleanFromEmpty(d);h&&(d=h(a,d));a=AmCharts.text(this.container,d,g,f.fontFamily,e);a.node.style.pointerEvents=\"none\";a.translate(b,c);this.bulletSet.push(a);return a},positiveClip:function(a){a.clipRect(this.pmx,this.pmy,this.pmw,this.pmh)},negativeClip:function(a){a.clipRect(this.nmx,this.nmy,this.nmw,this.nmh)},drawLineGraph:function(a,b,c,d){var e=this;if(1<a.length){var f=e.set,g=e.chart,h=e.container,k=h.set(),l=h.set();f.push(l);f.push(k);var m=e.lineAlpha,n=e.lineThickness,f=","e.fillAlphas,p=e.lineColorR,q=e.negativeLineAlpha;isNaN(q)&&(q=m);var r=e.lineColorSwitched;r&&(p=r);var r=e.fillColorsR,s=e.fillColorsSwitched;s&&(r=s);var w=e.dashLength;(s=e.dashLengthSwitched)&&(w=s);var s=e.negativeLineColor,v=e.negativeFillColors,t=e.negativeFillAlphas,u=e.baseCoord;0!==e.negativeBase&&(u=e.valueAxis.getCoordinate(e.negativeBase));m=AmCharts.line(h,a,b,p,m,n,w,!1,!0);k.push(m);k.click(function(a){e.handleGraphEvent(a,\"clickGraph\")}).mouseover(function(a){e.handleGraphEvent(a,","\"rollOverGraph\")}).mouseout(function(a){e.handleGraphEvent(a,\"rollOutGraph\")});void 0===s||e.useNegativeColorIfDown||(n=AmCharts.line(h,a,b,s,q,n,w,!1,!0),l.push(n));if(0<f||0<t)if(n=a.join(\";\").split(\";\"),q=b.join(\";\").split(\";\"),m=g.type,\"serial\"==m?0<c.length?(c.reverse(),d.reverse(),n=a.concat(c),q=b.concat(d)):e.rotate?(q.push(q[q.length-1]),n.push(u),q.push(q[0]),n.push(u),q.push(q[0]),n.push(n[0])):(n.push(n[n.length-1]),q.push(u),n.push(n[0]),q.push(u),n.push(a[0]),q.push(q[0])):\"xy\"==m&&","(b=e.fillToAxis)&&(AmCharts.isString(b)&&(b=g.getValueAxisById(b)),\"H\"==b.orientation?(u=\"top\"==b.position?0:b.viH,n.push(n[n.length-1]),q.push(u),n.push(n[0]),q.push(u),n.push(a[0]),q.push(q[0])):(u=\"left\"==b.position?0:b.viW,q.push(q[q.length-1]),n.push(u),q.push(q[0]),n.push(u),q.push(q[0]),n.push(n[0]))),a=e.gradientRotation,0<f&&(g=AmCharts.polygon(h,n,q,r,f,1,\"#000\",0,a),g.pattern(e.pattern),k.push(g)),v||void 0!==s)isNaN(t)&&(t=f),v||(v=s),h=AmCharts.polygon(h,n,q,v,t,1,\"#000\",0,a),h.pattern(e.pattern),","l.push(h),l.click(function(a){e.handleGraphEvent(a,\"clickGraph\")}).mouseover(function(a){e.handleGraphEvent(a,\"rollOverGraph\")}).mouseout(function(a){e.handleGraphEvent(a,\"rollOutGraph\")});e.applyMask(l,k)}},applyMask:function(a,b){var c=a.length();\"serial\"!=this.chart.type||this.scrollbar||(this.positiveClip(b),0<c&&this.negativeClip(a))},drawSmoothedGraph:function(a,b,c,d){if(1<a.length){var e=this.set,f=this.container,g=f.set(),h=f.set();e.push(h);e.push(g);var k=this.lineAlpha,l=this.lineThickness,","e=this.dashLength,m=this.fillAlphas,n=this.lineColorR,p=this.fillColorsR,q=this.negativeLineColor,r=this.negativeFillColors,s=this.negativeFillAlphas,w=this.baseCoord,v=this.lineColorSwitched;v&&(n=v);(v=this.fillColorsSwitched)&&(p=v);v=this.negativeLineAlpha;isNaN(v)&&(v=k);k=new AmCharts.Bezier(f,a,b,n,k,l,p,0,e);g.push(k.path);void 0!==q&&(l=new AmCharts.Bezier(f,a,b,q,v,l,p,0,e),h.push(l.path));0<m&&(k=a.join(\";\").split(\";\"),n=b.join(\";\").split(\";\"),l=\"\",0<c.length?(c.push(\"M\"),d.push(\"M\"),c.reverse(),","d.reverse(),k=a.concat(c),n=b.concat(d)):(this.rotate?(l+=\" L\"+w+\",\"+b[b.length-1],l+=\" L\"+w+\",\"+b[0]):(l+=\" L\"+a[a.length-1]+\",\"+w,l+=\" L\"+a[0]+\",\"+w),l+=\" L\"+a[0]+\",\"+b[0]),c=new AmCharts.Bezier(f,k,n,NaN,0,0,p,m,e,l),c.path.pattern(this.pattern),g.push(c.path),r||void 0!==q)&&(s||(s=m),r||(r=q),a=new AmCharts.Bezier(f,a,b,NaN,0,0,r,s,e,l),a.path.pattern(this.pattern),h.push(a.path));this.applyMask(h,g)}},launchAnimation:function(){var a=this,b=a.chart.startDuration;if(0<b&&!a.animationPlayed){var c=","a.set,d=a.bulletSet;AmCharts.VML||(c.attr({opacity:a.startAlpha}),d.attr({opacity:a.startAlpha}));c.hide();d.hide();a.seqAn?(b=setTimeout(function(){a.animateGraphs.call(a)},a.index*b*1E3),a.timeOuts.push(b)):a.animateGraphs()}},animateGraphs:function(){var a=this.chart,b=this.set,c=this.bulletSet,d=this.x,e=this.y;b.show();c.show();var f=a.startDuration,a=a.startEffect;b&&(this.rotate?(b.translate(-1E3,e),c.translate(-1E3,e)):(b.translate(d,-1E3),c.translate(d,-1E3)),b.animate({opacity:1,translate:d+","\",\"+e},f,a),c.animate({opacity:1,translate:d+\",\"+e},f,a))},animate:function(a){var b=this.chart,c=this.animationArray;!a&&0<c.length&&(a=c[0],c.shift());c=AmCharts[AmCharts.getEffect(b.startEffect)];b=b.startDuration;a&&(this.rotate?a.animateWidth(b,c):a.animateHeight(b,c),a.set.show())},legendKeyColor:function(){var a=this.legendColor,b=this.lineAlpha;void 0===a&&(a=this.lineColorR,0===b&&(b=this.fillColorsR)&&(a=\"object\"==typeof b?b[0]:b));return a},legendKeyAlpha:function(){var a=this.legendAlpha;","void 0===a&&(a=this.lineAlpha,this.fillAlphas>a&&(a=this.fillAlphas),0===a&&(a=this.bulletAlpha),0===a&&(a=1));return a},createBullet:function(a,b,c,d){if(!isNaN(b)&&!isNaN(c)){d=this.container;var e=this.bulletOffset,f=this.bulletSize;isNaN(a.bulletSize)||(f=a.bulletSize);var g=a.values.value,h=this.maxValue,k=this.minValue,l=this.maxBulletSize,m=this.minBulletSize;isNaN(h)||(isNaN(g)||(f=(g-k)/(h-k)*(l-m)+m),k==h&&(f=l));h=f;this.bulletAxis&&(f=a.values.error,isNaN(f)||(g=f),f=this.bulletAxis.stepWidth*","g);f<this.minBulletSize&&(f=this.minBulletSize);this.rotate?b=a.isNegative?b-e:b+e:c=a.isNegative?c+e:c-e;var n,m=this.bulletColorR;a.lineColor&&(this.bulletColorSwitched=a.lineColor);this.bulletColorSwitched&&(m=this.bulletColorSwitched);a.isNegative&&void 0!==this.bulletColorNegative&&(m=this.bulletColorNegative);void 0!==a.color&&(m=a.color);var p;\"xy\"==this.chart.type&&this.valueField&&(p=this.pattern,a.pattern&&(p=a.pattern));e=this.bullet;a.bullet&&(e=a.bullet);var g=this.bulletBorderThickness,","k=this.bulletBorderColorR,l=this.bulletBorderAlpha,q=this.bulletAlpha;k||(k=m);this.useLineColorForBulletBorder&&(k=this.lineColorR);var r=a.alpha;isNaN(r)||(q=r);if(\"none\"!=this.bullet||a.bullet)n=AmCharts.bullet(d,e,f,m,q,g,k,l,h,0,p);if(this.customBullet||a.customBullet)p=this.customBullet,a.customBullet&&(p=a.customBullet),p&&(n&&n.remove(),\"function\"==typeof p?(n=new p,n.chart=this.chart,a.bulletConfig&&(n.availableSpace=c,n.graph=this,n.graphDataItem=a,n.bulletY=c,a.bulletConfig.minCoord=this.minCoord-","c,n.bulletConfig=a.bulletConfig),n.write(d),n=n.set):(this.chart.path&&(p=this.chart.path+p),n=d.set(),d=d.image(p,0,0,f,f),n.push(d),this.centerCustomBullets&&d.translate(-f/2,-f/2)));n&&((a.url||this.showHandOnHover)&&n.setAttr(\"cursor\",\"pointer\"),\"serial\"==this.chart.type&&(0>b-0||b-0>this.width||c<-f/2||c-0>this.height)&&(n.remove(),n=null),n&&(this.bulletSet.push(n),n.translate(b,c),this.addListeners(n,a),this.allBullets.push(n)),a.bx=b,a.by=c);a.bulletGraphics=n;return f}},showBullets:function(){var a=","this.allBullets,b;this.bulletsHidden=!1;for(b=0;b<a.length;b++)a[b].show()},hideBullets:function(){var a=this.allBullets,b;this.bulletsHidden=!0;for(b=0;b<a.length;b++)a[b].hide()},addListeners:function(a,b){var c=this;a.mouseover(function(a){c.handleRollOver(b,a)}).mouseout(function(a){c.handleRollOut(b,a)}).touchend(function(a){c.handleRollOver(b,a);c.chart.panEventsEnabled&&c.handleClick(b,a)}).touchstart(function(a){c.handleRollOver(b,a)}).click(function(a){c.handleClick(b,a)}).dblclick(function(a){c.handleDoubleClick(b,","a)}).contextmenu(function(a){c.handleRightClick(b,a)})},handleRollOver:function(a,b){if(a){var c=this.chart,d={type:\"rollOverGraphItem\",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(\"rollOverGraphItem\",d);c.fire(\"rollOverGraphItem\",d);clearTimeout(c.hoverInt);d=this.showBalloon;c.chartCursor&&\"serial\"==c.type&&(d=!1,!c.chartCursor.valueBalloonsEnabled&&this.showBalloon&&(d=!0));if(d){var d=c.formatString(this.balloonText,a,!0),e=this.balloonFunction;e&&(d=e(a,a.graph));","d=AmCharts.cleanFromEmpty(d);e=c.getBalloonColor(this,a);c.balloon.showBullet=!1;c.balloon.pointerOrientation=\"V\";var f=a.x,g=a.y;c.rotate&&(f=a.y,g=a.x);c.showBalloon(d,e,!0,f+c.marginLeftReal,g+c.marginTopReal)}}this.handleGraphEvent(b,\"rollOverGraph\")},handleRollOut:function(a,b){this.chart.hideBalloon();if(a){var c={type:\"rollOutGraphItem\",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(\"rollOutGraphItem\",c);this.chart.fire(\"rollOutGraphItem\",c)}this.handleGraphEvent(b,","\"rollOutGraph\")},handleClick:function(a,b){if(a){var c={type:\"clickGraphItem\",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(\"clickGraphItem\",c);this.chart.fire(\"clickGraphItem\",c);AmCharts.getURL(a.url,this.urlTarget)}this.handleGraphEvent(b,\"clickGraph\")},handleGraphEvent:function(a,b){var c={type:b,graph:this,target:this,chart:this.chart,event:a};this.fire(b,c);this.chart.fire(b,c)},handleRightClick:function(a,b){if(a){var c={type:\"rightClickGraphItem\",item:a,index:a.index,","graph:this,target:this,chart:this.chart,event:b};this.fire(\"rightClickGraphItem\",c);this.chart.fire(\"rightClickGraphItem\",c)}},handleDoubleClick:function(a,b){if(a){var c={type:\"doubleClickGraphItem\",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(\"doubleClickGraphItem\",c);this.chart.fire(\"doubleClickGraphItem\",c)}},zoom:function(a,b){this.start=a;this.end=b;this.draw()},changeOpacity:function(a){var b=this.set;b&&b.setAttr(\"opacity\",a);if(b=this.ownColumns){var c;","for(c=0;c<b.length;c++){var d=b[c].set;d&&d.setAttr(\"opacity\",a)}}(b=this.bulletSet)&&b.setAttr(\"opacity\",a)},destroy:function(){AmCharts.remove(this.set);AmCharts.remove(this.bulletSet);var a=this.timeOuts;if(a){var b;for(b=0;b<a.length;b++)clearTimeout(a[b])}this.timeOuts=[]}});AmCharts.ChartCursor=AmCharts.Class({construct:function(a){this.cname=\"ChartCursor\";this.createEvents(\"changed\",\"zoomed\",\"onHideCursor\",\"draw\",\"selected\",\"moved\");this.enabled=!0;this.cursorAlpha=1;this.selectionAlpha=.2;this.cursorColor=\"#CC0000\";this.categoryBalloonAlpha=1;this.color=\"#FFFFFF\";this.type=\"cursor\";this.zoomed=!1;this.zoomable=!0;this.pan=!1;this.categoryBalloonDateFormat=\"MMM DD, YYYY\";this.categoryBalloonEnabled=this.valueBalloonsEnabled=!0;this.rolledOver=!1;this.cursorPosition=","\"middle\";this.bulletsEnabled=this.skipZoomDispatch=!1;this.bulletSize=8;this.selectWithoutZooming=this.oneBalloonOnly=!1;this.graphBulletSize=1.7;this.animationDuration=.3;this.zooming=!1;this.adjustment=0;this.avoidBalloonOverlapping=!0;AmCharts.applyTheme(this,a,this.cname)},draw:function(){var a=this;a.destroy();var b=a.chart,c=b.container;a.rotate=b.rotate;a.container=c;c=c.set();c.translate(a.x,a.y);a.set=c;b.cursorSet.push(c);c=new AmCharts.AmBalloon;c.chart=b;a.categoryBalloon=c;AmCharts.copyProperties(b.balloon,","c);c.cornerRadius=0;c.shadowAlpha=0;c.borderThickness=1;c.borderAlpha=1;c.showBullet=!1;var d=a.categoryBalloonColor;void 0===d&&(d=a.cursorColor);c.fillColor=d;c.fillAlpha=a.categoryBalloonAlpha;c.borderColor=d;c.color=a.color;d=a.valueLineAxis;AmCharts.isString(d)&&(d=b.getValueAxisById(d));d||(d=b.valueAxes[0]);a.valueLineAxis=d;a.valueLineBalloonEnabled&&(d=new AmCharts.AmBalloon,a.vaBalloon=d,AmCharts.copyProperties(c,d),d.animationDuration=0,a.rotate||(d.pointerOrientation=\"H\"));a.rotate&&(c.pointerOrientation=","\"H\");a.extraWidth=0;a.prevX=[];a.prevY=[];a.prevTX=[];a.prevTY=[];if(a.valueBalloonsEnabled)for(c=0;c<b.graphs.length;c++)d=new AmCharts.AmBalloon,d.chart=b,AmCharts.copyProperties(b.balloon,d),b.graphs[c].valueBalloon=d;\"cursor\"==a.type?a.createCursor():a.createCrosshair();a.interval=setInterval(function(){a.detectMovement.call(a)},40)},updateData:function(){var a=this.chart;this.data=a.chartData;this.firstTime=a.firstTime;this.lastTime=a.lastTime},createCursor:function(){var a=this.chart,b=this.cursorAlpha,","c=a.categoryAxis,d=this.categoryBalloon,e,f,g,h;g=a.dx;h=a.dy;var k=this.width,l=this.height,a=a.rotate;d.pointerWidth=c.tickLength;a?(e=[0,k,k+g],f=[0,0,h],g=[g,0,0],h=[h,0,l]):(e=[g,0,0],f=[h,0,l],g=[0,k,k+g],h=[0,0,h]);this.line=e=AmCharts.line(this.container,e,f,this.cursorColor,b,1);(f=this.fullRectSet)?(f.push(e),f.translate(this.x,this.y)):this.set.push(e);this.valueLineEnabled&&(e=this.valueLineAlpha,isNaN(e)||(b=e),this.vLine=b=AmCharts.line(this.container,g,h,this.cursorColor,b,1),this.set.push(b));","this.setBalloonBounds(d,c,a);(c=this.vaBalloon)&&this.setBalloonBounds(c,this.valueLineAxis,!a);this.hideCursor()},createCrosshair:function(){var a=this.cursorAlpha,b=this.container,c=AmCharts.line(b,[0,0],[0,this.height],this.cursorColor,a,1),a=AmCharts.line(b,[0,this.width],[0,0],this.cursorColor,a,1);this.set.push(c);this.set.push(a);this.vLine=c;this.hLine=a;this.hideCursor()},detectMovement:function(){var a=this.chart;if(a.mouseIsOver){var b=a.mouseX-this.x,c=a.mouseY-this.y;-.5<b&&b<this.width+","1&&0<c&&c<this.height?(this.drawing?this.rolledOver||a.setMouseCursor(\"crosshair\"):this.pan&&(this.rolledOver||a.setMouseCursor(\"move\")),this.rolledOver=!0,(this.valueLineEnabled||this.valueLineBalloonEnabled)&&this.updateVLine(b,c),this.setPosition()):this.rolledOver&&(this.handleMouseOut(),this.rolledOver=!1)}else this.rolledOver&&(this.handleMouseOut(),this.rolledOver=!1)},updateVLine:function(a,b){var c=this.vLine,d=this.vaBalloon;if((c||d)&&!this.panning&&!this.drawing){c&&c.show();var e=this.valueLineAxis,","f,g=this.rotate;g?(c&&c.translate(a,0),e&&(f=e.coordinateToValue(a)),c=a):(c&&c.translate(0,b),e&&(f=e.coordinateToValue(b)),c=b-1);if(d&&!isNaN(f)&&this.prevLineValue!=f){var h=e.formatValue(f,!0);d&&(this.setBalloonPosition(d,e,c,!g),d.showBalloon(h))}this.prevLineValue=f}},getMousePosition:function(){var a,b=this.width,c=this.height;a=this.chart;this.rotate?(a=a.mouseY-this.y,0>a&&(a=0),a>c&&(a=c)):(a=a.mouseX-this.x-1,0>a&&(a=0),a>b&&(a=b));return a},updateCrosshair:function(){var a=this.chart,","b=a.mouseX-this.x,c=a.mouseY-this.y,d=this.vLine,e=this.hLine,b=AmCharts.fitToBounds(b,0,this.width),c=AmCharts.fitToBounds(c,0,this.height);0<this.cursorAlpha&&(d.show(),e.show(),d.translate(b,0),e.translate(0,c));this.zooming&&(a.hideXScrollbar&&(b=NaN),a.hideYScrollbar&&(c=NaN),this.updateSelectionSize(b,c));this.fireMoved();a.mouseIsOver||this.zooming||this.hideCursor()},fireMoved:function(){var a=this.chart,b={type:\"moved\",target:this};b.chart=a;b.zooming=this.zooming;b.x=a.mouseX-this.x;b.y=","a.mouseY-this.y;this.fire(\"moved\",b)},updateSelectionSize:function(a,b){AmCharts.remove(this.selection);var c=this.selectionPosX,d=this.selectionPosY,e=0,f=0,g=this.width,h=this.height;isNaN(a)||(c>a&&(e=a,g=c-a),c<a&&(e=c,g=a-c),c==a&&(e=a,g=0),g+=this.extraWidth,e-=this.extraWidth/2);isNaN(b)||(d>b&&(f=b,h=d-b),d<b&&(f=d,h=b-d),d==b&&(f=b,h=0),h+=this.extraWidth,f-=this.extraWidth/2);0<g&&0<h&&(c=AmCharts.rect(this.container,g,h,this.cursorColor,this.selectionAlpha),c.translate(e+this.x,f+this.y),","this.selection=c)},arrangeBalloons:function(){var a=this.valueBalloons,b=this.x,c=this.y,d=this.height+c;a.sort(this.compareY);var e;for(e=0;e<a.length;e++){var f=a[e].balloon;f.setBounds(b,c,b+this.width,d);f.prevX=this.prevX[e];f.prevY=this.prevY[e];f.prevTX=this.prevTX[e];f.prevTY=this.prevTY[e];f.draw();d=f.yPos-3}this.arrangeBalloons2()},compareY:function(a,b){return a.yy<b.yy?1:-1},arrangeBalloons2:function(){var a=this.valueBalloons;a.reverse();var b,c=this.x,d,e,f=a.length;for(e=0;e<f;e++){var g=","a[e].balloon;b=g.bottom;var h=g.bottom-g.yPos,k=f-e-1;0<e&&b-h<d+3&&(g.setBounds(c,d+3,c+this.width,d+h+3),g.prevX=this.prevX[k],g.prevY=this.prevY[k],g.prevTX=this.prevTX[k],g.prevTY=this.prevTY[k],g.draw());g.set&&g.set.show();this.prevX[k]=g.prevX;this.prevY[k]=g.prevY;this.prevTX[k]=g.prevTX;this.prevTY[k]=g.prevTY;d=g.bottom}},showBullets:function(){AmCharts.remove(this.allBullets);var a=this.container,b=a.set();this.set.push(b);this.set.show();this.allBullets=b;var b=this.chart.graphs,c;for(c=","0;c<b.length;c++){var d=b[c];if(!d.hidden&&d.balloonText){var e=this.data[this.index].axes[d.valueAxis.id].graphs[d.id],f=e.y;if(!isNaN(f)){var g,h;g=e.x;this.rotate?(h=f,f=g):h=g;d=AmCharts.circle(a,this.bulletSize/2,this.chart.getBalloonColor(d,e,!0),d.cursorBulletAlpha);d.translate(h,f);this.allBullets.push(d)}}}},destroy:function(){this.clear();AmCharts.remove(this.selection);this.selection=null;var a=this.categoryBalloon;a&&a.destroy();(a=this.vaBalloon)&&a.destroy();this.destroyValueBalloons();","AmCharts.remove(this.set)},clear:function(){clearInterval(this.interval)},destroyValueBalloons:function(){var a=this.valueBalloons;if(a){var b;for(b=0;b<a.length;b++)a[b].balloon.hide()}},zoom:function(a,b,c,d){var e=this.chart;this.destroyValueBalloons();this.zooming=!1;var f;this.rotate?this.selectionPosY=f=e.mouseY:this.selectionPosX=f=e.mouseX;this.start=a;this.end=b;this.startTime=c;this.endTime=d;this.zoomed=!0;d=e.categoryAxis;e=this.rotate;b=this.width;c=this.height;a=d.stepWidth;this.fullWidth&&","(f=1,d.parseDates&&!d.equalSpacing&&(f=d.minDuration()),e?this.extraWidth=c=a*f:(this.extraWidth=b=a*f,this.categoryBalloon.minWidth=b),this.line&&this.line.remove(),this.line=AmCharts.rect(this.container,b,c,this.cursorColor,this.cursorAlpha,0),this.fullRectSet&&this.fullRectSet.push(this.line));this.stepWidth=a;this.tempVal=this.valueBalloonsEnabled;this.valueBalloonsEnabled=!1;this.setPosition();this.valueBalloonsEnabled=this.tempVal;this.hideCursor()},hideObj:function(a){a&&a.hide()},hideCursor:function(a){void 0===","a&&(a=!0);this.hideObj(this.set);this.hideObj(this.categoryBalloon);this.hideObj(this.line);this.hideObj(this.vLine);this.hideObj(this.hLine);this.hideObj(this.vaBalloon);this.hideObj(this.allBullets);this.destroyValueBalloons();this.selectWithoutZooming||AmCharts.remove(this.selection);this.previousIndex=NaN;a&&this.fire(\"onHideCursor\",{type:\"onHideCursor\",chart:this.chart,target:this});this.drawing||this.chart.setMouseCursor(\"auto\");this.normalizeBulletSize()},setPosition:function(a,b,c){void 0===","b&&(b=!0);if(\"cursor\"==this.type){if(this.tempPosition=NaN,AmCharts.ifArray(this.data))isNaN(a)&&(a=this.getMousePosition()),(a!=this.previousMousePosition||!0===this.zoomed||this.oneBalloonOnly)&&!isNaN(a)&&(\"mouse\"==this.cursorPosition&&(this.tempPosition=a),isNaN(c)&&(c=this.chart.categoryAxis.xToIndex(a)),c!=this.previousIndex||this.zoomed||\"mouse\"==this.cursorPosition||this.oneBalloonOnly)&&(this.updateCursor(c,b),this.zoomed=!1),this.previousMousePosition=a}else this.updateCrosshair()},normalizeBulletSize:function(){var a=","this.resizedBullets;if(a)for(var b=0;b<a.length;b++){var c=a[b],d=c.bulletGraphics;d&&(d.translate(c.bx,c.by,1),c=c.graph,isNaN(this.graphBulletAlpha)||(d.setAttr(\"fill-opacity\",c.bulletAlpha),d.setAttr(\"stroke-opacity\",c.bulletBorderAlpha)))}},updateCursor:function(a,b){var c=this.chart,d=this.fullWidth,e=c.mouseX-this.x,f=c.mouseY-this.y;this.drawingNow&&(AmCharts.remove(this.drawingLine),this.drawingLine=AmCharts.line(this.container,[this.x+this.drawStartX,this.x+e],[this.y+this.drawStartY,this.y+","f],this.cursorColor,1,1));if(this.enabled){void 0===b&&(b=!0);this.index=a+=this.adjustment;var g=c.categoryAxis,h=c.dx,k=c.dy,l=this.x+1,m=this.y+1,n=this.width,p=this.height,q=this.data[a];this.fireMoved();if(q){var r=q.x[g.id],s=c.rotate,w=this.stepWidth,v=this.categoryBalloon,t=this.firstTime,u=this.lastTime,x=this.cursorPosition,E=this.zooming,A=this.panning,z=c.graphs;if(c.mouseIsOver||E||A||this.forceShow)if(this.forceShow=!1,A){var h=this.panClickPos,c=this.panClickEndTime,E=this.panClickStartTime,","H=this.panClickEnd,l=this.panClickStart,e=(s?h-f:h-e)/w;if(!g.parseDates||g.equalSpacing)e=Math.round(e);0!==e&&(h={type:\"zoomed\",target:this},h.chart=this.chart,g.parseDates&&!g.equalSpacing?(c+e>u&&(e=u-c),E+e<t&&(e=t-E),h.start=Math.round(E+e),h.end=Math.round(c+e),this.fire(h.type,h)):H+e>=this.data.length||0>l+e||(h.start=l+e,h.end=H+e,this.fire(h.type,h)))}else{\"start\"==x?r-=g.cellWidth/2:\"mouse\"==x&&(c.mouseIsOver?r=s?f-2:e-2:isNaN(this.tempPosition)||(r=this.tempPosition-2));if(s){if(0>r)if(E)r=","0;else{this.hideCursor();return}if(r>p+1)if(E)r=p+1;else{this.hideCursor();return}}else{if(0>r)if(E)r=0;else{this.hideCursor();return}if(r>n)if(E)r=n;else{this.hideCursor();return}}if(0<this.cursorAlpha){var F=this.line;s?(t=0,u=r+k,d&&(u-=g.cellWidth/2)):(t=r,u=0,d&&(t-=g.cellWidth/2));w=this.animationDuration;0<w&&!this.zooming?isNaN(this.previousX)?F.translate(t,u):(F.translate(this.previousX,this.previousY),F.animate({translate:t+\",\"+u},w,\"easeOutSine\")):F.translate(t,u);this.previousX=t;this.previousY=","u;F.show()}this.linePos=s?r+k:r;E&&(d&&F.hide(),s?this.updateSelectionSize(NaN,r):this.updateSelectionSize(r,NaN));w=!0;E&&(w=!1);this.categoryBalloonEnabled&&w?(this.setBalloonPosition(v,g,r,s),(t=this.categoryBalloonFunction)?v.showBalloon(t(q.category)):g.parseDates?(g=AmCharts.formatDate(q.category,this.categoryBalloonDateFormat,c),-1!=g.indexOf(\"fff\")&&(g=AmCharts.formatMilliseconds(g,q.category)),v.showBalloon(g)):v.showBalloon(AmCharts.fixNewLines(q.category))):v.hide();z&&this.bulletsEnabled&&","this.showBullets();if(this.oneBalloonOnly){r=Infinity;for(g=0;g<z.length;g++)t=z[g],t.showBalloon&&!t.hidden&&t.balloonText&&(u=q.axes[t.valueAxis.id].graphs[t.id],v=u.y,isNaN(v)||(s?Math.abs(e-v)<r&&(r=Math.abs(e-v),H=t):Math.abs(f-v)<r&&(r=Math.abs(f-v),H=t)));this.mostCloseGraph&&(H=this.mostCloseGraph)}if(a!=this.previousIndex||H!=this.previousMostCloseGraph)if(this.normalizeBulletSize(),this.destroyValueBalloons(),this.resizedBullets=[],z&&this.valueBalloonsEnabled&&w&&c.balloon.enabled){this.valueBalloons=","w=[];for(g=0;g<z.length;g++)if(t=z[g],v=NaN,(!this.oneBalloonOnly||t==H)&&t.showBalloon&&!t.hidden&&t.balloonText&&(\"step\"==t.type&&\"left\"==t.stepDirection&&(q=this.data[a+1]),q)){if(u=q.axes[t.valueAxis.id].graphs[t.id])v=u.y;if(this.showNextAvailable&&isNaN(v)&&a+1<this.data.length)for(r=a+1;r<this.data.length;r++)if(d=this.data[r])if(u=d.axes[t.valueAxis.id].graphs[t.id],v=u.y,!isNaN(v))break;if(!isNaN(v)){d=u.x;k=!0;if(s){if(r=v,0>d||d>p)k=!1}else if(r=d,d=v,0>r||r>n+h+1)k=!1;k&&(k=this.graphBulletSize,","F=this.graphBulletAlpha,1==k&&isNaN(F)||!AmCharts.isModern||!(x=u.bulletGraphics)||(x.getBBox(),x.translate(u.bx,u.by,k),this.resizedBullets.push(u),isNaN(F)||(x.setAttr(\"fill-opacity\",F),x.setAttr(\"stroke-opacity\",F))),k=t.valueBalloon,F=c.getBalloonColor(t,u),k.setBounds(l,m,l+n,m+p),k.pointerOrientation=\"H\",x=this.balloonPointerOrientation,\"vertical\"==x&&(k.pointerOrientation=\"V\"),\"horizontal\"==x&&(k.pointerOrientation=\"H\"),k.changeColor(F),void 0!==t.balloonAlpha&&(k.fillAlpha=t.balloonAlpha),","void 0!==t.balloonTextColor&&(k.color=t.balloonTextColor),k.setPosition(r+l,d+m),r=c.formatString(t.balloonText,u,!0),(d=t.balloonFunction)&&(r=d(u,t).toString()),\"\"!==r&&(s?k.showBalloon(r):(k.text=r,k.show=!0),w.push({yy:v,balloon:k})),!s&&k.set&&(k.set.hide(),t=k.textDiv)&&(t.style.visibility=\"hidden\"))}}this.avoidBalloonOverlapping&&this.arrangeBalloons()}b?(h={type:\"changed\"},h.index=a,h.chart=this.chart,h.zooming=E,h.mostCloseGraph=H,h.position=s?f:e,h.target=this,c.fire(\"changed\",h),this.fire(\"changed\",","h),this.skipZoomDispatch=!1):(this.skipZoomDispatch=!0,c.updateLegendValues(a));this.previousIndex=a;this.previousMostCloseGraph=H}}}else this.hideCursor()},setBalloonPosition:function(a,b,c,d){var e=b.position,f=b.inside;b=b.axisThickness;var g=this.chart,h=g.dx,g=g.dy,k=this.x,l=this.y,m=this.width,n=this.height;d?(f&&(\"right\"==e?a.setBounds(k,l+g,k+m+h,l+c+g):a.setBounds(k,l+g,k+m+h,l+c)),\"right\"==e?f?a.setPosition(k+m+h,l+c+g):a.setPosition(k+m+h+b,l+c+g):f?a.setPosition(k,l+c):a.setPosition(k-","b,l+c)):\"top\"==e?f?a.setPosition(k+c+h,l+g):a.setPosition(k+c+h,l+g-b+1):f?a.setPosition(k+c,l+n):a.setPosition(k+c,l+n+b-1)},setBalloonBounds:function(a,b,c){var d=b.position,e=b.inside,f=b.axisThickness,g=b.tickLength,h=this.chart,k=h.dx,h=h.dy,l=this.x,m=this.y,n=this.width,p=this.height;c?(e&&(a.pointerWidth=0),\"right\"==d?e?a.setBounds(l,m+h,l+n+k,m+p+h):a.setBounds(l+n+k+f,m+h,l+n+1E3,m+p+h):e?a.setBounds(l,m,n+l,p+m):a.setBounds(-1E3,-1E3,l-g-f,m+p+15)):(a.maxWidth=n,b.parseDates&&(g=0,a.pointerWidth=","0),\"top\"==d?e?a.setBounds(l+k,m+h,n+k+l,p+m):a.setBounds(l+k,-1E3,n+k+l,m+h-g-f):e?a.setBounds(l,m,n+l,p+m-g):a.setBounds(l,m+p+g+f-1,l+n,m+p+g+f))},enableDrawing:function(a){this.enabled=!a;this.hideCursor();this.rolledOver=!1;this.drawing=a},isZooming:function(a){a&&a!=this.zooming&&this.handleMouseDown(\"fake\");a||a==this.zooming||this.handleMouseUp()},handleMouseOut:function(){if(this.enabled)if(this.zooming)this.setPosition();else{this.index=void 0;var a={type:\"changed\",index:void 0,target:this};","a.chart=this.chart;this.fire(\"changed\",a);this.hideCursor()}},handleReleaseOutside:function(){this.handleMouseUp()},handleMouseUp:function(){var a=this.chart,b=this.data,c;if(a){var d=a.mouseX-this.x,e=a.mouseY-this.y;if(this.drawingNow){this.drawingNow=!1;AmCharts.remove(this.drawingLine);c=this.drawStartX;var f=this.drawStartY;if(2<Math.abs(c-d)||2<Math.abs(f-e))c={type:\"draw\",target:this,chart:a,initialX:c,initialY:f,finalX:d,finalY:e},this.fire(c.type,c)}if(this.enabled&&0<b.length){if(this.pan)this.rolledOver=","!1;else if(this.zoomable&&this.zooming){c=this.selectWithoutZooming?{type:\"selected\"}:{type:\"zoomed\"};c.target=this;c.chart=a;if(\"cursor\"==this.type)this.rotate?this.selectionPosY=e:this.selectionPosX=e=d,2>Math.abs(e-this.initialMouse)&&this.fromIndex==this.index||(this.index<this.fromIndex?(c.end=this.fromIndex,c.start=this.index):(c.end=this.index,c.start=this.fromIndex),e=a.categoryAxis,e.parseDates&&!e.equalSpacing&&(b[c.start]&&(c.start=b[c.start].time),b[c.end]&&(c.end=a.getEndTime(b[c.end].time))),","this.skipZoomDispatch||this.fire(c.type,c));else{var g=this.initialMouseX,h=this.initialMouseY;3>Math.abs(d-g)&&3>Math.abs(e-h)||(b=Math.min(g,d),f=Math.min(h,e),d=Math.abs(g-d),e=Math.abs(h-e),a.hideXScrollbar&&(b=0,d=this.width),a.hideYScrollbar&&(f=0,e=this.height),c.selectionHeight=e,c.selectionWidth=d,c.selectionY=f,c.selectionX=b,this.skipZoomDispatch||this.fire(c.type,c))}this.selectWithoutZooming||AmCharts.remove(this.selection)}this.skipZoomDispatch=!1}}this.panning=this.zooming=!1},showCursorAt:function(a){var b=","this.chart.categoryAxis;a=b.parseDates?b.dateToCoordinate(a):b.categoryToCoordinate(a);this.previousMousePosition=NaN;this.forceShow=!0;this.setPosition(a,!1)},clearSelection:function(){AmCharts.remove(this.selection)},handleMouseDown:function(a){if(this.zoomable||this.pan||this.drawing){var b=this.rotate,c=this.chart,d=c.mouseX-this.x,e=c.mouseY-this.y;if(0<d&&d<this.width&&0<e&&e<this.height||\"fake\"==a)this.setPosition(),this.selectWithoutZooming&&AmCharts.remove(this.selection),this.drawing?(this.drawStartY=","e,this.drawStartX=d,this.drawingNow=!0):this.pan?(this.zoomable=!1,c.setMouseCursor(\"move\"),this.panning=!0,this.panClickPos=b?e:d,this.panClickStart=this.start,this.panClickEnd=this.end,this.panClickStartTime=this.startTime,this.panClickEndTime=this.endTime):this.zoomable&&(\"cursor\"==this.type?(this.fromIndex=this.index,b?(this.initialMouse=e,this.selectionPosY=this.linePos):(this.initialMouse=d,this.selectionPosX=this.linePos)):(this.initialMouseX=d,this.initialMouseY=e,this.selectionPosX=d,this.selectionPosY=","e),this.zooming=!0)}}});AmCharts.SimpleChartScrollbar=AmCharts.Class({construct:function(a){this.createEvents(\"zoomed\");this.backgroundColor=\"#D4D4D4\";this.backgroundAlpha=1;this.selectedBackgroundColor=\"#EFEFEF\";this.scrollDuration=this.selectedBackgroundAlpha=1;this.resizeEnabled=!0;this.hideResizeGrips=!1;this.scrollbarHeight=20;this.updateOnReleaseOnly=!1;9>document.documentMode&&(this.updateOnReleaseOnly=!0);this.dragIconWidth=18;this.dragIconHeight=25;AmCharts.applyTheme(this,a,\"SimpleChartScrollbar\")},draw:function(){var a=","this;a.destroy();a.interval=setInterval(function(){a.updateScrollbar.call(a)},40);var b=a.chart.container,c=a.rotate,d=a.chart,e=b.set();a.set=e;d.scrollbarsSet.push(e);var f,g;c?(f=a.scrollbarHeight,g=d.plotAreaHeight):(g=a.scrollbarHeight,f=d.plotAreaWidth);a.width=f;if((a.height=g)&&f){var h=AmCharts.rect(b,f,g,a.backgroundColor,a.backgroundAlpha,1,a.backgroundColor,a.backgroundAlpha);a.bg=h;e.push(h);h=AmCharts.rect(b,f,g,\"#000\",.005);e.push(h);a.invisibleBg=h;h.click(function(){a.handleBgClick()}).mouseover(function(){a.handleMouseOver()}).mouseout(function(){a.handleMouseOut()}).touchend(function(){a.handleBgClick()});","h=AmCharts.rect(b,f,g,a.selectedBackgroundColor,a.selectedBackgroundAlpha);a.selectedBG=h;e.push(h);f=AmCharts.rect(b,f,g,\"#000\",.005);a.dragger=f;e.push(f);f.mousedown(function(b){a.handleDragStart(b)}).mouseup(function(){a.handleDragStop()}).mouseover(function(){a.handleDraggerOver()}).mouseout(function(){a.handleMouseOut()}).touchstart(function(b){a.handleDragStart(b)}).touchend(function(){a.handleDragStop()});f=d.pathToImages;c?(h=f+\"dragIconH.gif\",f=a.dragIconWidth,c=a.dragIconHeight):(h=f+\"dragIcon.gif\",","c=a.dragIconWidth,f=a.dragIconHeight);g=b.image(h,0,0,c,f);var h=b.image(h,0,0,c,f),k=10,l=20;d.panEventsEnabled&&(k=25,l=a.scrollbarHeight);var m=AmCharts.rect(b,k,l,\"#000\",.005),n=AmCharts.rect(b,k,l,\"#000\",.005);n.translate(-(k-c)/2,-(l-f)/2);m.translate(-(k-c)/2,-(l-f)/2);c=b.set([g,n]);b=b.set([h,m]);a.iconLeft=c;a.iconRight=b;c.mousedown(function(){a.leftDragStart()}).mouseup(function(){a.leftDragStop()}).mouseover(function(){a.iconRollOver()}).mouseout(function(){a.iconRollOut()}).touchstart(function(b){a.leftDragStart()}).touchend(function(){a.leftDragStop()});","b.mousedown(function(){a.rightDragStart()}).mouseup(function(){a.rightDragStop()}).mouseover(function(){a.iconRollOver()}).mouseout(function(){a.iconRollOut()}).touchstart(function(b){a.rightDragStart()}).touchend(function(){a.rightDragStop()});AmCharts.ifArray(d.chartData)?e.show():e.hide();a.hideDragIcons();a.clipDragger(!1)}e.translate(a.x,a.y)},updateScrollbarSize:function(a,b){var c=this.dragger,d,e,f,g;this.rotate?(d=0,e=a,f=this.width+1,g=b-a,c.setAttr(\"height\",b-a),c.setAttr(\"y\",e)):(d=a,","e=0,f=b-a,g=this.height+1,c.setAttr(\"width\",b-a),c.setAttr(\"x\",d));this.clipAndUpdate(d,e,f,g)},updateScrollbar:function(){var a,b=!1,c,d,e=this.x,f=this.y,g=this.dragger,h=this.getDBox();c=h.x+e;d=h.y+f;var k=h.width,h=h.height,l=this.rotate,m=this.chart,n=this.width,p=this.height,q=m.mouseX,r=m.mouseY;a=this.initialMouse;this.forceClip&&this.clipDragger(!0);m.mouseIsOver&&(this.dragging&&(m=this.initialCoord,l?(a=m+(r-a),0>a&&(a=0),m=p-h,a>m&&(a=m),g.setAttr(\"y\",a)):(a=m+(q-a),0>a&&(a=0),m=n-k,","a>m&&(a=m),g.setAttr(\"x\",a)),this.clipDragger(!0)),this.resizingRight&&(l?(a=r-d,a+d>p+f&&(a=p-d+f),0>a?(this.resizingRight=!1,b=this.resizingLeft=!0):(0===a&&(a=.1),g.setAttr(\"height\",a))):(a=q-c,a+c>n+e&&(a=n-c+e),0>a?(this.resizingRight=!1,b=this.resizingLeft=!0):(0===a&&(a=.1),g.setAttr(\"width\",a))),this.clipDragger(!0)),this.resizingLeft&&(l?(c=d,d=r,d<f&&(d=f),d>p+f&&(d=p+f),a=!0===b?c-d:h+c-d,0>a?(this.resizingRight=!0,this.resizingLeft=!1,g.setAttr(\"y\",c+h-f)):(0===a&&(a=.1),g.setAttr(\"y\",","d-f),g.setAttr(\"height\",a))):(d=q,d<e&&(d=e),d>n+e&&(d=n+e),a=!0===b?c-d:k+c-d,0>a?(this.resizingRight=!0,this.resizingLeft=!1,g.setAttr(\"x\",c+k-e)):(0===a&&(a=.1),g.setAttr(\"x\",d-e),g.setAttr(\"width\",a))),this.clipDragger(!0)))},stopForceClip:function(){this.forceClip=!1},clipDragger:function(a){var b=this.getDBox();if(b){var c=b.x,d=b.y,e=b.width,b=b.height,f=!1;if(this.rotate){if(c=0,e=this.width+1,this.clipY!=d||this.clipH!=b)f=!0}else if(d=0,b=this.height+1,this.clipX!=c||this.clipW!=e)f=!0;","f&&(this.clipAndUpdate(c,d,e,b),a&&(this.updateOnReleaseOnly||this.dispatchScrollbarEvent()))}},maskGraphs:function(){},clipAndUpdate:function(a,b,c,d){this.clipX=a;this.clipY=b;this.clipW=c;this.clipH=d;this.selectedBG.clipRect(a,b,c,d);this.updateDragIconPositions();this.maskGraphs(a,b,c,d)},dispatchScrollbarEvent:function(){if(this.skipEvent)this.skipEvent=!1;else{var a=this.chart;a.hideBalloon();var b=this.getDBox(),c=b.x,d=b.y,e=b.width,b=b.height;this.rotate?(c=d,e=this.height/b):e=this.width/","e;a={type:\"zoomed\",position:c,chart:a,target:this,multiplier:e};this.fire(a.type,a)}},updateDragIconPositions:function(){var a=this.getDBox(),b=a.x,c=a.y,d=this.iconLeft,e=this.iconRight,f,g,h=this.scrollbarHeight;this.rotate?(f=this.dragIconWidth,g=this.dragIconHeight,d.translate(this.x+(h-g)/2,this.y+c-f/2),e.translate(this.x+(h-g)/2,this.y+c+a.height-f/2)):(f=this.dragIconHeight,g=this.dragIconWidth,d.translate(this.x+b-g/2,this.y+(h-f)/2),e.translate(this.x+b-g/2+a.width,this.y+(h-f)/2))},showDragIcons:function(){this.resizeEnabled&&","(this.iconLeft.show(),this.iconRight.show())},hideDragIcons:function(){if(!this.resizingLeft&&!this.resizingRight&&!this.dragging){if(this.hideResizeGrips||!this.resizeEnabled)this.iconLeft.hide(),this.iconRight.hide();this.removeCursors()}},removeCursors:function(){this.chart.setMouseCursor(\"auto\")},relativeZoom:function(a,b){this.dragger.stop();this.multiplier=a;this.position=b;this.updateScrollbarSize(b,this.rotate?b+this.height/a:b+this.width/a)},destroy:function(){this.clear();AmCharts.remove(this.set);","AmCharts.remove(this.iconRight);AmCharts.remove(this.iconLeft)},clear:function(){clearInterval(this.interval)},handleDragStart:function(){var a=this.chart;this.dragger.stop();this.removeCursors();this.dragging=!0;var b=this.getDBox();this.rotate?(this.initialCoord=b.y,this.initialMouse=a.mouseY):(this.initialCoord=b.x,this.initialMouse=a.mouseX)},handleDragStop:function(){this.updateOnReleaseOnly&&(this.updateScrollbar(),this.skipEvent=!1,this.dispatchScrollbarEvent());this.dragging=!1;this.mouseIsOver&&","this.removeCursors();this.updateScrollbar()},handleDraggerOver:function(){this.handleMouseOver()},leftDragStart:function(){this.dragger.stop();this.resizingLeft=!0},leftDragStop:function(){this.resizingLeft=!1;this.mouseIsOver||this.removeCursors();this.updateOnRelease()},rightDragStart:function(){this.dragger.stop();this.resizingRight=!0},rightDragStop:function(){this.resizingRight=!1;this.mouseIsOver||this.removeCursors();this.updateOnRelease()},iconRollOut:function(){this.removeCursors()},iconRollOver:function(){this.rotate?","this.chart.setMouseCursor(\"n-resize\"):this.chart.setMouseCursor(\"e-resize\");this.handleMouseOver()},getDBox:function(){if(this.dragger)return this.dragger.getBBox()},handleBgClick:function(){var a=this;if(!a.resizingRight&&!a.resizingLeft){a.zooming=!0;var b,c,d=a.scrollDuration,e=a.dragger;b=a.getDBox();var f=b.height,g=b.width;c=a.chart;var h=a.y,k=a.x,l=a.rotate;l?(b=\"y\",c=c.mouseY-f/2-h,c=AmCharts.fitToBounds(c,0,a.height-f)):(b=\"x\",c=c.mouseX-g/2-k,c=AmCharts.fitToBounds(c,0,a.width-g));a.updateOnReleaseOnly?","(a.skipEvent=!1,e.setAttr(b,c),a.dispatchScrollbarEvent(),a.clipDragger()):(c=Math.round(c),l?e.animate({y:c},d,\">\"):e.animate({x:c},d,\">\"),a.forceClip=!0,clearTimeout(a.forceTO),a.forceTO=setTimeout(function(){a.stopForceClip.call(a)},3E3*d))}},updateOnRelease:function(){this.updateOnReleaseOnly&&(this.updateScrollbar(),this.skipEvent=!1,this.dispatchScrollbarEvent())},handleReleaseOutside:function(){if(this.set){if(this.resizingLeft||this.resizingRight||this.dragging)this.updateOnRelease(),this.removeCursors();","this.mouseIsOver=this.dragging=this.resizingRight=this.resizingLeft=!1;this.hideDragIcons();this.updateScrollbar()}},handleMouseOver:function(){this.mouseIsOver=!0;this.showDragIcons()},handleMouseOut:function(){this.mouseIsOver=!1;this.hideDragIcons()}});AmCharts.ChartScrollbar=AmCharts.Class({inherits:AmCharts.SimpleChartScrollbar,construct:function(a){this.cname=\"ChartScrollbar\";AmCharts.ChartScrollbar.base.construct.call(this,a);this.graphLineColor=\"#BBBBBB\";this.graphLineAlpha=0;this.graphFillColor=\"#BBBBBB\";this.graphFillAlpha=1;this.selectedGraphLineColor=\"#888888\";this.selectedGraphLineAlpha=0;this.selectedGraphFillColor=\"#888888\";this.selectedGraphFillAlpha=1;this.gridCount=0;this.gridColor=\"#FFFFFF\";this.gridAlpha=.7;this.skipEvent=this.autoGridCount=","!1;this.color=\"#FFFFFF\";this.scrollbarCreated=!1;this.offset=0;AmCharts.applyTheme(this,a,this.cname)},init:function(){var a=this.categoryAxis,b=this.chart;a||(this.categoryAxis=a=new AmCharts.CategoryAxis);a.chart=b;a.id=\"scrollbar\";a.dateFormats=b.categoryAxis.dateFormats;a.markPeriodChange=b.categoryAxis.markPeriodChange;a.boldPeriodBeginning=b.categoryAxis.boldPeriodBeginning;a.axisItemRenderer=AmCharts.RecItem;a.axisRenderer=AmCharts.RecAxis;a.guideFillRenderer=AmCharts.RecFill;a.inside=!0;a.fontSize=","this.fontSize;a.tickLength=0;a.axisAlpha=0;AmCharts.isString(this.graph)&&(this.graph=AmCharts.getObjById(b.graphs,this.graph));if(a=this.graph){var c=this.valueAxis;c||(this.valueAxis=c=new AmCharts.ValueAxis,c.visible=!1,c.scrollbar=!0,c.axisItemRenderer=AmCharts.RecItem,c.axisRenderer=AmCharts.RecAxis,c.guideFillRenderer=AmCharts.RecFill,c.labelsEnabled=!1,c.chart=b);b=this.unselectedGraph;b||(b=new AmCharts.AmGraph,b.scrollbar=!0,this.unselectedGraph=b,b.negativeBase=a.negativeBase,b.noStepRisers=","a.noStepRisers);b=this.selectedGraph;b||(b=new AmCharts.AmGraph,b.scrollbar=!0,this.selectedGraph=b,b.negativeBase=a.negativeBase,b.noStepRisers=a.noStepRisers)}this.scrollbarCreated=!0},draw:function(){var a=this;AmCharts.ChartScrollbar.base.draw.call(a);a.scrollbarCreated||a.init();var b=a.chart,c=b.chartData,d=a.categoryAxis,e=a.rotate,f=a.x,g=a.y,h=a.width,k=a.height,l=b.categoryAxis,m=a.set;d.setOrientation(!e);d.parseDates=l.parseDates;d.rotate=e;d.equalSpacing=l.equalSpacing;d.minPeriod=l.minPeriod;","d.startOnAxis=l.startOnAxis;d.viW=h;d.viH=k;d.width=h;d.height=k;d.gridCount=a.gridCount;d.gridColor=a.gridColor;d.gridAlpha=a.gridAlpha;d.color=a.color;d.tickLength=0;d.axisAlpha=0;d.autoGridCount=a.autoGridCount;d.parseDates&&!d.equalSpacing&&d.timeZoom(b.firstTime,b.lastTime);d.zoom(0,c.length-1);if(l=a.graph){var n=a.valueAxis,p=l.valueAxis;n.id=p.id;n.rotate=e;n.setOrientation(e);n.width=h;n.height=k;n.viW=h;n.viH=k;n.dataProvider=c;n.reversed=p.reversed;n.logarithmic=p.logarithmic;n.gridAlpha=","0;n.axisAlpha=0;m.push(n.set);e?(n.y=g,n.x=0):(n.x=f,n.y=0);var f=Infinity,g=-Infinity,q;for(q=0;q<c.length;q++){var r=c[q].axes[p.id].graphs[l.id].values,s;for(s in r)if(r.hasOwnProperty(s)&&\"percents\"!=s&&\"total\"!=s){var w=r[s];w<f&&(f=w);w>g&&(g=w)}}Infinity!=f&&(n.minimum=f);-Infinity!=g&&(n.maximum=g+.1*(g-f));f==g&&(n.minimum-=1,n.maximum+=1);void 0!==a.minimum&&(n.minimum=a.minimum);void 0!==a.maximum&&(n.maximum=a.maximum);n.zoom(0,c.length-1);s=a.unselectedGraph;s.id=l.id;s.rotate=e;s.chart=","b;s.data=c;s.valueAxis=n;s.chart=l.chart;s.categoryAxis=a.categoryAxis;s.periodSpan=l.periodSpan;s.valueField=l.valueField;s.openField=l.openField;s.closeField=l.closeField;s.highField=l.highField;s.lowField=l.lowField;s.lineAlpha=a.graphLineAlpha;s.lineColorR=a.graphLineColor;s.fillAlphas=a.graphFillAlpha;s.fillColorsR=a.graphFillColor;s.connect=l.connect;s.hidden=l.hidden;s.width=h;s.height=k;s.pointPosition=l.pointPosition;s.stepDirection=l.stepDirection;s.periodSpan=l.periodSpan;p=a.selectedGraph;","p.id=l.id;p.rotate=e;p.chart=b;p.data=c;p.valueAxis=n;p.chart=l.chart;p.categoryAxis=d;p.periodSpan=l.periodSpan;p.valueField=l.valueField;p.openField=l.openField;p.closeField=l.closeField;p.highField=l.highField;p.lowField=l.lowField;p.lineAlpha=a.selectedGraphLineAlpha;p.lineColorR=a.selectedGraphLineColor;p.fillAlphas=a.selectedGraphFillAlpha;p.fillColorsR=a.selectedGraphFillColor;p.connect=l.connect;p.hidden=l.hidden;p.width=h;p.height=k;p.pointPosition=l.pointPosition;p.stepDirection=l.stepDirection;","p.periodSpan=l.periodSpan;b=a.graphType;b||(b=l.type);s.type=b;p.type=b;c=c.length-1;s.zoom(0,c);p.zoom(0,c);p.set.click(function(){a.handleBackgroundClick()}).mouseover(function(){a.handleMouseOver()}).mouseout(function(){a.handleMouseOut()});s.set.click(function(){a.handleBackgroundClick()}).mouseover(function(){a.handleMouseOver()}).mouseout(function(){a.handleMouseOut()});m.push(s.set);m.push(p.set)}m.push(d.set);m.push(d.labelsSet);a.bg.toBack();a.invisibleBg.toFront();a.dragger.toFront();a.iconLeft.toFront();","a.iconRight.toFront()},timeZoom:function(a,b,c){this.startTime=a;this.endTime=b;this.timeDifference=b-a;this.skipEvent=!AmCharts.toBoolean(c);this.zoomScrollbar();this.skipEvent||this.dispatchScrollbarEvent()},zoom:function(a,b){this.start=a;this.end=b;this.skipEvent=!0;this.zoomScrollbar()},dispatchScrollbarEvent:function(){if(this.skipEvent)this.skipEvent=!1;else{var a=this.chart.chartData,b,c,d=this.dragger.getBBox();b=d.x;var e=d.y,f=d.width,d=d.height,g=this.chart;this.rotate?(b=e,c=d):c=f;f=","{type:\"zoomed\",target:this};f.chart=g;var h=this.categoryAxis,k=this.stepWidth,e=g.minSelectedTime,d=!1;if(h.parseDates&&!h.equalSpacing){if(a=g.lastTime,g=g.firstTime,h.minDuration(),h=Math.round(b/k)+g,b=this.dragging?h+this.timeDifference:Math.round((b+c)/k)+g,h>b&&(h=b),0<e&&b-h<e&&(b=Math.round(h+(b-h)/2),d=Math.round(e/2),h=b-d,b+=d,d=!0),b>a&&(b=a),b-e<h&&(h=b-e),h<g&&(h=g),h+e>b&&(b=h+e),h!=this.startTime||b!=this.endTime)this.startTime=h,this.endTime=b,f.start=h,f.end=b,f.startDate=new Date(h),","f.endDate=new Date(b),this.fire(f.type,f)}else if(h.startOnAxis||(b+=k/2),c-=this.stepWidth/2,e=h.xToIndex(b),b=h.xToIndex(b+c),e!=this.start||this.end!=b)h.startOnAxis&&(this.resizingRight&&e==b&&b++,this.resizingLeft&&e==b&&(0<e?e--:b=1)),this.start=e,this.end=this.dragging?this.start+this.difference:b,f.start=this.start,f.end=this.end,h.parseDates&&(a[this.start]&&(f.startDate=new Date(a[this.start].time)),a[this.end]&&(f.endDate=new Date(a[this.end].time))),this.fire(f.type,f);d&&this.zoomScrollbar()}},","zoomScrollbar:function(){var a,b;a=this.chart;var c=a.chartData,d=this.categoryAxis;d.parseDates&&!d.equalSpacing?(c=d.stepWidth,d=a.firstTime,a=c*(this.startTime-d),b=c*(this.endTime-d)):(a=c[this.start].x[d.id],b=c[this.end].x[d.id],c=d.stepWidth,d.startOnAxis||(d=c/2,a-=d,b+=d));this.stepWidth=c;this.updateScrollbarSize(a,b)},maskGraphs:function(a,b,c,d){var e=this.selectedGraph;e&&e.set.clipRect(a,b,c,d)},handleDragStart:function(){AmCharts.ChartScrollbar.base.handleDragStart.call(this);this.difference=","this.end-this.start;this.timeDifference=this.endTime-this.startTime;0>this.timeDifference&&(this.timeDifference=0)},handleBackgroundClick:function(){AmCharts.ChartScrollbar.base.handleBackgroundClick.call(this);this.dragging||(this.difference=this.end-this.start,this.timeDifference=this.endTime-this.startTime,0>this.timeDifference&&(this.timeDifference=0))}});AmCharts.AmBalloon=AmCharts.Class({construct:function(a){this.cname=\"AmBalloon\";this.enabled=!0;this.fillColor=\"#FFFFFF\";this.fillAlpha=.8;this.borderThickness=2;this.borderColor=\"#FFFFFF\";this.borderAlpha=1;this.cornerRadius=0;this.maximumWidth=220;this.horizontalPadding=8;this.verticalPadding=4;this.pointerWidth=6;this.pointerOrientation=\"V\";this.color=\"#000000\";this.adjustBorderColor=!0;this.show=this.follow=this.showBullet=!1;this.bulletSize=3;this.shadowAlpha=.4;this.shadowColor=\"#000000\";this.fadeOutDuration=","this.animationDuration=.3;this.fixedPosition=!1;this.offsetY=6;this.offsetX=1;this.textAlign=\"center\";AmCharts.isModern||(this.offsetY*=1.5);AmCharts.applyTheme(this,a,this.cname)},draw:function(){var a=this.pointToX,b=this.pointToY;this.deltaSignX=this.deltaSignY=1;var c=this.chart;AmCharts.VML&&(this.fadeOutDuration=0);this.xAnim&&c.stopAnim(this.xAnim);this.yAnim&&c.stopAnim(this.yAnim);if(!isNaN(a)){var d=this.follow,e=c.container,f=this.set;AmCharts.remove(f);this.removeDiv();f=e.set();f.node.style.pointerEvents=","\"none\";this.set=f;c.balloonsSet.push(f);if(this.show){var g=this.l,h=this.t,k=this.r,l=this.b,m=this.balloonColor,n=this.fillColor,p=this.borderColor,q=n;void 0!=m&&(this.adjustBorderColor?q=p=m:n=m);var r=this.horizontalPadding,s=this.verticalPadding,w=this.pointerWidth,v=this.pointerOrientation,t=this.cornerRadius,u=c.fontFamily,x=this.fontSize;void 0==x&&(x=c.fontSize);var m=document.createElement(\"div\"),E=m.style;E.pointerEvents=\"none\";E.position=\"absolute\";var A=this.minWidth,z=\"\";isNaN(A)||","(z=\"min-width:\"+(A-2*r)+\"px; \");m.innerHTML='<div style=\"text-align:'+this.textAlign+\"; \"+z+\"max-width:\"+this.maxWidth+\"px; font-size:\"+x+\"px; color:\"+this.color+\"; font-family:\"+u+'\">'+this.text+\"</div>\";c.chartDiv.appendChild(m);this.textDiv=m;x=m.offsetWidth;u=m.offsetHeight;m.clientHeight&&(x=m.clientWidth,u=m.clientHeight);u+=2*s;z=x+2*r;!isNaN(A)&&z<A&&(z=A);window.opera&&(u+=2);var H=!1,x=this.offsetY;c.handDrawn&&(x+=c.handDrawScatter+2);\"H\"!=v?(A=a-z/2,b<h+u+10&&\"down\"!=v?(H=!0,d&&(b+=x),","x=b+w,this.deltaSignY=-1):(d&&(b-=x),x=b-u-w,this.deltaSignY=1)):(2*w>u&&(w=u/2),x=b-u/2,a<g+(k-g)/2?(A=a+w,this.deltaSignX=-1):(A=a-z-w,this.deltaSignX=1));x+u>=l&&(x=l-u);x<h&&(x=h);A<g&&(A=g);A+z>k&&(A=k-z);var h=x+s,l=A+r,s=this.shadowAlpha,F=this.shadowColor,r=this.borderThickness,G=this.bulletSize,V;0<t||0===w?(0<s&&(a=AmCharts.rect(e,z,u,n,0,r+1,F,s,this.cornerRadius),AmCharts.isModern?a.translate(1,1):a.translate(4,4),f.push(a)),n=AmCharts.rect(e,z,u,n,this.fillAlpha,r,p,this.borderAlpha,","this.cornerRadius),this.showBullet&&(V=AmCharts.circle(e,G,q,this.fillAlpha),f.push(V))):(q=[],t=[],\"H\"!=v?(g=a-A,g>z-w&&(g=z-w),g<w&&(g=w),q=[0,g-w,a-A,g+w,z,z,0,0],t=H?[0,0,b-x,0,0,u,u,0]:[u,u,b-x,u,u,0,0,u]):(q=b-x,q>u-w&&(q=u-w),q<w&&(q=w),t=[0,q-w,b-x,q+w,u,u,0,0],q=a<g+(k-g)/2?[0,0,A<a?0:a-A,0,0,z,z,0]:[z,z,A+z>a?z:a-A,z,z,0,0,z]),0<s&&(a=AmCharts.polygon(e,q,t,n,0,r,F,s),a.translate(1,1),f.push(a)),n=AmCharts.polygon(e,q,t,n,this.fillAlpha,r,p,this.borderAlpha));this.bg=n;f.push(n);n.toFront();","e=1*this.deltaSignX;E.left=l+\"px\";E.top=h+\"px\";f.translate(A-e,x);n=n.getBBox();this.bottom=x+u+1;this.yPos=n.y+x;V&&V.translate(this.pointToX-A+e,b-x);b=this.animationDuration;0<this.animationDuration&&!d&&!isNaN(this.prevX)&&(f.translate(this.prevX,this.prevY),f.animate({translate:A-e+\",\"+x},b,\"easeOutSine\"),m&&(E.left=this.prevTX+\"px\",E.top=this.prevTY+\"px\",this.xAnim=c.animate({node:m},\"left\",this.prevTX,l,b,\"easeOutSine\",\"px\"),this.yAnim=c.animate({node:m},\"top\",this.prevTY,h,b,\"easeOutSine\",","\"px\")));this.prevX=A-e;this.prevY=x;this.prevTX=l;this.prevTY=h}}},followMouse:function(){if(this.follow&&this.show){var a=this.chart.mouseX-this.offsetX*this.deltaSignX,b=this.chart.mouseY;this.pointToX=a;this.pointToY=b;if(a!=this.previousX||b!=this.previousY)if(this.previousX=a,this.previousY=b,0===this.cornerRadius)this.draw();else{var c=this.set;if(c){var d=c.getBBox(),a=a-d.width/2,e=b-d.height-10;a<this.l&&(a=this.l);a>this.r-d.width&&(a=this.r-d.width);e<this.t&&(e=b+10);c.translate(a,e);","b=this.textDiv.style;b.left=a+this.horizontalPadding+\"px\";b.top=e+this.verticalPadding+\"px\"}}}},changeColor:function(a){this.balloonColor=a},setBounds:function(a,b,c,d){this.l=a;this.t=b;this.r=c;this.b=d;this.destroyTO&&clearTimeout(this.destroyTO)},showBalloon:function(a){this.text=a;this.show=!0;this.destroyTO&&clearTimeout(this.destroyTO);a=this.chart;this.fadeAnim1&&a.stopAnim(this.fadeAnim1);this.fadeAnim2&&a.stopAnim(this.fadeAnim2);this.draw()},hide:function(){var a=this,b=a.fadeOutDuration,","c=a.chart;if(0<b){a.destroyTO=setTimeout(function(){a.destroy.call(a)},1E3*b);a.follow=!1;a.show=!1;var d=a.set;d&&(d.setAttr(\"opacity\",a.fillAlpha),a.fadeAnim1=d.animate({opacity:0},b,\"easeInSine\"));a.textDiv&&(a.fadeAnim2=c.animate({node:a.textDiv},\"opacity\",1,0,b,\"easeInSine\",\"\"))}else a.show=!1,a.follow=!1,a.destroy()},setPosition:function(a,b,c){this.pointToX=a;this.pointToY=b;c&&(a==this.previousX&&b==this.previousY||this.draw());this.previousX=a;this.previousY=b},followCursor:function(a){var b=","this;(b.follow=a)?(b.pShowBullet=b.showBullet,b.showBullet=!1):void 0!==b.pShowBullet&&(b.showBullet=b.pShowBullet);clearInterval(b.interval);var c=b.chart.mouseX,d=b.chart.mouseY;!isNaN(c)&&a&&(b.pointToX=c-b.offsetX*b.deltaSignX,b.pointToY=d,b.followMouse(),b.interval=setInterval(function(){b.followMouse.call(b)},40))},removeDiv:function(){if(this.textDiv){var a=this.textDiv.parentNode;a&&a.removeChild(this.textDiv)}},destroy:function(){clearInterval(this.interval);AmCharts.remove(this.set);this.removeDiv();","this.set=null}});AmCharts.AmCoordinateChart=AmCharts.Class({inherits:AmCharts.AmChart,construct:function(a){AmCharts.AmCoordinateChart.base.construct.call(this,a);this.theme=a;this.createEvents(\"rollOverGraphItem\",\"rollOutGraphItem\",\"clickGraphItem\",\"doubleClickGraphItem\",\"rightClickGraphItem\",\"clickGraph\",\"rollOverGraph\",\"rollOutGraph\");this.startAlpha=1;this.startDuration=0;this.startEffect=\"elastic\";this.sequencedAnimation=!0;this.colors=\"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");","this.balloonDateFormat=\"MMM DD, YYYY\";this.valueAxes=[];this.graphs=[];this.guides=[];this.gridAboveGraphs=!1;AmCharts.applyTheme(this,a,\"AmCoordinateChart\")},initChart:function(){AmCharts.AmCoordinateChart.base.initChart.call(this);var a=this.categoryAxis;a&&(this.categoryAxis=AmCharts.processObject(a,AmCharts.CategoryAxis,this.theme));this.processValueAxes();this.createValueAxes();this.processGraphs();this.processGuides();AmCharts.VML&&(this.startAlpha=1);this.setLegendData(this.graphs);this.gridAboveGraphs&&","this.gridSet.toFront()},createValueAxes:function(){if(0===this.valueAxes.length){var a=new AmCharts.ValueAxis;this.addValueAxis(a)}},parseData:function(){this.processValueAxes();this.processGraphs()},parseSerialData:function(){var a=this.graphs,b,c={},d=this.seriesIdField;d||(d=this.categoryField);this.chartData=[];var e=this.dataProvider;if(e){var f=!1,g,h=this.categoryAxis,k,l;h&&(f=h.parseDates,k=h.forceShowField,l=h.labelColorField,g=h.categoryFunction);var m,n,p={},q;f&&(b=AmCharts.extractPeriod(h.minPeriod),","m=b.period,n=b.count,q=AmCharts.getPeriodDuration(m,n));var r={};this.lookupTable=r;var s,w=this.dataDateFormat,v={};for(s=0;s<e.length;s++){var t={},u=e[s];b=u[this.categoryField];t.dataContext=u;t.category=g?g(b,u,h):String(b);k&&(t.forceShow=u[k]);l&&(t.labelColor=u[l]);r[u[d]]=t;if(f&&(b=h.categoryFunction?h.categoryFunction(b,u,h):b instanceof Date?AmCharts.newDate(b,h.minPeriod):w?AmCharts.stringToDate(b,w):new Date(b),b=AmCharts.resetDateToMin(b,m,n,h.firstDayOfWeek),t.category=b,t.time=b.getTime(),","isNaN(t.time)))continue;var x=this.valueAxes;t.axes={};t.x={};var E;for(E=0;E<x.length;E++){var A=x[E].id;t.axes[A]={};t.axes[A].graphs={};var z;for(z=0;z<a.length;z++){b=a[z];var H=b.id,F=b.periodValue;if(b.valueAxis.id==A){t.axes[A].graphs[H]={};var G={};G.index=s;var V=u;b.dataProvider&&(V=c);G.values=this.processValues(V,b,F);!b.connect&&v&&v[H]&&t.time-p[H]>1.1*q&&(v[H].gap=!0);this.processFields(b,G,V);G.category=t.category;G.serialDataItem=t;G.graph=b;t.axes[A].graphs[H]=G;p[H]=t.time;v[H]=","G}}}this.chartData[s]=t}}for(c=0;c<a.length;c++)b=a[c],b.dataProvider&&this.parseGraphData(b)},processValues:function(a,b,c){var d={},e,f=!1;\"candlestick\"!=b.type&&\"ohlc\"!=b.type||\"\"===c||(f=!0);e=Number(a[b.valueField+c]);isNaN(e)||(d.value=e);e=Number(a[b.errorField+c]);isNaN(e)||(d.error=e);f&&(c=\"Open\");e=Number(a[b.openField+c]);isNaN(e)||(d.open=e);f&&(c=\"Close\");e=Number(a[b.closeField+c]);isNaN(e)||(d.close=e);f&&(c=\"Low\");e=Number(a[b.lowField+c]);isNaN(e)||(d.low=e);f&&(c=\"High\");e=Number(a[b.highField+","c]);isNaN(e)||(d.high=e);return d},parseGraphData:function(a){var b=a.dataProvider,c=a.seriesIdField;c||(c=this.seriesIdField);c||(c=this.categoryField);var d;for(d=0;d<b.length;d++){var e=b[d],f=this.lookupTable[String(e[c])],g=a.valueAxis.id;f&&(g=f.axes[g].graphs[a.id],g.serialDataItem=f,g.values=this.processValues(e,a,a.periodValue),this.processFields(a,g,e))}},addValueAxis:function(a){a.chart=this;this.valueAxes.push(a);this.validateData()},removeValueAxesAndGraphs:function(){var a=this.valueAxes,","b;for(b=a.length-1;-1<b;b--)this.removeValueAxis(a[b])},removeValueAxis:function(a){var b=this.graphs,c;for(c=b.length-1;0<=c;c--){var d=b[c];d&&d.valueAxis==a&&this.removeGraph(d)}b=this.valueAxes;for(c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1);this.validateData()},addGraph:function(a){this.graphs.push(a);this.chooseGraphColor(a,this.graphs.length-1);this.validateData()},removeGraph:function(a){var b=this.graphs,c;for(c=b.length-1;0<=c;c--)b[c]==a&&(b.splice(c,1),a.destroy());this.validateData()},","processValueAxes:function(){var a=this.valueAxes,b;for(b=0;b<a.length;b++){var c=a[b],c=AmCharts.processObject(c,AmCharts.ValueAxis,this.theme);a[b]=c;c.chart=this;c.id||(c.id=\"valueAxisAuto\"+b+\"_\"+(new Date).getTime());void 0===c.usePrefixes&&(c.usePrefixes=this.usePrefixes)}},processGuides:function(){var a=this.guides,b=this.categoryAxis;if(a)for(var c=0;c<a.length;c++){var d=a[c];(void 0!==d.category||void 0!==d.date)&&b&&b.addGuide(d);var e=d.valueAxis;e?(AmCharts.isString(e)&&(e=this.getValueAxisById(e)),","e?e.addGuide(d):this.valueAxes[0].addGuide(d)):isNaN(d.value)||this.valueAxes[0].addGuide(d)}},processGraphs:function(){var a=this.graphs,b;for(b=0;b<a.length;b++){var c=a[b],c=AmCharts.processObject(c,AmCharts.AmGraph,this.theme);a[b]=c;this.chooseGraphColor(c,b);c.chart=this;AmCharts.isString(c.valueAxis)&&(c.valueAxis=this.getValueAxisById(c.valueAxis));c.valueAxis||(c.valueAxis=this.valueAxes[0]);c.id||(c.id=\"graphAuto\"+b+\"_\"+(new Date).getTime())}},formatString:function(a,b,c){var d=b.graph,","e=d.valueAxis;e.duration&&b.values.value&&(e=AmCharts.formatDuration(b.values.value,e.duration,\"\",e.durationUnits,e.maxInterval,e.numberFormatter),a=a.split(\"[[value]]\").join(e));a=AmCharts.massReplace(a,{\"[[title]]\":d.title,\"[[description]]\":b.description});a=c?AmCharts.fixNewLines(a):AmCharts.fixBrakes(a);return a=AmCharts.cleanFromEmpty(a)},getBalloonColor:function(a,b,c){var d=a.lineColor,e=a.balloonColor;c&&(e=d);c=a.fillColorsR;\"object\"==typeof c?d=c[0]:void 0!==c&&(d=c);b.isNegative&&(c=a.negativeLineColor,","a=a.negativeFillColors,\"object\"==typeof a?c=a[0]:void 0!==a&&(c=a),void 0!==c&&(d=c));void 0!==b.color&&(d=b.color);void 0===e&&(e=d);return e},getGraphById:function(a){return AmCharts.getObjById(this.graphs,a)},getValueAxisById:function(a){return AmCharts.getObjById(this.valueAxes,a)},processFields:function(a,b,c){if(a.itemColors){var d=a.itemColors,e=b.index;b.color=e<d.length?d[e]:AmCharts.randomColor()}d=\"lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern\".split(\" \");","for(e=0;e<d.length;e++){var f=d[e],g=a[f+\"Field\"];g&&(g=c[g],AmCharts.isDefined(g)&&(b[f]=g))}b.dataContext=c},chooseGraphColor:function(a,b){if(a.lineColor)a.lineColorR=a.lineColor;else{var c;c=this.colors.length>b?this.colors[b]:AmCharts.randomColor();a.lineColorR=c}a.fillColorsR=a.fillColors?a.fillColors:a.lineColorR;a.bulletBorderColorR=a.bulletBorderColor?a.bulletBorderColor:a.useLineColorForBulletBorder?a.lineColorR:a.bulletColor;a.bulletColorR=a.bulletColor?a.bulletColor:a.lineColorR;if(c=","this.patterns)a.pattern=c[b]},handleLegendEvent:function(a){var b=a.type;a=a.dataItem;if(!this.legend.data&&a){var c=a.hidden,d=a.showBalloon;switch(b){case \"clickMarker\":this.textClickEnabled&&(d?this.hideGraphsBalloon(a):this.showGraphsBalloon(a));break;case \"clickLabel\":d?this.hideGraphsBalloon(a):this.showGraphsBalloon(a);break;case \"rollOverItem\":c||this.highlightGraph(a);break;case \"rollOutItem\":c||this.unhighlightGraph();break;case \"hideItem\":this.hideGraph(a);break;case \"showItem\":this.showGraph(a)}}},","highlightGraph:function(a){var b=this.graphs,c,d=.2;this.legend&&(d=this.legend.rollOverGraphAlpha);if(1!=d)for(c=0;c<b.length;c++){var e=b[c];e!=a&&e.changeOpacity(d)}},unhighlightGraph:function(){var a;this.legend&&(a=this.legend.rollOverGraphAlpha);if(1!=a){a=this.graphs;var b;for(b=0;b<a.length;b++)a[b].changeOpacity(1)}},showGraph:function(a){a.switchable&&(a.hidden=!1,this.dataChanged=!0,\"xy\"!=this.type&&(this.marginsUpdated=!1),this.chartCreated&&this.initChart())},hideGraph:function(a){a.switchable&&","(this.dataChanged=!0,\"xy\"!=this.type&&(this.marginsUpdated=!1),a.hidden=!0,this.chartCreated&&this.initChart())},hideGraphsBalloon:function(a){a.showBalloon=!1;this.updateLegend()},showGraphsBalloon:function(a){a.showBalloon=!0;this.updateLegend()},updateLegend:function(){this.legend&&this.legend.invalidateSize()},resetAnimation:function(){var a=this.graphs;if(a){var b;for(b=0;b<a.length;b++)a[b].animationPlayed=!1}},animateAgain:function(){this.resetAnimation();this.validateNow()}});AmCharts.AmSlicedChart=AmCharts.Class({inherits:AmCharts.AmChart,construct:function(a){this.createEvents(\"rollOverSlice\",\"rollOutSlice\",\"clickSlice\",\"pullOutSlice\",\"pullInSlice\",\"rightClickSlice\");AmCharts.AmSlicedChart.base.construct.call(this,a);this.colors=\"#FF0F00 #FF6600 #FF9E01 #FCD202 #F8FF01 #B0DE09 #04D215 #0D8ECF #0D52D1 #2A0CD0 #8A0CCF #CD0D74 #754DEB #DDDDDD #999999 #333333 #000000 #57032A #CA9726 #990000 #4B0C25\".split(\" \");this.alpha=1;this.groupPercent=0;this.groupedTitle=\"Other\";this.groupedPulled=","!1;this.groupedAlpha=1;this.marginLeft=0;this.marginBottom=this.marginTop=10;this.marginRight=0;this.hoverAlpha=1;this.outlineColor=\"#FFFFFF\";this.outlineAlpha=0;this.outlineThickness=1;this.startAlpha=0;this.startDuration=1;this.startEffect=\"bounce\";this.sequencedAnimation=!0;this.pullOutDuration=1;this.pullOutEffect=\"bounce\";this.pullOnHover=this.pullOutOnlyOne=!1;this.labelsEnabled=!0;this.labelTickColor=\"#000000\";this.labelTickAlpha=.2;this.hideLabelsPercent=0;this.urlTarget=\"_self\";this.autoMarginOffset=","10;this.gradientRatio=[];this.maxLabelWidth=200;AmCharts.applyTheme(this,a,\"AmSlicedChart\")},initChart:function(){AmCharts.AmSlicedChart.base.initChart.call(this);this.dataChanged&&(this.parseData(),this.dispatchDataUpdated=!0,this.dataChanged=!1,this.setLegendData(this.chartData));this.drawChart()},handleLegendEvent:function(a){var b=a.type,c=a.dataItem,d=this.legend;if(!d.data&&c){var e=c.hidden;a=a.event;switch(b){case \"clickMarker\":e||d.switchable||this.clickSlice(c,a);break;case \"clickLabel\":e||","this.clickSlice(c,a,!1);break;case \"rollOverItem\":e||this.rollOverSlice(c,!1,a);break;case \"rollOutItem\":e||this.rollOutSlice(c,a);break;case \"hideItem\":this.hideSlice(c,a);break;case \"showItem\":this.showSlice(c,a)}}},invalidateVisibility:function(){this.recalculatePercents();this.initChart();var a=this.legend;a&&a.invalidateSize()},addEventListeners:function(a,b){var c=this;a.mouseover(function(a){c.rollOverSlice(b,!0,a)}).mouseout(function(a){c.rollOutSlice(b,a)}).touchend(function(a){c.rollOverSlice(b,","a);c.panEventsEnabled&&c.clickSlice(b,a)}).touchstart(function(a){c.rollOverSlice(b,a)}).click(function(a){c.clickSlice(b,a)}).contextmenu(function(a){c.handleRightClick(b,a)})},formatString:function(a,b,c){a=AmCharts.formatValue(a,b,[\"value\"],this.nf,\"\",this.usePrefixes,this.prefixesOfSmallNumbers,this.prefixesOfBigNumbers);a=AmCharts.formatValue(a,b,[\"percents\"],this.pf);a=AmCharts.massReplace(a,{\"[[title]]\":b.title,\"[[description]]\":b.description});-1!=a.indexOf(\"[[\")&&(a=AmCharts.formatDataContextValue(a,","b.dataContext));a=c?AmCharts.fixNewLines(a):AmCharts.fixBrakes(a);return a=AmCharts.cleanFromEmpty(a)},startSlices:function(){var a;for(a=0;a<this.chartData.length;a++)0<this.startDuration&&this.sequencedAnimation?this.setStartTO(a):this.startSlice(this.chartData[a])},setStartTO:function(a){var b=this;a=setTimeout(function(){b.startSequenced.call(b)},b.startDuration/b.chartData.length*500*a);b.timeOuts.push(a)},pullSlices:function(a){var b=this.chartData,c;for(c=0;c<b.length;c++){var d=b[c];d.pulled&&","this.pullSlice(d,1,a)}},startSequenced:function(){var a=this.chartData,b;for(b=0;b<a.length;b++)if(!a[b].started){this.startSlice(this.chartData[b]);break}},startSlice:function(a){a.started=!0;var b=a.wedge,c=this.startDuration;b&&0<c&&(0<a.alpha&&b.show(),b.translate(a.startX,a.startY),b.animate({opacity:1,translate:\"0,0\"},c,this.startEffect))},showLabels:function(){var a=this.chartData,b;for(b=0;b<a.length;b++){var c=a[b];if(0<c.alpha){var d=c.label;d&&d.show();(c=c.tick)&&c.show()}}},showSlice:function(a){isNaN(a)?","a.hidden=!1:this.chartData[a].hidden=!1;this.invalidateVisibility()},hideSlice:function(a){isNaN(a)?a.hidden=!0:this.chartData[a].hidden=!0;this.hideBalloon();this.invalidateVisibility()},rollOverSlice:function(a,b,c){isNaN(a)||(a=this.chartData[a]);clearTimeout(this.hoverInt);if(!a.hidden){this.pullOnHover&&this.pullSlice(a,1);1>this.hoverAlpha&&a.wedge&&a.wedge.attr({opacity:this.hoverAlpha});var d=a.balloonX,e=a.balloonY;a.pulled&&(d+=a.pullX,e+=a.pullY);var f=this.formatString(this.balloonText,","a,!0),g=this.balloonFunction;g&&(f=g(a,f));g=AmCharts.adjustLuminosity(a.color,-.15);this.showBalloon(f,g,b,d,e);a={type:\"rollOverSlice\",dataItem:a,chart:this,event:c};this.fire(a.type,a)}},rollOutSlice:function(a,b){isNaN(a)||(a=this.chartData[a]);a.wedge&&a.wedge.attr({opacity:1});this.hideBalloon();var c={type:\"rollOutSlice\",dataItem:a,chart:this,event:b};this.fire(c.type,c)},clickSlice:function(a,b,c){isNaN(a)||(a=this.chartData[a]);a.pulled?this.pullSlice(a,0):this.pullSlice(a,1);AmCharts.getURL(a.url,","this.urlTarget);c||(a={type:\"clickSlice\",dataItem:a,chart:this,event:b},this.fire(a.type,a))},handleRightClick:function(a,b){isNaN(a)||(a=this.chartData[a]);var c={type:\"rightClickSlice\",dataItem:a,chart:this,event:b};this.fire(c.type,c)},drawTicks:function(){var a=this.chartData,b;for(b=0;b<a.length;b++){var c=a[b];if(c.label){var d=c.ty,d=AmCharts.line(this.container,[c.tx0,c.tx,c.tx2],[c.ty0,d,d],this.labelTickColor,this.labelTickAlpha);c.tick=d;c.wedge.push(d)}}},initialStart:function(){var a=","this,b=a.startDuration,c=setTimeout(function(){a.showLabels.call(a)},1E3*b);a.timeOuts.push(c);a.chartCreated?a.pullSlices(!0):(a.startSlices(),0<b?(b=setTimeout(function(){a.pullSlices.call(a)},1200*b),a.timeOuts.push(b)):a.pullSlices(!0))},pullSlice:function(a,b,c){var d=this.pullOutDuration;!0===c&&(d=0);(c=a.wedge)&&(0<d?c.animate({translate:b*a.pullX+\",\"+b*a.pullY},d,this.pullOutEffect):c.translate(b*a.pullX,b*a.pullY));1==b?(a.pulled=!0,this.pullOutOnlyOne&&this.pullInAll(a.index),a={type:\"pullOutSlice\",","dataItem:a,chart:this}):(a.pulled=!1,a={type:\"pullInSlice\",dataItem:a,chart:this});this.fire(a.type,a)},pullInAll:function(a){var b=this.chartData,c;for(c=0;c<this.chartData.length;c++)c!=a&&b[c].pulled&&this.pullSlice(b[c],0)},pullOutAll:function(a){a=this.chartData;var b;for(b=0;b<a.length;b++)a[b].pulled||this.pullSlice(a[b],1)},parseData:function(){var a=[];this.chartData=a;var b=this.dataProvider;isNaN(this.pieAlpha)||(this.alpha=this.pieAlpha);if(void 0!==b){var c=b.length,d=0,e,f,g;for(e=0;e<","c;e++){f={};var h=b[e];f.dataContext=h;f.value=Number(h[this.valueField]);(g=h[this.titleField])||(g=\"\");f.title=g;f.pulled=AmCharts.toBoolean(h[this.pulledField],!1);(g=h[this.descriptionField])||(g=\"\");f.description=g;f.labelRadius=Number(h[this.labelRadiusField]);f.switchable=!0;f.url=h[this.urlField];g=h[this.patternField];!g&&this.patterns&&(g=this.patterns[e]);f.pattern=g;f.visibleInLegend=AmCharts.toBoolean(h[this.visibleInLegendField],!0);g=h[this.alphaField];f.alpha=void 0!==g?Number(g):","this.alpha;g=h[this.colorField];void 0!==g&&(f.color=AmCharts.toColor(g));f.labelColor=AmCharts.toColor(h[this.labelColorField]);d+=f.value;f.hidden=!1;a[e]=f}for(e=b=0;e<c;e++)f=a[e],f.percents=f.value/d*100,f.percents<this.groupPercent&&b++;1<b&&(this.groupValue=0,this.removeSmallSlices(),a.push({title:this.groupedTitle,value:this.groupValue,percents:this.groupValue/d*100,pulled:this.groupedPulled,color:this.groupedColor,url:this.groupedUrl,description:this.groupedDescription,alpha:this.groupedAlpha,","pattern:this.groupedPattern,dataContext:{}}));c=this.baseColor;c||(c=this.pieBaseColor);d=this.brightnessStep;d||(d=this.pieBrightnessStep);for(e=0;e<a.length;e++)c?g=AmCharts.adjustLuminosity(c,e*d/100):(g=this.colors[e],void 0===g&&(g=AmCharts.randomColor())),void 0===a[e].color&&(a[e].color=g);this.recalculatePercents()}},recalculatePercents:function(){var a=this.chartData,b=0,c,d;for(c=0;c<a.length;c++)d=a[c],!d.hidden&&0<d.value&&(b+=d.value);for(c=0;c<a.length;c++)d=this.chartData[c],d.percents=","!d.hidden&&0<d.value?100*d.value/b:0},removeSmallSlices:function(){var a=this.chartData,b;for(b=a.length-1;0<=b;b--)a[b].percents<this.groupPercent&&(this.groupValue+=a[b].value,a.splice(b,1))},animateAgain:function(){var a=this;a.startSlices();for(var b=0;b<a.chartData.length;b++){var c=a.chartData[b];c.started=!1;var d=c.wedge;d&&d.translate(c.startX,c.startY)}b=a.startDuration;0<b?(b=setTimeout(function(){a.pullSlices.call(a)},1200*b),a.timeOuts.push(b)):a.pullSlices()},measureMaxLabel:function(){var a=","this.chartData,b=0,c;for(c=0;c<a.length;c++){var d=a[c],e=this.formatString(this.labelText,d),f=this.labelFunction;f&&(e=f(d,e));d=AmCharts.text(this.container,e,this.color,this.fontFamily,this.fontSize);e=d.getBBox().width;e>b&&(b=e);d.remove()}return b}});AmCharts.AmRectangularChart=AmCharts.Class({inherits:AmCharts.AmCoordinateChart,construct:function(a){AmCharts.AmRectangularChart.base.construct.call(this,a);this.theme=a;this.createEvents(\"zoomed\");this.marginRight=this.marginBottom=this.marginTop=this.marginLeft=20;this.verticalPosition=this.horizontalPosition=this.depth3D=this.angle=0;this.heightMultiplier=this.widthMultiplier=1;this.plotAreaFillColors=\"#FFFFFF\";this.plotAreaFillAlphas=0;this.plotAreaBorderColor=\"#000000\";this.plotAreaBorderAlpha=","0;this.zoomOutButtonImageSize=17;this.zoomOutButtonImage=\"lens.png\";this.zoomOutText=\"Show all\";this.zoomOutButtonColor=\"#e5e5e5\";this.zoomOutButtonAlpha=0;this.zoomOutButtonRollOverAlpha=1;this.zoomOutButtonPadding=8;this.trendLines=[];this.autoMargins=!0;this.marginsUpdated=!1;this.autoMarginOffset=10;AmCharts.applyTheme(this,a,\"AmRectangularChart\")},initChart:function(){AmCharts.AmRectangularChart.base.initChart.call(this);this.updateDxy();var a=!0;!this.marginsUpdated&&this.autoMargins&&(this.resetMargins(),","a=!1);this.processScrollbars();this.updateMargins();this.updatePlotArea();this.updateScrollbars();this.updateTrendLines();this.updateChartCursor();this.updateValueAxes();a&&(this.scrollbarOnly||this.updateGraphs())},drawChart:function(){AmCharts.AmRectangularChart.base.drawChart.call(this);this.drawPlotArea();if(AmCharts.ifArray(this.chartData)){var a=this.chartCursor;a&&a.draw();a=this.zoomOutText;\"\"!==a&&a&&this.drawZoomOutButton()}},resetMargins:function(){var a={},b;if(\"serial\"==this.type){var c=","this.valueAxes;for(b=0;b<c.length;b++){var d=c[b];d.ignoreAxisWidth||(d.setOrientation(this.rotate),d.fixAxisPosition(),a[d.position]=!0)}(b=this.categoryAxis)&&!b.ignoreAxisWidth&&(b.setOrientation(!this.rotate),b.fixAxisPosition(),b.fixAxisPosition(),a[b.position]=!0)}else{d=this.xAxes;c=this.yAxes;for(b=0;b<d.length;b++){var e=d[b];e.ignoreAxisWidth||(e.setOrientation(!0),e.fixAxisPosition(),a[e.position]=!0)}for(b=0;b<c.length;b++)d=c[b],d.ignoreAxisWidth||(d.setOrientation(!1),d.fixAxisPosition(),","a[d.position]=!0)}a.left&&(this.marginLeft=0);a.right&&(this.marginRight=0);a.top&&(this.marginTop=0);a.bottom&&(this.marginBottom=0);this.fixMargins=a},measureMargins:function(){var a=this.valueAxes,b,c=this.autoMarginOffset,d=this.fixMargins,e=this.realWidth,f=this.realHeight,g=c,h=c,k=e;b=f;var l;for(l=0;l<a.length;l++)b=this.getAxisBounds(a[l],g,k,h,b),g=Math.round(b.l),k=Math.round(b.r),h=Math.round(b.t),b=Math.round(b.b);if(a=this.categoryAxis)b=this.getAxisBounds(a,g,k,h,b),g=Math.round(b.l),","k=Math.round(b.r),h=Math.round(b.t),b=Math.round(b.b);d.left&&g<c&&(this.marginLeft=Math.round(-g+c));d.right&&k>=e-c&&(this.marginRight=Math.round(k-e+c));d.top&&h<c+this.titleHeight&&(this.marginTop=Math.round(this.marginTop-h+c+this.titleHeight));d.bottom&&b>f-c&&(this.marginBottom=Math.round(this.marginBottom+b-f+c));this.initChart()},getAxisBounds:function(a,b,c,d,e){if(!a.ignoreAxisWidth){var f=a.labelsSet,g=a.tickLength;a.inside&&(g=0);if(f)switch(f=a.getBBox(),a.position){case \"top\":a=f.y;","d>a&&(d=a);break;case \"bottom\":a=f.y+f.height;e<a&&(e=a);break;case \"right\":a=f.x+f.width+g+3;c<a&&(c=a);break;case \"left\":a=f.x-g,b>a&&(b=a)}}return{l:b,t:d,r:c,b:e}},drawZoomOutButton:function(){var a=this,b=a.container.set();a.zoomButtonSet.push(b);var c=a.color,d=a.fontSize,e=a.zoomOutButtonImageSize,f=a.zoomOutButtonImage,g=AmCharts.lang.zoomOutText||a.zoomOutText,h=a.zoomOutButtonColor,k=a.zoomOutButtonAlpha,l=a.zoomOutButtonFontSize,m=a.zoomOutButtonPadding;isNaN(l)||(d=l);(l=a.zoomOutButtonFontColor)&&","(c=l);var l=a.zoomOutButton,n;l&&(l.fontSize&&(d=l.fontSize),l.color&&(c=l.color),l.backgroundColor&&(h=l.backgroundColor),isNaN(l.backgroundAlpha)||(a.zoomOutButtonRollOverAlpha=l.backgroundAlpha));var p=l=0;void 0!==a.pathToImages&&f&&(n=a.container.image(a.pathToImages+f,0,0,e,e),b.push(n),n=n.getBBox(),l=n.width+5);void 0!==g&&(c=AmCharts.text(a.container,g,c,a.fontFamily,d,\"start\"),d=c.getBBox(),p=n?n.height/2-3:d.height/2,c.translate(l,p),b.push(c));n=b.getBBox();c=1;AmCharts.isModern||(c=0);","h=AmCharts.rect(a.container,n.width+2*m+5,n.height+2*m-2,h,1,1,h,c);h.setAttr(\"opacity\",k);h.translate(-m,-m);b.push(h);h.toBack();a.zbBG=h;n=h.getBBox();b.translate(a.marginLeftReal+a.plotAreaWidth-n.width+m,a.marginTopReal+m);b.hide();b.mouseover(function(){a.rollOverZB()}).mouseout(function(){a.rollOutZB()}).click(function(){a.clickZB()}).touchstart(function(){a.rollOverZB()}).touchend(function(){a.rollOutZB();a.clickZB()});for(k=0;k<b.length;k++)b[k].attr({cursor:\"pointer\"});a.zbSet=b},rollOverZB:function(){this.zbBG.setAttr(\"opacity\",","this.zoomOutButtonRollOverAlpha)},rollOutZB:function(){this.zbBG.setAttr(\"opacity\",this.zoomOutButtonAlpha)},clickZB:function(){this.zoomOut()},zoomOut:function(){this.updateScrollbar=!0;this.zoom()},drawPlotArea:function(){var a=this.dx,b=this.dy,c=this.marginLeftReal,d=this.marginTopReal,e=this.plotAreaWidth-1,f=this.plotAreaHeight-1,g=this.plotAreaFillColors,h=this.plotAreaFillAlphas,k=this.plotAreaBorderColor,l=this.plotAreaBorderAlpha;this.trendLinesSet.clipRect(c,d,e,f);\"object\"==typeof h&&","(h=h[0]);g=AmCharts.polygon(this.container,[0,e,e,0,0],[0,0,f,f,0],g,h,1,k,l,this.plotAreaGradientAngle);g.translate(c+a,d+b);this.set.push(g);0!==a&&0!==b&&(g=this.plotAreaFillColors,\"object\"==typeof g&&(g=g[0]),g=AmCharts.adjustLuminosity(g,-.15),e=AmCharts.polygon(this.container,[0,a,e+a,e,0],[0,b,b,0,0],g,h,1,k,l),e.translate(c,d+f),this.set.push(e),a=AmCharts.polygon(this.container,[0,0,a,a,0],[0,f,f+b,b,0],g,h,1,k,l),a.translate(c,d),this.set.push(a));(c=this.bbset)&&this.scrollbarOnly&&c.remove()},","updatePlotArea:function(){var a=this.updateWidth(),b=this.updateHeight(),c=this.container;this.realWidth=a;this.realWidth=b;c&&this.container.setSize(a,b);a=a-this.marginLeftReal-this.marginRightReal-this.dx;b=b-this.marginTopReal-this.marginBottomReal;1>a&&(a=1);1>b&&(b=1);this.plotAreaWidth=Math.round(a);this.plotAreaHeight=Math.round(b)},updateDxy:function(){this.dx=Math.round(this.depth3D*Math.cos(this.angle*Math.PI/180));this.dy=Math.round(-this.depth3D*Math.sin(this.angle*Math.PI/180));this.d3x=","Math.round(this.columnSpacing3D*Math.cos(this.angle*Math.PI/180));this.d3y=Math.round(-this.columnSpacing3D*Math.sin(this.angle*Math.PI/180))},updateMargins:function(){var a=this.getTitleHeight();this.titleHeight=a;this.marginTopReal=this.marginTop-this.dy+a;this.marginBottomReal=this.marginBottom;this.marginLeftReal=this.marginLeft;this.marginRightReal=this.marginRight},updateValueAxes:function(){var a=this.valueAxes,b=this.marginLeftReal,c=this.marginTopReal,d=this.plotAreaHeight,e=this.plotAreaWidth,","f;for(f=0;f<a.length;f++){var g=a[f];g.axisRenderer=AmCharts.RecAxis;g.guideFillRenderer=AmCharts.RecFill;g.axisItemRenderer=AmCharts.RecItem;g.dx=this.dx;g.dy=this.dy;g.viW=e-1;g.viH=d-1;g.marginsChanged=!0;g.viX=b;g.viY=c;this.updateObjectSize(g)}},updateObjectSize:function(a){a.width=(this.plotAreaWidth-1)*this.widthMultiplier;a.height=(this.plotAreaHeight-1)*this.heightMultiplier;a.x=this.marginLeftReal+this.horizontalPosition;a.y=this.marginTopReal+this.verticalPosition},updateGraphs:function(){var a=","this.graphs,b;for(b=0;b<a.length;b++){var c=a[b];c.x=this.marginLeftReal+this.horizontalPosition;c.y=this.marginTopReal+this.verticalPosition;c.width=this.plotAreaWidth*this.widthMultiplier;c.height=this.plotAreaHeight*this.heightMultiplier;c.index=b;c.dx=this.dx;c.dy=this.dy;c.rotate=this.rotate}},updateChartCursor:function(){var a=this.chartCursor;a&&(a=AmCharts.processObject(a,AmCharts.ChartCursor,this.theme),this.addChartCursor(a),a.x=this.marginLeftReal,a.y=this.marginTopReal,a.width=this.plotAreaWidth-","1,a.height=this.plotAreaHeight-1,a.chart=this)},processScrollbars:function(){var a=this.chartScrollbar;a&&(a=AmCharts.processObject(a,AmCharts.ChartScrollbar,this.theme),this.addChartScrollbar(a))},updateScrollbars:function(){},addChartCursor:function(a){AmCharts.callMethod(\"destroy\",[this.chartCursor]);a&&(this.listenTo(a,\"changed\",this.handleCursorChange),this.listenTo(a,\"zoomed\",this.handleCursorZoom));this.chartCursor=a},removeChartCursor:function(){AmCharts.callMethod(\"destroy\",[this.chartCursor]);","this.chartCursor=null},zoomTrendLines:function(){var a=this.trendLines,b;for(b=0;b<a.length;b++){var c=a[b];c.valueAxis.recalculateToPercents?c.set&&c.set.hide():(c.x=this.marginLeftReal+this.horizontalPosition,c.y=this.marginTopReal+this.verticalPosition,c.draw())}},addTrendLine:function(a){this.trendLines.push(a)},removeTrendLine:function(a){var b=this.trendLines,c;for(c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1)},adjustMargins:function(a,b){var c=a.scrollbarHeight+a.offset;\"top\"==a.position?b?","this.marginLeftReal+=c:this.marginTopReal+=c:b?this.marginRightReal+=c:this.marginBottomReal+=c},getScrollbarPosition:function(a,b,c){a.position=b?\"bottom\"==c||\"left\"==c?\"bottom\":\"top\":\"top\"==c||\"right\"==c?\"bottom\":\"top\"},updateChartScrollbar:function(a,b){if(a){a.rotate=b;var c=this.marginTopReal,d=this.marginLeftReal,e=a.scrollbarHeight,f=this.dx,g=this.dy,h=a.offset;\"top\"==a.position?b?(a.y=c,a.x=d-e-h):(a.y=c-e+g-1-h,a.x=d+f):b?(a.y=c+g,a.x=d+this.plotAreaWidth+f+h):(a.y=c+this.plotAreaHeight+","h,a.x=this.marginLeftReal)}},showZB:function(a){var b=this.zbSet;b&&(a?b.show():b.hide(),this.rollOutZB())},handleReleaseOutside:function(a){AmCharts.AmRectangularChart.base.handleReleaseOutside.call(this,a);(a=this.chartCursor)&&a.handleReleaseOutside()},handleMouseDown:function(a){AmCharts.AmRectangularChart.base.handleMouseDown.call(this,a);var b=this.chartCursor;b&&b.handleMouseDown(a)},handleCursorChange:function(a){}});AmCharts.TrendLine=AmCharts.Class({construct:function(a){this.cname=\"TrendLine\";this.createEvents(\"click\");this.isProtected=!1;this.dashLength=0;this.lineColor=\"#00CC00\";this.lineThickness=this.lineAlpha=1;AmCharts.applyTheme(this,a,this.cname)},draw:function(){var a=this;a.destroy();var b=a.chart,c=b.container,d,e,f,g,h=a.categoryAxis,k=a.initialDate,l=a.initialCategory,m=a.finalDate,n=a.finalCategory,p=a.valueAxis,q=a.valueAxisX,r=a.initialXValue,s=a.finalXValue,w=a.initialValue,v=a.finalValue,","t=p.recalculateToPercents,u=b.dataDateFormat;h&&(k&&(k instanceof Date||(k=u?AmCharts.stringToDate(k,u):new Date(k)),a.initialDate=k,d=h.dateToCoordinate(k)),l&&(d=h.categoryToCoordinate(l)),m&&(m instanceof Date||(m=u?AmCharts.stringToDate(m,u):new Date(m)),a.finalDate=m,e=h.dateToCoordinate(m)),n&&(e=h.categoryToCoordinate(n)));q&&!t&&(isNaN(r)||(d=q.getCoordinate(r)),isNaN(s)||(e=q.getCoordinate(s)));p&&!t&&(isNaN(w)||(f=p.getCoordinate(w)),isNaN(v)||(g=p.getCoordinate(v)));isNaN(d)||isNaN(e)||","isNaN(f)||isNaN(f)||(b.rotate?(h=[f,g],e=[d,e]):(h=[d,e],e=[f,g]),f=a.lineColor,d=AmCharts.line(c,h,e,f,a.lineAlpha,a.lineThickness,a.dashLength),g=h,k=e,n=h[1]-h[0],p=e[1]-e[0],0===n&&(n=.01),0===p&&(p=.01),l=n/Math.abs(n),m=p/Math.abs(p),p=n*p/Math.abs(n*p)*Math.sqrt(Math.pow(n,2)+Math.pow(p,2)),n=Math.asin(n/p),p=90*Math.PI/180-n,n=Math.abs(5*Math.cos(p)),p=Math.abs(5*Math.sin(p)),g.push(h[1]-l*p,h[0]-l*p),k.push(e[1]+m*n,e[0]+m*n),h=AmCharts.polygon(c,g,k,f,.005,0),c=c.set([h,d]),c.translate(b.marginLeftReal,","b.marginTopReal),b.trendLinesSet.push(c),a.line=d,a.set=c,h.mouseup(function(){a.handleLineClick()}).mouseover(function(){a.handleLineOver()}).mouseout(function(){a.handleLineOut()}),h.touchend&&h.touchend(function(){a.handleLineClick()}))},handleLineClick:function(){var a={type:\"click\",trendLine:this,chart:this.chart};this.fire(a.type,a)},handleLineOver:function(){var a=this.rollOverColor;void 0!==a&&this.line.attr({stroke:a})},handleLineOut:function(){this.line.attr({stroke:this.lineColor})},destroy:function(){AmCharts.remove(this.set)}});AmCharts.circle=function(a,b,c,d,e,f,g,h,k){if(void 0==e||0===e)e=.01;void 0===f&&(f=\"#000000\");void 0===g&&(g=0);d={fill:c,stroke:f,\"fill-opacity\":d,\"stroke-width\":e,\"stroke-opacity\":g};a=isNaN(k)?a.circle(0,0,b).attr(d):a.ellipse(0,0,b,k).attr(d);h&&a.gradient(\"radialGradient\",[c,AmCharts.adjustLuminosity(c,-.6)]);return a};","AmCharts.text=function(a,b,c,d,e,f,g,h){f||(f=\"middle\");\"right\"==f&&(f=\"end\");isNaN(h)&&(h=1);void 0!==b&&(b=String(b),AmCharts.isIE&&!AmCharts.isModern&&(b=b.replace(\"&amp;\",\"&\"),b=b.replace(\"&\",\"&amp;\")));c={fill:c,\"font-family\":d,\"font-size\":e,opacity:h};!0===g&&(c[\"font-weight\"]=\"bold\");c[\"text-anchor\"]=f;return a.text(b,c)};","AmCharts.polygon=function(a,b,c,d,e,f,g,h,k,l,m){isNaN(f)&&(f=.01);isNaN(h)&&(h=e);var n=d,p=!1;\"object\"==typeof n&&1<n.length&&(p=!0,n=n[0]);void 0===g&&(g=n);e={fill:n,stroke:g,\"fill-opacity\":e,\"stroke-width\":f,\"stroke-opacity\":h};void 0!==m&&0<m&&(e[\"stroke-dasharray\"]=m);m=AmCharts.dx;f=AmCharts.dy;a.handDrawn&&(c=AmCharts.makeHD(b,c,a.handDrawScatter),b=c[0],c=c[1]);g=Math.round;l&&(g=AmCharts.doNothing);l=\"M\"+(g(b[0])+m)+\",\"+(g(c[0])+f);for(h=1;h<b.length;h++)l+=\" L\"+(g(b[h])+m)+\",\"+(g(c[h])+","f);a=a.path(l+\" Z\").attr(e);p&&a.gradient(\"linearGradient\",d,k);return a};","AmCharts.rect=function(a,b,c,d,e,f,g,h,k,l,m){isNaN(f)&&(f=0);void 0===k&&(k=0);void 0===l&&(l=270);isNaN(e)&&(e=0);var n=d,p=!1;\"object\"==typeof n&&(n=n[0],p=!0);void 0===g&&(g=n);void 0===h&&(h=e);b=Math.round(b);c=Math.round(c);var q=0,r=0;0>b&&(b=Math.abs(b),q=-b);0>c&&(c=Math.abs(c),r=-c);q+=AmCharts.dx;r+=AmCharts.dy;e={fill:n,stroke:g,\"fill-opacity\":e,\"stroke-opacity\":h};void 0!==m&&0<m&&(e[\"stroke-dasharray\"]=m);a=a.rect(q,r,b,c,k,f).attr(e);p&&a.gradient(\"linearGradient\",d,l);return a};","AmCharts.bullet=function(a,b,c,d,e,f,g,h,k,l,m){var n;\"circle\"==b&&(b=\"round\");switch(b){case \"round\":n=AmCharts.circle(a,c/2,d,e,f,g,h);break;case \"square\":n=AmCharts.polygon(a,[-c/2,c/2,c/2,-c/2],[c/2,c/2,-c/2,-c/2],d,e,f,g,h,l-180);break;case \"rectangle\":n=AmCharts.polygon(a,[-c,c,c,-c],[c/2,c/2,-c/2,-c/2],d,e,f,g,h,l-180);break;case \"diamond\":n=AmCharts.polygon(a,[-c/2,0,c/2,0],[0,-c/2,0,c/2],d,e,f,g,h);break;case \"triangleUp\":n=AmCharts.triangle(a,c,0,d,e,f,g,h);break;case \"triangleDown\":n=AmCharts.triangle(a,","c,180,d,e,f,g,h);break;case \"triangleLeft\":n=AmCharts.triangle(a,c,270,d,e,f,g,h);break;case \"triangleRight\":n=AmCharts.triangle(a,c,90,d,e,f,g,h);break;case \"bubble\":n=AmCharts.circle(a,c/2,d,e,f,g,h,!0);break;case \"line\":n=AmCharts.line(a,[-c/2,c/2],[0,0],d,e,f,g,h);break;case \"yError\":n=a.set();n.push(AmCharts.line(a,[0,0],[-c/2,c/2],d,e,f));n.push(AmCharts.line(a,[-k,k],[-c/2,-c/2],d,e,f));n.push(AmCharts.line(a,[-k,k],[c/2,c/2],d,e,f));break;case \"xError\":n=a.set(),n.push(AmCharts.line(a,[-c/","2,c/2],[0,0],d,e,f)),n.push(AmCharts.line(a,[-c/2,-c/2],[-k,k],d,e,f)),n.push(AmCharts.line(a,[c/2,c/2],[-k,k],d,e,f))}n&&n.pattern(m);return n};","AmCharts.triangle=function(a,b,c,d,e,f,g,h){if(void 0===f||0===f)f=1;void 0===g&&(g=\"#000\");void 0===h&&(h=0);d={fill:d,stroke:g,\"fill-opacity\":e,\"stroke-width\":f,\"stroke-opacity\":h};b/=2;var k;0===c&&(k=\" M\"+-b+\",\"+b+\" L0,\"+-b+\" L\"+b+\",\"+b+\" Z\");180==c&&(k=\" M\"+-b+\",\"+-b+\" L0,\"+b+\" L\"+b+\",\"+-b+\" Z\");90==c&&(k=\" M\"+-b+\",\"+-b+\" L\"+b+\",0 L\"+-b+\",\"+b+\" Z\");270==c&&(k=\" M\"+-b+\",0 L\"+b+\",\"+b+\" L\"+b+\",\"+-b+\" Z\");return a.path(k).attr(d)};","AmCharts.line=function(a,b,c,d,e,f,g,h,k,l,m){if(a.handDrawn&&!m)return AmCharts.handDrawnLine(a,b,c,d,e,f,g,h,k,l,m);f={fill:\"none\",\"stroke-width\":f};void 0!==g&&0<g&&(f[\"stroke-dasharray\"]=g);isNaN(e)||(f[\"stroke-opacity\"]=e);d&&(f.stroke=d);d=Math.round;l&&(d=AmCharts.doNothing);l=AmCharts.dx;e=AmCharts.dy;g=\"M\"+(d(b[0])+l)+\",\"+(d(c[0])+e);for(h=1;h<b.length;h++)g+=\" L\"+(d(b[h])+l)+\",\"+(d(c[h])+e);if(AmCharts.VML)return a.path(g,void 0,!0).attr(f);k&&(g+=\" M0,0 L0,0\");return a.path(g).attr(f)};","AmCharts.makeHD=function(a,b,c){for(var d=[],e=[],f=1;f<a.length;f++)for(var g=Number(a[f-1]),h=Number(b[f-1]),k=Number(a[f]),l=Number(b[f]),m=Math.sqrt(Math.pow(k-g,2)+Math.pow(l-h,2)),m=Math.round(m/50)+1,k=(k-g)/m,l=(l-h)/m,n=0;n<=m;n++){var p=g+n*k+Math.random()*c,q=h+n*l+Math.random()*c;d.push(p);e.push(q)}return[d,e]};","AmCharts.handDrawnLine=function(a,b,c,d,e,f,g,h,k,l,m){var n=a.set();for(m=1;m<b.length;m++)for(var p=[b[m-1],b[m]],q=[c[m-1],c[m]],q=AmCharts.makeHD(p,q,a.handDrawScatter),p=q[0],q=q[1],r=1;r<p.length;r++)n.push(AmCharts.line(a,[p[r-1],p[r]],[q[r-1],q[r]],d,e,f+Math.random()*a.handDrawThickness-a.handDrawThickness/2,g,h,k,l,!0));return n};AmCharts.doNothing=function(a){return a};","AmCharts.wedge=function(a,b,c,d,e,f,g,h,k,l,m,n){var p=Math.round;f=p(f);g=p(g);h=p(h);var q=p(g/f*h),r=AmCharts.VML,s=359.5+f/100;359.94<s&&(s=359.94);e>=s&&(e=s);var w=1/180*Math.PI,s=b+Math.sin(d*w)*h,v=c-Math.cos(d*w)*q,t=b+Math.sin(d*w)*f,u=c-Math.cos(d*w)*g,x=b+Math.sin((d+e)*w)*f,E=c-Math.cos((d+e)*w)*g,A=b+Math.sin((d+e)*w)*h,w=c-Math.cos((d+e)*w)*q,z={fill:AmCharts.adjustLuminosity(l.fill,-.2),\"stroke-opacity\":0,\"fill-opacity\":l[\"fill-opacity\"]},H=0;180<Math.abs(e)&&(H=1);d=a.set();var F;","r&&(s=p(10*s),t=p(10*t),x=p(10*x),A=p(10*A),v=p(10*v),u=p(10*u),E=p(10*E),w=p(10*w),b=p(10*b),k=p(10*k),c=p(10*c),f*=10,g*=10,h*=10,q*=10,1>Math.abs(e)&&1>=Math.abs(x-t)&&1>=Math.abs(E-u)&&(F=!0));e=\"\";var G;n&&(z[\"fill-opacity\"]=0,z[\"stroke-opacity\"]=l[\"stroke-opacity\"]/2,z.stroke=l.stroke);0<k&&(G=\" M\"+s+\",\"+(v+k)+\" L\"+t+\",\"+(u+k),r?(F||(G+=\" A\"+(b-f)+\",\"+(k+c-g)+\",\"+(b+f)+\",\"+(k+c+g)+\",\"+t+\",\"+(u+k)+\",\"+x+\",\"+(E+k)),G+=\" L\"+A+\",\"+(w+k),0<h&&(F||(G+=\" B\"+(b-h)+\",\"+(k+c-q)+\",\"+(b+h)+\",\"+(k+c+q)+","\",\"+A+\",\"+(k+w)+\",\"+s+\",\"+(k+v)))):(G+=\" A\"+f+\",\"+g+\",0,\"+H+\",1,\"+x+\",\"+(E+k)+\" L\"+A+\",\"+(w+k),0<h&&(G+=\" A\"+h+\",\"+q+\",0,\"+H+\",0,\"+s+\",\"+(v+k))),G=a.path(G+\" Z\",void 0,void 0,\"1000,1000\").attr(z),d.push(G),G=a.path(\" M\"+s+\",\"+v+\" L\"+s+\",\"+(v+k)+\" L\"+t+\",\"+(u+k)+\" L\"+t+\",\"+u+\" L\"+s+\",\"+v+\" Z\",void 0,void 0,\"1000,1000\").attr(z),k=a.path(\" M\"+x+\",\"+E+\" L\"+x+\",\"+(E+k)+\" L\"+A+\",\"+(w+k)+\" L\"+A+\",\"+w+\" L\"+x+\",\"+E+\" Z\",void 0,void 0,\"1000,1000\").attr(z),d.push(G),d.push(k));r?(F||(e=\" A\"+p(b-f)+\",\"+p(c-g)+","\",\"+p(b+f)+\",\"+p(c+g)+\",\"+p(t)+\",\"+p(u)+\",\"+p(x)+\",\"+p(E)),f=\" M\"+p(s)+\",\"+p(v)+\" L\"+p(t)+\",\"+p(u)+e+\" L\"+p(A)+\",\"+p(w)):f=\" M\"+s+\",\"+v+\" L\"+t+\",\"+u+(\" A\"+f+\",\"+g+\",0,\"+H+\",1,\"+x+\",\"+E)+\" L\"+A+\",\"+w;0<h&&(r?F||(f+=\" B\"+(b-h)+\",\"+(c-q)+\",\"+(b+h)+\",\"+(c+q)+\",\"+A+\",\"+w+\",\"+s+\",\"+v):f+=\" A\"+h+\",\"+q+\",0,\"+H+\",0,\"+s+\",\"+v);a.handDrawn&&(b=AmCharts.line(a,[s,t],[v,u],l.stroke,l.thickness*Math.random()*a.handDrawThickness,l[\"stroke-opacity\"]),d.push(b));a=a.path(f+\" Z\",void 0,void 0,\"1000,1000\").attr(l);","if(m){b=[];for(c=0;c<m.length;c++)b.push(AmCharts.adjustLuminosity(l.fill,m[c]));0<b.length&&a.gradient(\"linearGradient\",b)}a.pattern(n);d.push(a);return d};AmCharts.adjustLuminosity=function(a,b){a=String(a).replace(/[^0-9a-f]/gi,\"\");6>a.length&&(a=String(a[0])+String(a[0])+String(a[1])+String(a[1])+String(a[2])+String(a[2]));b=b||0;var c=\"#\",d,e;for(e=0;3>e;e++)d=parseInt(a.substr(2*e,2),16),d=Math.round(Math.min(Math.max(0,d+d*b),255)).toString(16),c+=(\"00\"+d).substr(d.length);return c};AmCharts.Bezier=AmCharts.Class({construct:function(a,b,c,d,e,f,g,h,k,l){\"object\"==typeof g&&(g=g[0]);\"object\"==typeof h&&(h=h[0]);f={fill:g,\"fill-opacity\":h,\"stroke-width\":f};void 0!==k&&0<k&&(f[\"stroke-dasharray\"]=k);isNaN(e)||(f[\"stroke-opacity\"]=e);d&&(f.stroke=d);d=\"M\"+Math.round(b[0])+\",\"+Math.round(c[0]);e=[];for(k=0;k<b.length;k++)e.push({x:Number(b[k]),y:Number(c[k])});1<e.length&&(b=this.interpolate(e),d+=this.drawBeziers(b));l?d+=l:AmCharts.VML||(d+=\"M0,0 L0,0\");this.path=a.path(d).attr(f)},","interpolate:function(a){var b=[];b.push({x:a[0].x,y:a[0].y});var c=a[1].x-a[0].x,d=a[1].y-a[0].y,e=AmCharts.bezierX,f=AmCharts.bezierY;b.push({x:a[0].x+c/e,y:a[0].y+d/f});var g;for(g=1;g<a.length-1;g++){var h=a[g-1],k=a[g],d=a[g+1];isNaN(d.x)&&(d=k);isNaN(k.x)&&(k=h);isNaN(h.x)&&(h=k);c=d.x-k.x;d=d.y-h.y;h=k.x-h.x;h>c&&(h=c);b.push({x:k.x-h/e,y:k.y-d/f});b.push({x:k.x,y:k.y});b.push({x:k.x+h/e,y:k.y+d/f})}d=a[a.length-1].y-a[a.length-2].y;c=a[a.length-1].x-a[a.length-2].x;b.push({x:a[a.length-1].x-","c/e,y:a[a.length-1].y-d/f});b.push({x:a[a.length-1].x,y:a[a.length-1].y});return b},drawBeziers:function(a){var b=\"\",c;for(c=0;c<(a.length-1)/3;c++)b+=this.drawBezierMidpoint(a[3*c],a[3*c+1],a[3*c+2],a[3*c+3]);return b},drawBezierMidpoint:function(a,b,c,d){var e=Math.round,f=this.getPointOnSegment(a,b,.75),g=this.getPointOnSegment(d,c,.75),h=(d.x-a.x)/16,k=(d.y-a.y)/16,l=this.getPointOnSegment(a,b,.375);a=this.getPointOnSegment(f,g,.375);a.x-=h;a.y-=k;b=this.getPointOnSegment(g,f,.375);b.x+=h;b.y+=","k;c=this.getPointOnSegment(d,c,.375);h=this.getMiddle(l,a);f=this.getMiddle(f,g);g=this.getMiddle(b,c);l=\" Q\"+e(l.x)+\",\"+e(l.y)+\",\"+e(h.x)+\",\"+e(h.y);l+=\" Q\"+e(a.x)+\",\"+e(a.y)+\",\"+e(f.x)+\",\"+e(f.y);l+=\" Q\"+e(b.x)+\",\"+e(b.y)+\",\"+e(g.x)+\",\"+e(g.y);return l+=\" Q\"+e(c.x)+\",\"+e(c.y)+\",\"+e(d.x)+\",\"+e(d.y)},getMiddle:function(a,b){return{x:(a.x+b.x)/2,y:(a.y+b.y)/2}},getPointOnSegment:function(a,b,c){return{x:a.x+(b.x-a.x)*c,y:a.y+(b.y-a.y)*c}}});AmCharts.AmDraw=AmCharts.Class({construct:function(a,b,c,d){AmCharts.SVG_NS=\"http://www.w3.org/2000/svg\";AmCharts.SVG_XLINK=\"http://www.w3.org/1999/xlink\";AmCharts.hasSVG=!!document.createElementNS&&!!document.createElementNS(AmCharts.SVG_NS,\"svg\").createSVGRect;1>b&&(b=10);1>c&&(c=10);this.div=a;this.width=b;this.height=c;this.rBin=document.createElement(\"div\");if(AmCharts.hasSVG){AmCharts.SVG=!0;var e=this.createSvgElement(\"svg\");e.style.position=\"absolute\";e.style.width=b+\"px\";e.style.height=c+","\"px\";b=this.createSvgElement(\"desc\");b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \"+d.version));e.appendChild(b);AmCharts.rtl&&(e.setAttribute(\"direction\",\"rtl\"),e.style.left=\"auto\",e.style.right=\"0px\");e.setAttribute(\"version\",\"1.1\");a.appendChild(e);this.container=e;this.R=new AmCharts.SVGRenderer(this)}else AmCharts.isIE&&AmCharts.VMLRenderer&&(AmCharts.VML=!0,AmCharts.vmlStyleSheet||(document.namespaces.add(\"amvml\",\"urn:schemas-microsoft-com:vml\"),31>document.styleSheets.length?","(e=document.createStyleSheet(),e.addRule(\".amvml\",\"behavior:url(#default#VML); display:inline-block; antialias:true\"),AmCharts.vmlStyleSheet=e):document.styleSheets[0].addRule(\".amvml\",\"behavior:url(#default#VML); display:inline-block; antialias:true\")),this.container=a,this.R=new AmCharts.VMLRenderer(this,d),this.R.disableSelection(a))},createSvgElement:function(a){return document.createElementNS(AmCharts.SVG_NS,a)},circle:function(a,b,c,d){var e=new AmCharts.AmDObject(\"circle\",this);e.attr({r:c,","cx:a,cy:b});this.addToContainer(e.node,d);return e},ellipse:function(a,b,c,d,e){var f=new AmCharts.AmDObject(\"ellipse\",this);f.attr({rx:c,ry:d,cx:a,cy:b});this.addToContainer(f.node,e);return f},setSize:function(a,b){0<a&&0<b&&(this.container.style.width=a+\"px\",this.container.style.height=b+\"px\")},rect:function(a,b,c,d,e,f,g){var h=new AmCharts.AmDObject(\"rect\",this);AmCharts.VML&&(e=Math.round(100*e/Math.min(c,d)),c+=2*f,d+=2*f,h.bw=f,h.node.style.marginLeft=-f,h.node.style.marginTop=-f);1>c&&(c=","1);1>d&&(d=1);h.attr({x:a,y:b,width:c,height:d,rx:e,ry:e,\"stroke-width\":f});this.addToContainer(h.node,g);return h},image:function(a,b,c,d,e,f){var g=new AmCharts.AmDObject(\"image\",this);g.attr({x:b,y:c,width:d,height:e});this.R.path(g,a);this.addToContainer(g.node,f);return g},addToContainer:function(a,b){b||(b=this.container);b.appendChild(a)},text:function(a,b,c){return this.R.text(a,b,c)},path:function(a,b,c,d){var e=new AmCharts.AmDObject(\"path\",this);d||(d=\"100,100\");e.attr({cs:d});c?e.attr({dd:a}):","e.attr({d:a});this.addToContainer(e.node,b);return e},set:function(a){return this.R.set(a)},remove:function(a){if(a){var b=this.rBin;b.appendChild(a);b.innerHTML=\"\"}},renderFix:function(){var a=this.container,b=a.style,c;try{c=a.getScreenCTM()||a.createSVGMatrix()}catch(d){c=a.createSVGMatrix()}a=1-c.e%1;c=1-c.f%1;.5<a&&(a-=1);.5<c&&(c-=1);a&&(b.left=a+\"px\");c&&(b.top=c+\"px\")},update:function(){this.R.update()}});AmCharts.AmDObject=AmCharts.Class({construct:function(a,b){this.D=b;this.R=b.R;this.node=this.R.create(this,a);this.y=this.x=0;this.scale=1},attr:function(a){this.R.attr(this,a);return this},getAttr:function(a){return this.node.getAttribute(a)},setAttr:function(a,b){this.R.setAttr(this,a,b);return this},clipRect:function(a,b,c,d){this.R.clipRect(this,a,b,c,d)},translate:function(a,b,c,d){d||(a=Math.round(a),b=Math.round(b));this.R.move(this,a,b,c);this.x=a;this.y=b;this.scale=c;this.angle&&this.rotate(this.angle)},","rotate:function(a,b){this.R.rotate(this,a,b);this.angle=a},animate:function(a,b,c){for(var d in a)if(a.hasOwnProperty(d)){var e=d,f=a[d];c=AmCharts.getEffect(c);this.R.animate(this,e,f,b,c)}},push:function(a){if(a){var b=this.node;b.appendChild(a.node);var c=a.clipPath;c&&b.appendChild(c);(a=a.grad)&&b.appendChild(a)}},text:function(a){this.R.setText(this,a)},remove:function(){this.R.remove(this)},clear:function(){var a=this.node;if(a.hasChildNodes())for(;1<=a.childNodes.length;)a.removeChild(a.firstChild)},","hide:function(){this.setAttr(\"visibility\",\"hidden\")},show:function(){this.setAttr(\"visibility\",\"visible\")},getBBox:function(){return this.R.getBBox(this)},toFront:function(){var a=this.node;if(a){this.prevNextNode=a.nextSibling;var b=a.parentNode;b&&b.appendChild(a)}},toPrevious:function(){var a=this.node;a&&this.prevNextNode&&(a=a.parentNode)&&a.insertBefore(this.prevNextNode,null)},toBack:function(){var a=this.node;if(a){this.prevNextNode=a.nextSibling;var b=a.parentNode;if(b){var c=b.firstChild;","c&&b.insertBefore(a,c)}}},mouseover:function(a){this.R.addListener(this,\"mouseover\",a);return this},mouseout:function(a){this.R.addListener(this,\"mouseout\",a);return this},click:function(a){this.R.addListener(this,\"click\",a);return this},dblclick:function(a){this.R.addListener(this,\"dblclick\",a);return this},mousedown:function(a){this.R.addListener(this,\"mousedown\",a);return this},mouseup:function(a){this.R.addListener(this,\"mouseup\",a);return this},touchstart:function(a){this.R.addListener(this,","\"touchstart\",a);return this},touchend:function(a){this.R.addListener(this,\"touchend\",a);return this},contextmenu:function(a){this.node.addEventListener?this.node.addEventListener(\"contextmenu\",a,!0):this.R.addListener(this,\"contextmenu\",a);return this},stop:function(a){(a=this.animationX)&&AmCharts.removeFromArray(this.R.animations,a);(a=this.animationY)&&AmCharts.removeFromArray(this.R.animations,a)},length:function(){return this.node.childNodes.length},gradient:function(a,b,c){this.R.gradient(this,","a,b,c)},pattern:function(a,b){a&&this.R.pattern(this,a,b)}});AmCharts.VMLRenderer=AmCharts.Class({construct:function(a,b){this.chart=b;this.D=a;this.cNames={circle:\"oval\",ellipse:\"oval\",rect:\"roundrect\",path:\"shape\"};this.styleMap={x:\"left\",y:\"top\",width:\"width\",height:\"height\",\"font-family\":\"fontFamily\",\"font-size\":\"fontSize\",visibility:\"visibility\"}},create:function(a,b){var c;if(\"group\"==b)c=document.createElement(\"div\"),a.type=\"div\";else if(\"text\"==b)c=document.createElement(\"div\"),a.type=\"text\";else if(\"image\"==b)c=document.createElement(\"img\"),a.type=","\"image\";else{a.type=\"shape\";a.shapeType=this.cNames[b];c=document.createElement(\"amvml:\"+this.cNames[b]);var d=document.createElement(\"amvml:stroke\");c.appendChild(d);a.stroke=d;var e=document.createElement(\"amvml:fill\");c.appendChild(e);a.fill=e;e.className=\"amvml\";d.className=\"amvml\";c.className=\"amvml\"}c.style.position=\"absolute\";c.style.top=0;c.style.left=0;return c},path:function(a,b){a.node.setAttribute(\"src\",b)},setAttr:function(a,b,c){if(void 0!==c){var d;8===document.documentMode&&(d=!0);","var e=a.node,f=a.type,g=e.style;\"r\"==b&&(g.width=2*c,g.height=2*c);\"oval\"==a.shapeType&&(\"rx\"==b&&(g.width=2*c),\"ry\"==b&&(g.height=2*c));\"roundrect\"!=a.shapeType||\"width\"!=b&&\"height\"!=b||(c-=1);\"cursor\"==b&&(g.cursor=c);\"cx\"==b&&(g.left=c-AmCharts.removePx(g.width)/2);\"cy\"==b&&(g.top=c-AmCharts.removePx(g.height)/2);var h=this.styleMap[b];void 0!==h&&(g[h]=c);\"text\"==f&&(\"text-anchor\"==b&&(a.anchor=c,h=e.clientWidth,\"end\"==c&&(g.marginLeft=-h+\"px\"),\"middle\"==c&&(g.marginLeft=-(h/2)+\"px\",g.textAlign=","\"center\"),\"start\"==c&&(g.marginLeft=\"0px\")),\"fill\"==b&&(g.color=c),\"font-weight\"==b&&(g.fontWeight=c));if(g=a.children)for(h=0;h<g.length;h++)g[h].setAttr(b,c);if(\"shape\"==f){\"cs\"==b&&(e.style.width=\"100px\",e.style.height=\"100px\",e.setAttribute(\"coordsize\",c));\"d\"==b&&e.setAttribute(\"path\",this.svgPathToVml(c));\"dd\"==b&&e.setAttribute(\"path\",c);f=a.stroke;a=a.fill;\"stroke\"==b&&(d?f.color=c:f.setAttribute(\"color\",c));\"stroke-width\"==b&&(d?f.weight=c:f.setAttribute(\"weight\",c));\"stroke-opacity\"==b&&","(d?f.opacity=c:f.setAttribute(\"opacity\",c));\"stroke-dasharray\"==b&&(g=\"solid\",0<c&&3>c&&(g=\"dot\"),3<=c&&6>=c&&(g=\"dash\"),6<c&&(g=\"longdash\"),d?f.dashstyle=g:f.setAttribute(\"dashstyle\",g));if(\"fill-opacity\"==b||\"opacity\"==b)0===c?d?a.on=!1:a.setAttribute(\"on\",!1):d?a.opacity=c:a.setAttribute(\"opacity\",c);\"fill\"==b&&(d?a.color=c:a.setAttribute(\"color\",c));\"rx\"==b&&(d?e.arcSize=c+\"%\":e.setAttribute(\"arcsize\",c+\"%\"))}}},attr:function(a,b){for(var c in b)b.hasOwnProperty(c)&&this.setAttr(a,c,b[c])},text:function(a,","b,c){var d=new AmCharts.AmDObject(\"text\",this.D),e=d.node;e.style.whiteSpace=\"pre\";e.innerHTML=a;this.D.addToContainer(e,c);this.attr(d,b);return d},getBBox:function(a){return this.getBox(a.node)},getBox:function(a){var b=a.offsetLeft,c=a.offsetTop,d=a.offsetWidth,e=a.offsetHeight,f;if(a.hasChildNodes()){var g,h,k;for(k=0;k<a.childNodes.length;k++){f=this.getBox(a.childNodes[k]);var l=f.x;isNaN(l)||(isNaN(g)?g=l:l<g&&(g=l));var m=f.y;isNaN(m)||(isNaN(h)?h=m:m<h&&(h=m));l=f.width+l;isNaN(l)||(d=Math.max(d,","l));f=f.height+m;isNaN(f)||(e=Math.max(e,f))}0>g&&(b+=g);0>h&&(c+=h)}return{x:b,y:c,width:d,height:e}},setText:function(a,b){var c=a.node;c&&(c.innerHTML=b);this.setAttr(a,\"text-anchor\",a.anchor)},addListener:function(a,b,c){a.node[\"on\"+b]=c},move:function(a,b,c){var d=a.node,e=d.style;\"text\"==a.type&&(c-=AmCharts.removePx(e.fontSize)/2-1);\"oval\"==a.shapeType&&(b-=AmCharts.removePx(e.width)/2,c-=AmCharts.removePx(e.height)/2);a=a.bw;isNaN(a)||(b-=a,c-=a);isNaN(b)||isNaN(c)||(d.style.left=b+\"px\",d.style.top=","c+\"px\")},svgPathToVml:function(a){var b=a.split(\" \");a=\"\";var c,d=Math.round,e;for(e=0;e<b.length;e++){var f=b[e],g=f.substring(0,1),f=f.substring(1),h=f.split(\",\"),k=d(h[0])+\",\"+d(h[1]);\"M\"==g&&(a+=\" m \"+k);\"L\"==g&&(a+=\" l \"+k);\"Z\"==g&&(a+=\" x e\");if(\"Q\"==g){var l=c.length,m=c[l-1],n=h[0],p=h[1],k=h[2],q=h[3];c=d(c[l-2]/3+2/3*n);m=d(m/3+2/3*p);n=d(2/3*n+k/3);p=d(2/3*p+q/3);a+=\" c \"+c+\",\"+m+\",\"+n+\",\"+p+\",\"+k+\",\"+q}\"A\"==g&&(a+=\" wa \"+f);\"B\"==g&&(a+=\" at \"+f);c=h}return a},animate:function(a,b,c,d,","e){var f=a.node,g=this.chart;if(\"translate\"==b){b=c.split(\",\");c=b[1];var h=f.offsetTop;g.animate(a,\"left\",f.offsetLeft,b[0],d,e,\"px\");g.animate(a,\"top\",h,c,d,e,\"px\")}},clipRect:function(a,b,c,d,e){a=a.node;0===b&&0===c?(a.style.width=d+\"px\",a.style.height=e+\"px\",a.style.overflow=\"hidden\"):a.style.clip=\"rect(\"+c+\"px \"+(b+d)+\"px \"+(c+e)+\"px \"+b+\"px)\"},rotate:function(a,b,c){if(0!==Number(b)){var d=a.node;a=d.style;c||(c=this.getBGColor(d.parentNode));a.backgroundColor=c;a.paddingLeft=1;c=b*Math.PI/","180;var e=Math.cos(c),f=Math.sin(c),g=AmCharts.removePx(a.left),h=AmCharts.removePx(a.top),k=d.offsetWidth,d=d.offsetHeight;b/=Math.abs(b);a.left=g+k/2-k/2*Math.cos(c)-b*d/2*Math.sin(c)+3;a.top=h-b*k/2*Math.sin(c)+b*d/2*Math.sin(c);a.cssText=a.cssText+\"; filter:progid:DXImageTransform.Microsoft.Matrix(M11='\"+e+\"', M12='\"+-f+\"', M21='\"+f+\"', M22='\"+e+\"', sizingmethod='auto expand');\"}},getBGColor:function(a){var b=\"#FFFFFF\";if(a.style){var c=a.style.backgroundColor;\"\"!==c?b=c:a.parentNode&&(b=this.getBGColor(a.parentNode))}return b},","set:function(a){var b=new AmCharts.AmDObject(\"group\",this.D);this.D.container.appendChild(b.node);if(a){var c;for(c=0;c<a.length;c++)b.push(a[c])}return b},gradient:function(a,b,c,d){var e=\"\";\"radialGradient\"==b&&(b=\"gradientradial\",c.reverse());\"linearGradient\"==b&&(b=\"gradient\");var f;for(f=0;f<c.length;f++){var g=Math.round(100*f/(c.length-1)),e=e+(g+\"% \"+c[f]);f<c.length-1&&(e+=\",\")}a=a.fill;90==d?d=0:270==d?d=180:180==d?d=90:0===d&&(d=270);8===document.documentMode?(a.type=b,a.angle=d):(a.setAttribute(\"type\",","b),a.setAttribute(\"angle\",d));e&&(a.colors.value=e)},remove:function(a){a.clipPath&&this.D.remove(a.clipPath);this.D.remove(a.node)},disableSelection:function(a){void 0!==typeof a.onselectstart&&(a.onselectstart=function(){return!1});a.style.cursor=\"default\"},pattern:function(a,b){var c=a.node,d=a.fill,e=\"none\";b.color&&(e=b.color);c.fillColor=e;8===document.documentMode?(d.type=\"tile\",d.src=b.url):(d.setAttribute(\"type\",\"tile\"),d.setAttribute(\"src\",b.url))},update:function(){}});AmCharts.SVGRenderer=AmCharts.Class({construct:function(a){this.D=a;this.animations=[]},create:function(a,b){return document.createElementNS(AmCharts.SVG_NS,b)},attr:function(a,b){for(var c in b)b.hasOwnProperty(c)&&this.setAttr(a,c,b[c])},setAttr:function(a,b,c){void 0!==c&&a.node.setAttribute(b,c)},animate:function(a,b,c,d,e){var f=a.node;a[\"an_\"+b]&&AmCharts.removeFromArray(this.animations,a[\"an_\"+b]);\"translate\"==b?(f=(f=f.getAttribute(\"transform\"))?String(f).substring(10,f.length-1):\"0,0\",f=","f.split(\", \").join(\" \"),f=f.split(\" \").join(\",\"),0===f&&(f=\"0,0\")):f=Number(f.getAttribute(b));c={obj:a,frame:0,attribute:b,from:f,to:c,time:d,effect:e};this.animations.push(c);a[\"an_\"+b]=c},update:function(){var a,b=this.animations;for(a=b.length-1;0<=a;a--){var c=b[a],d=1E3*c.time/AmCharts.updateRate,e=c.frame+1,f=c.obj,g=c.attribute,h,k,l;e<=d?(c.frame++,\"translate\"==g?(h=c.from.split(\",\"),g=Number(h[0]),h=Number(h[1]),isNaN(h)&&(h=0),k=c.to.split(\",\"),l=Number(k[0]),k=Number(k[1]),l=0===l-g?l:","Math.round(AmCharts[c.effect](0,e,g,l-g,d)),c=0===k-h?k:Math.round(AmCharts[c.effect](0,e,h,k-h,d)),g=\"transform\",c=\"translate(\"+l+\",\"+c+\")\"):(k=Number(c.from),h=Number(c.to),l=h-k,c=AmCharts[c.effect](0,e,k,l,d),isNaN(c)&&(c=h),0===l&&this.animations.splice(a,1)),this.setAttr(f,g,c)):(\"translate\"==g?(k=c.to.split(\",\"),l=Number(k[0]),k=Number(k[1]),f.translate(l,k)):(h=Number(c.to),this.setAttr(f,g,h)),this.animations.splice(a,1))}},getBBox:function(a){if(a=a.node)try{return a.getBBox()}catch(b){}return{width:0,","height:0,x:0,y:0}},path:function(a,b){a.node.setAttributeNS(AmCharts.SVG_XLINK,\"xlink:href\",b)},clipRect:function(a,b,c,d,e){var f=a.node,g=a.clipPath;g&&this.D.remove(g);var h=f.parentNode;h&&(f=document.createElementNS(AmCharts.SVG_NS,\"clipPath\"),g=AmCharts.getUniqueId(),f.setAttribute(\"id\",g),this.D.rect(b,c,d,e,0,0,f),h.appendChild(f),b=\"#\",AmCharts.baseHref&&!AmCharts.isIE&&(b=window.location.href+b),this.setAttr(a,\"clip-path\",\"url(\"+b+g+\")\"),this.clipPathC++,a.clipPath=f)},text:function(a,b,","c){var d=new AmCharts.AmDObject(\"text\",this.D);a=String(a).split(\"\\n\");var e=b[\"font-size\"],f;for(f=0;f<a.length;f++){var g=this.create(null,\"tspan\");g.appendChild(document.createTextNode(a[f]));g.setAttribute(\"y\",(e+2)*f+Math.round(e/2));g.setAttribute(\"x\",0);d.node.appendChild(g)}d.node.setAttribute(\"y\",Math.round(e/2));this.attr(d,b);this.D.addToContainer(d.node,c);return d},setText:function(a,b){var c=a.node;c&&(c.removeChild(c.firstChild),c.appendChild(document.createTextNode(b)))},move:function(a,","b,c,d){b=\"translate(\"+b+\",\"+c+\")\";d&&(b=b+\" scale(\"+d+\")\");this.setAttr(a,\"transform\",b)},rotate:function(a,b){var c=a.node.getAttribute(\"transform\"),d=\"rotate(\"+b+\")\";c&&(d=c+\" \"+d);this.setAttr(a,\"transform\",d)},set:function(a){var b=new AmCharts.AmDObject(\"g\",this.D);this.D.container.appendChild(b.node);if(a){var c;for(c=0;c<a.length;c++)b.push(a[c])}return b},addListener:function(a,b,c){a.node[\"on\"+b]=c},gradient:function(a,b,c,d){var e=a.node,f=a.grad;f&&this.D.remove(f);b=document.createElementNS(AmCharts.SVG_NS,","b);f=AmCharts.getUniqueId();b.setAttribute(\"id\",f);if(!isNaN(d)){var g=0,h=0,k=0,l=0;90==d?k=100:270==d?l=100:180==d?g=100:0===d&&(h=100);b.setAttribute(\"x1\",g+\"%\");b.setAttribute(\"x2\",h+\"%\");b.setAttribute(\"y1\",k+\"%\");b.setAttribute(\"y2\",l+\"%\")}for(d=0;d<c.length;d++)g=document.createElementNS(AmCharts.SVG_NS,\"stop\"),h=100*d/(c.length-1),0===d&&(h=0),g.setAttribute(\"offset\",h+\"%\"),g.setAttribute(\"stop-color\",c[d]),b.appendChild(g);e.parentNode.appendChild(b);c=\"#\";AmCharts.baseHref&&!AmCharts.isIE&&","(c=window.location.href+c);e.setAttribute(\"fill\",\"url(\"+c+f+\")\");a.grad=b},pattern:function(a,b,c){var d=a.node;isNaN(c)&&(c=1);var e=a.patternNode;e&&this.D.remove(e);var e=document.createElementNS(AmCharts.SVG_NS,\"pattern\"),f=AmCharts.getUniqueId(),g=b;b.url&&(g=b.url);var h=Number(b.width);isNaN(h)&&(h=4);var k=Number(b.height);isNaN(k)&&(k=4);h/=c;k/=c;c=b.x;isNaN(c)&&(c=0);var l=-Math.random()*Number(b.randomX);isNaN(l)||(c=l);l=b.y;isNaN(l)&&(l=0);var m=-Math.random()*Number(b.randomY);isNaN(m)||","(l=m);e.setAttribute(\"id\",f);e.setAttribute(\"width\",h);e.setAttribute(\"height\",k);e.setAttribute(\"patternUnits\",\"userSpaceOnUse\");e.setAttribute(\"xlink:href\",g);b.color&&(m=document.createElementNS(AmCharts.SVG_NS,\"rect\"),m.setAttributeNS(null,\"height\",h),m.setAttributeNS(null,\"width\",k),m.setAttributeNS(null,\"fill\",b.color),e.appendChild(m));this.D.image(g,0,0,h,k,e).translate(c,l);g=\"#\";AmCharts.baseHref&&!AmCharts.isIE&&(g=window.location.href+g);d.setAttribute(\"fill\",\"url(\"+g+f+\")\");a.patternNode=","e;d.parentNode.appendChild(e)},remove:function(a){a.clipPath&&this.D.remove(a.clipPath);a.grad&&this.D.remove(a.grad);a.patternNode&&this.D.remove(a.patternNode);this.D.remove(a.node)}});AmCharts.AmDSet=AmCharts.Class({construct:function(a){this.create(\"g\")},attr:function(a){this.R.attr(this.node,a)},move:function(a,b){this.R.move(this.node,a,b)}});AmCharts.AmLegend=AmCharts.Class({construct:function(a){this.cname=\"AmLegend\";this.createEvents(\"rollOverMarker\",\"rollOverItem\",\"rollOutMarker\",\"rollOutItem\",\"showItem\",\"hideItem\",\"clickMarker\",\"rollOverItem\",\"rollOutItem\",\"clickLabel\");this.position=\"bottom\";this.borderColor=this.color=\"#000000\";this.borderAlpha=0;this.markerLabelGap=5;this.verticalGap=10;this.align=\"left\";this.horizontalGap=0;this.spacing=10;this.markerDisabledColor=\"#AAB3B3\";this.markerType=\"square\";this.markerSize=16;this.markerBorderThickness=","this.markerBorderAlpha=1;this.marginBottom=this.marginTop=0;this.marginLeft=this.marginRight=20;this.autoMargins=!0;this.valueWidth=50;this.switchable=!0;this.switchType=\"x\";this.switchColor=\"#FFFFFF\";this.rollOverColor=\"#CC0000\";this.reversedOrder=!1;this.labelText=\"[[title]]\";this.valueText=\"[[value]]\";this.useMarkerColorForLabels=!1;this.rollOverGraphAlpha=1;this.textClickEnabled=!1;this.equalWidths=!0;this.dateFormat=\"DD-MM-YYYY\";this.backgroundColor=\"#FFFFFF\";this.backgroundAlpha=0;this.useGraphSettings=","!1;this.showEntries=!0;AmCharts.applyTheme(this,a,this.cname)},setData:function(a){this.legendData=a;this.invalidateSize()},invalidateSize:function(){this.destroy();this.entries=[];this.valueLabels=[];(AmCharts.ifArray(this.legendData)||AmCharts.ifArray(this.data))&&this.drawLegend()},drawLegend:function(){var a=this.chart,b=this.position,c=this.width,d=a.divRealWidth,e=a.divRealHeight,f=this.div,g=this.legendData;this.data&&(g=this.data);isNaN(this.fontSize)&&(this.fontSize=a.fontSize);if(\"right\"==","b||\"left\"==b)this.maxColumns=1,this.autoMargins&&(this.marginLeft=this.marginRight=10);else if(this.autoMargins){this.marginRight=a.marginRight;this.marginLeft=a.marginLeft;var h=a.autoMarginOffset;\"bottom\"==b?(this.marginBottom=h,this.marginTop=0):(this.marginTop=h,this.marginBottom=0)}var k;void 0!==c?k=AmCharts.toCoordinate(c,d):\"right\"!=b&&\"left\"!=b&&(k=a.realWidth);\"outside\"==b?(k=f.offsetWidth,e=f.offsetHeight,f.clientHeight&&(k=f.clientWidth,e=f.clientHeight)):(isNaN(k)||(f.style.width=k+\"px\"),","f.className=\"amChartsLegend\");this.divWidth=k;(b=this.container)?(b.container.innerHTML=\"\",f.appendChild(b.container),b.setSize(k,e)):b=new AmCharts.AmDraw(f,k,e,a);this.container=b;this.lx=0;this.ly=8;e=this.markerSize;e>this.fontSize&&(this.ly=e/2-1);0<e&&(this.lx+=e+this.markerLabelGap);this.titleWidth=0;if(e=this.title)a=AmCharts.text(this.container,e,this.color,a.fontFamily,this.fontSize,\"start\",!0),a.translate(this.marginLeft,this.marginTop+this.verticalGap+this.ly+1),a=a.getBBox(),this.titleWidth=","a.width+15,this.titleHeight=a.height+6;this.index=this.maxLabelWidth=0;if(this.showEntries){for(a=0;a<g.length;a++)this.createEntry(g[a]);for(a=this.index=0;a<g.length;a++)this.createValue(g[a])}this.arrangeEntries();this.updateValues()},arrangeEntries:function(){var a=this.position,b=this.marginLeft+this.titleWidth,c=this.marginRight,d=this.marginTop,e=this.marginBottom,f=this.horizontalGap,g=this.div,h=this.divWidth,k=this.maxColumns,l=this.verticalGap,m=this.spacing,n=h-c-b,p=0,q=0,r=this.container;","this.set&&this.set.remove();var s=r.set();this.set=s;r=r.set();s.push(r);var w=this.entries,v,t;for(t=0;t<w.length;t++){v=w[t].getBBox();var u=v.width;u>p&&(p=u);v=v.height;v>q&&(q=v)}var u=q=0,x=f,E=0,A=0;for(t=0;t<w.length;t++){var z=w[t];this.reversedOrder&&(z=w[w.length-t-1]);v=z.getBBox();var H;this.equalWidths?H=f+u*(p+m+this.markerLabelGap):(H=x,x=x+v.width+f+m);v.height>A&&(A=v.height);H+v.width>n&&0<t&&0!==u&&(q++,u=0,H=f,x=H+v.width+f+m,E=E+A+l,A=0);z.translate(H,E);u++;!isNaN(k)&&u>=k&&","(u=0,q++,E=E+A+l,A=0);r.push(z)}v=r.getBBox();k=v.height+2*l-1;\"left\"==a||\"right\"==a?(h=v.width+2*f,g.style.width=h+b+c+\"px\"):h=h-b-c-1;c=AmCharts.polygon(this.container,[0,h,h,0],[0,0,k,k],this.backgroundColor,this.backgroundAlpha,1,this.borderColor,this.borderAlpha);s.push(c);s.translate(b,d);c.toBack();b=f;if(\"top\"==a||\"bottom\"==a||\"absolute\"==a||\"outside\"==a)\"center\"==this.align?b=f+(h-v.width)/2:\"right\"==this.align&&(b=f+h-v.width);r.translate(b,l+1);this.titleHeight>k&&(k=this.titleHeight);","a=k+d+e+1;0>a&&(a=0);g.style.height=Math.round(a)+\"px\"},createEntry:function(a){if(!1!==a.visibleInLegend){var b=this.chart,c=a.markerType;c||(c=this.markerType);var d=a.color,e=a.alpha;a.legendKeyColor&&(d=a.legendKeyColor());a.legendKeyAlpha&&(e=a.legendKeyAlpha());var f;!0===a.hidden&&(f=d=this.markerDisabledColor);var g=a.pattern,h=a.customMarker;h||(h=this.customMarker);var k=this.container,l=this.markerSize,m=0,n=0,p=l/2;if(this.useGraphSettings)if(m=a.type,this.switchType=void 0,\"line\"==m||","\"step\"==m||\"smoothedLine\"==m||\"ohlc\"==m)g=k.set(),a.hidden||(d=a.lineColorR,f=a.bulletBorderColorR),n=AmCharts.line(k,[0,2*l],[l/2,l/2],d,a.lineAlpha,a.lineThickness,a.dashLength),g.push(n),a.bullet&&(a.hidden||(d=a.bulletColorR),n=AmCharts.bullet(k,a.bullet,a.bulletSize,d,a.bulletAlpha,a.bulletBorderThickness,f,a.bulletBorderAlpha))&&(n.translate(l+1,l/2),g.push(n)),p=0,m=l,n=l/3;else{var q;a.getGradRotation&&(q=a.getGradRotation());m=a.fillColorsR;!0===a.hidden&&(m=d);if(g=this.createMarker(\"rectangle\",","m,a.fillAlphas,a.lineThickness,d,a.lineAlpha,q,g))p=l,g.translate(p,l/2);m=l}else h?(b.path&&(h=b.path+h),g=k.image(h,0,0,l,l)):(g=this.createMarker(c,d,e,void 0,void 0,void 0,void 0,g))&&g.translate(l/2,l/2);this.addListeners(g,a);k=k.set([g]);this.switchable&&a.switchable&&k.setAttr(\"cursor\",\"pointer\");(f=this.switchType)&&\"none\"!=f&&(\"x\"==f?(q=this.createX(),q.translate(l/2,l/2)):q=this.createV(),q.dItem=a,!0!==a.hidden?\"x\"==f?q.hide():q.show():\"x\"!=f&&q.hide(),this.switchable||q.hide(),this.addListeners(q,","a),a.legendSwitch=q,k.push(q));f=this.color;a.showBalloon&&this.textClickEnabled&&void 0!==this.selectedColor&&(f=this.selectedColor);this.useMarkerColorForLabels&&(f=d);!0===a.hidden&&(f=this.markerDisabledColor);d=AmCharts.massReplace(this.labelText,{\"[[title]]\":a.title});q=this.fontSize;g&&l<=q&&g.translate(p,l/2+this.ly-q/2+(q+2-l)/2-n);var r;d&&(d=AmCharts.fixBrakes(d),a.legendTextReal=d,r=this.labelWidth,r=isNaN(r)?AmCharts.text(this.container,d,f,b.fontFamily,q,\"start\"):AmCharts.wrappedText(this.container,","d,f,b.fontFamily,q,\"start\",!1,r,0),r.translate(this.lx+m,this.ly),k.push(r),b=r.getBBox().width,this.maxLabelWidth<b&&(this.maxLabelWidth=b));this.entries[this.index]=k;a.legendEntry=this.entries[this.index];a.legendLabel=r;this.index++}},addListeners:function(a,b){var c=this;a&&a.mouseover(function(a){c.rollOverMarker(b,a)}).mouseout(function(a){c.rollOutMarker(b,a)}).click(function(a){c.clickMarker(b,a)})},rollOverMarker:function(a,b){this.switchable&&this.dispatch(\"rollOverMarker\",a,b);this.dispatch(\"rollOverItem\",","a,b)},rollOutMarker:function(a,b){this.switchable&&this.dispatch(\"rollOutMarker\",a,b);this.dispatch(\"rollOutItem\",a,b)},clickMarker:function(a,b){this.switchable&&(!0===a.hidden?this.dispatch(\"showItem\",a,b):this.dispatch(\"hideItem\",a,b));this.dispatch(\"clickMarker\",a,b)},rollOverLabel:function(a,b){a.hidden||(this.textClickEnabled&&a.legendLabel&&a.legendLabel.attr({fill:this.rollOverColor}),this.dispatch(\"rollOverItem\",a,b))},rollOutLabel:function(a,b){if(!a.hidden){if(this.textClickEnabled&&a.legendLabel){var c=","this.color;void 0!==this.selectedColor&&a.showBalloon&&(c=this.selectedColor);this.useMarkerColorForLabels&&(c=a.lineColor,void 0===c&&(c=a.color));a.legendLabel.attr({fill:c})}this.dispatch(\"rollOutItem\",a,b)}},clickLabel:function(a,b){this.textClickEnabled?a.hidden||this.dispatch(\"clickLabel\",a,b):this.switchable&&(!0===a.hidden?this.dispatch(\"showItem\",a,b):this.dispatch(\"hideItem\",a,b))},dispatch:function(a,b,c){this.fire(a,{type:a,dataItem:b,target:this,event:c,chart:this.chart})},createValue:function(a){var b=","this,c=b.fontSize;if(!1!==a.visibleInLegend){var d=b.maxLabelWidth;b.equalWidths||(b.valueAlign=\"left\");\"left\"==b.valueAlign&&(d=a.legendEntry.getBBox().width);var e=d;if(b.valueText&&0<b.valueWidth){var f=b.color;b.useMarkerColorForValues&&(f=a.color,a.legendKeyColor&&(f=a.legendKeyColor()));!0===a.hidden&&(f=b.markerDisabledColor);var g=b.valueText,d=d+b.lx+b.markerLabelGap+b.valueWidth,h=\"end\";\"left\"==b.valueAlign&&(d-=b.valueWidth,h=\"start\");f=AmCharts.text(b.container,g,f,b.chart.fontFamily,","c,h);f.translate(d,b.ly);b.entries[b.index].push(f);e+=b.valueWidth+2*b.markerLabelGap;f.dItem=a;b.valueLabels.push(f)}b.index++;f=b.markerSize;f<c+7&&(f=c+7,AmCharts.VML&&(f+=3));c=b.container.rect(b.markerSize,0,e,f,0,0).attr({stroke:\"none\",fill:\"#ffffff\",\"fill-opacity\":.005});c.dItem=a;b.entries[b.index-1].push(c);c.mouseover(function(c){b.rollOverLabel(a,c)}).mouseout(function(c){b.rollOutLabel(a,c)}).click(function(c){b.clickLabel(a,c)})}},createV:function(){var a=this.markerSize;return AmCharts.polygon(this.container,","[a/5,a/2,a-a/5,a/2],[a/3,a-a/5,a/5,a/1.7],this.switchColor)},createX:function(){var a=(this.markerSize-4)/2,b={stroke:this.switchColor,\"stroke-width\":3},c=this.container,d=AmCharts.line(c,[-a,a],[-a,a]).attr(b),a=AmCharts.line(c,[-a,a],[a,-a]).attr(b);return this.container.set([d,a])},createMarker:function(a,b,c,d,e,f,g,h){var k=this.markerSize,l=this.container;e||(e=this.markerBorderColor);e||(e=b);isNaN(d)&&(d=this.markerBorderThickness);isNaN(f)&&(f=this.markerBorderAlpha);return AmCharts.bullet(l,","a,k,b,c,d,e,f,k,g,h)},validateNow:function(){this.invalidateSize()},updateValues:function(){var a=this.valueLabels,b=this.chart,c,d=this.data;for(c=0;c<a.length;c++){var e=a[c],f=e.dItem,g=\" \";if(d)f.value?e.text(f.value):e.text(\"\");else{if(void 0!==f.type){var h=f.currentDataItem,k=this.periodValueText;f.legendPeriodValueText&&(k=f.legendPeriodValueText);h?(g=this.valueText,f.legendValueText&&(g=f.legendValueText),g=b.formatString(g,h)):k&&(g=b.formatPeriodString(k,f))}else g=b.formatString(this.valueText,","f);if(k=this.valueFunction)h&&(f=h),g=k(f,g);e.text(g)}}},renderFix:function(){if(!AmCharts.VML){var a=this.container;a&&a.renderFix()}},destroy:function(){this.div.innerHTML=\"\";AmCharts.remove(this.set)}});AmCharts.formatMilliseconds=function(a,b){if(-1!=a.indexOf(\"fff\")){var c=b.getMilliseconds(),d=String(c);10>c&&(d=\"00\"+c);10<=c&&100>c&&(d=\"0\"+c);a=a.replace(/fff/g,d)}return a};AmCharts.extractPeriod=function(a){var b=AmCharts.stripNumbers(a),c=1;b!=a&&(c=Number(a.slice(0,a.indexOf(b))));return{period:b,count:c}};","AmCharts.newDate=function(a,b){return date=\"fff\"==b?AmCharts.useUTC?new Date(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate(),a.getUTCHours(),a.getUTCMinutes(),a.getUTCSeconds(),a.getUTCMilliseconds()):new Date(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds(),a.getMilliseconds()):new Date(a)};","AmCharts.resetDateToMin=function(a,b,c,d){void 0===d&&(d=1);var e,f,g,h,k,l,m;AmCharts.useUTC?(e=a.getUTCFullYear(),f=a.getUTCMonth(),g=a.getUTCDate(),h=a.getUTCHours(),k=a.getUTCMinutes(),l=a.getUTCSeconds(),m=a.getUTCMilliseconds(),a=a.getUTCDay()):(e=a.getFullYear(),f=a.getMonth(),g=a.getDate(),h=a.getHours(),k=a.getMinutes(),l=a.getSeconds(),m=a.getMilliseconds(),a=a.getDay());switch(b){case \"YYYY\":e=Math.floor(e/c)*c;f=0;g=1;m=l=k=h=0;break;case \"MM\":f=Math.floor(f/c)*c;g=1;m=l=k=h=0;break;case \"WW\":0===","a&&0<d&&(a=7);g=g-a+d;m=l=k=h=0;break;case \"DD\":m=l=k=h=0;break;case \"hh\":h=Math.floor(h/c)*c;m=l=k=0;break;case \"mm\":k=Math.floor(k/c)*c;m=l=0;break;case \"ss\":l=Math.floor(l/c)*c;m=0;break;case \"fff\":m=Math.floor(m/c)*c}AmCharts.useUTC?(a=new Date,a.setUTCFullYear(e,f,g),a.setUTCHours(h,k,l,m)):a=new Date(e,f,g,h,k,l,m);return a};","AmCharts.getPeriodDuration=function(a,b){void 0===b&&(b=1);var c;switch(a){case \"YYYY\":c=316224E5;break;case \"MM\":c=26784E5;break;case \"WW\":c=6048E5;break;case \"DD\":c=864E5;break;case \"hh\":c=36E5;break;case \"mm\":c=6E4;break;case \"ss\":c=1E3;break;case \"fff\":c=1}return c*b};AmCharts.intervals={s:{nextInterval:\"ss\",contains:1E3},ss:{nextInterval:\"mm\",contains:60,count:0},mm:{nextInterval:\"hh\",contains:60,count:1},hh:{nextInterval:\"DD\",contains:24,count:2},DD:{nextInterval:\"\",contains:Infinity,count:3}};","AmCharts.getMaxInterval=function(a,b){var c=AmCharts.intervals;return a>=c[b].contains?(a=Math.round(a/c[b].contains),b=c[b].nextInterval,AmCharts.getMaxInterval(a,b)):\"ss\"==b?c[b].nextInterval:b};AmCharts.dayNames=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \");AmCharts.shortDayNames=\"Sun Mon Tue Wed Thu Fri Sat\".split(\" \");AmCharts.monthNames=\"January February March April May June July August September October November December\".split(\" \");AmCharts.shortMonthNames=\"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \");","AmCharts.getWeekNumber=function(a){a=new Date(a);a.setHours(0,0,0);a.setDate(a.getDate()+4-(a.getDay()||7));var b=new Date(a.getFullYear(),0,1);return Math.ceil(((a-b)/864E5+1)/7)};","AmCharts.stringToDate=function(a,b){var c={},d=[{pattern:\"YYYY\",period:\"year\"},{pattern:\"YY\",period:\"year\"},{pattern:\"MM\",period:\"month\"},{pattern:\"M\",period:\"month\"},{pattern:\"DD\",period:\"date\"},{pattern:\"D\",period:\"date\"},{pattern:\"JJ\",period:\"hours\"},{pattern:\"J\",period:\"hours\"},{pattern:\"HH\",period:\"hours\"},{pattern:\"H\",period:\"hours\"},{pattern:\"KK\",period:\"hours\"},{pattern:\"K\",period:\"hours\"},{pattern:\"LL\",period:\"hours\"},{pattern:\"L\",period:\"hours\"},{pattern:\"NN\",period:\"minutes\"},{pattern:\"N\",","period:\"minutes\"},{pattern:\"SS\",period:\"seconds\"},{pattern:\"S\",period:\"seconds\"},{pattern:\"QQQ\",period:\"milliseconds\"},{pattern:\"QQ\",period:\"milliseconds\"},{pattern:\"Q\",period:\"milliseconds\"}],e=!0,f=b.indexOf(\"AA\");-1!=f&&(a.substr(f,2),\"pm\"==a.toLowerCase&&(e=!1));var f=b,g,h,k;for(k=0;k<d.length;k++)h=d[k].period,c[h]=0,\"date\"==h&&(c[h]=1);for(k=0;k<d.length;k++)if(g=d[k].pattern,h=d[k].period,-1!=b.indexOf(g)){var l=AmCharts.getFromDateString(g,a,f);b=b.replace(g,\"\");if(\"KK\"==g||\"K\"==g||\"LL\"==","g||\"L\"==g)e||(l+=12);c[h]=l}AmCharts.useUTC?(d=new Date,d.setUTCFullYear(c.year,c.month,c.date),d.setUTCHours(c.hours,c.minutes,c.seconds,c.milliseconds)):d=new Date(c.year,c.month,c.date,c.hours,c.minutes,c.seconds,c.milliseconds);return d};AmCharts.getFromDateString=function(a,b,c){if(void 0!==b)return c=c.indexOf(a),b=b.substr(c,a.length),\"0\"==b.charAt(0)&&(b=b.substr(1,b.length-1)),b=Number(b),isNaN(b)&&(b=0),-1!=a.indexOf(\"M\")&&b--,b};","AmCharts.formatDate=function(a,b,c){c||(c=AmCharts);var d,e,f,g,h,k,l,m=AmCharts.getWeekNumber(a);AmCharts.useUTC?(d=a.getUTCFullYear(),e=a.getUTCMonth(),f=a.getUTCDate(),g=a.getUTCDay(),h=a.getUTCHours(),k=a.getUTCMinutes(),l=a.getUTCSeconds(),a=a.getUTCMilliseconds()):(d=a.getFullYear(),e=a.getMonth(),f=a.getDate(),g=a.getDay(),h=a.getHours(),k=a.getMinutes(),l=a.getSeconds(),a=a.getMilliseconds());var n=String(d).substr(2,2),p=e+1;9>e&&(p=\"0\"+p);var q=\"0\"+g;b=b.replace(/W/g,m);m=h;24==m&&(m=0);","var r=m;10>r&&(r=\"0\"+r);b=b.replace(/JJ/g,r);b=b.replace(/J/g,m);r=h;0===r&&(r=24,-1!=b.indexOf(\"H\")&&f--);m=f;10>f&&(m=\"0\"+f);var s=r;10>s&&(s=\"0\"+s);b=b.replace(/HH/g,s);b=b.replace(/H/g,r);r=h;11<r&&(r-=12);s=r;10>s&&(s=\"0\"+s);b=b.replace(/KK/g,s);b=b.replace(/K/g,r);r=h;0===r&&(r=12);12<r&&(r-=12);s=r;10>s&&(s=\"0\"+s);b=b.replace(/LL/g,s);b=b.replace(/L/g,r);r=k;10>r&&(r=\"0\"+r);b=b.replace(/NN/g,r);b=b.replace(/N/g,k);k=l;10>k&&(k=\"0\"+k);b=b.replace(/SS/g,k);b=b.replace(/S/g,l);l=a;10>l&&(l=\"00\"+","l);100>l&&(l=\"0\"+l);k=a;10>k&&(k=\"00\"+k);b=b.replace(/QQQ/g,l);b=b.replace(/QQ/g,k);b=b.replace(/Q/g,a);b=12>h?b.replace(/A/g,\"am\"):b.replace(/A/g,\"pm\");b=b.replace(/YYYY/g,\"@IIII@\");b=b.replace(/YY/g,\"@II@\");b=b.replace(/MMMM/g,\"@XXXX@\");b=b.replace(/MMM/g,\"@XXX@\");b=b.replace(/MM/g,\"@XX@\");b=b.replace(/M/g,\"@X@\");b=b.replace(/DD/g,\"@RR@\");b=b.replace(/D/g,\"@R@\");b=b.replace(/EEEE/g,\"@PPPP@\");b=b.replace(/EEE/g,\"@PPP@\");b=b.replace(/EE/g,\"@PP@\");b=b.replace(/E/g,\"@P@\");b=b.replace(/@IIII@/g,d);b=","b.replace(/@II@/g,n);b=b.replace(/@XXXX@/g,c.monthNames[e]);b=b.replace(/@XXX@/g,c.shortMonthNames[e]);b=b.replace(/@XX@/g,p);b=b.replace(/@X@/g,e+1);b=b.replace(/@RR@/g,m);b=b.replace(/@R@/g,f);b=b.replace(/@PPPP@/g,c.dayNames[g]);b=b.replace(/@PPP@/g,c.shortDayNames[g]);b=b.replace(/@PP@/g,q);return b=b.replace(/@P@/g,g)};","AmCharts.changeDate=function(a,b,c,d,e){var f=-1;void 0===d&&(d=!0);void 0===e&&(e=!1);!0===d&&(f=1);switch(b){case \"YYYY\":a.setFullYear(a.getFullYear()+c*f);d||e||a.setDate(a.getDate()+1);break;case \"MM\":b=a.getMonth();a.setMonth(a.getMonth()+c*f);a.getMonth()>b+c*f&&a.setDate(a.getDate()-1);d||e||a.setDate(a.getDate()+1);break;case \"DD\":a.setDate(a.getDate()+c*f);break;case \"WW\":a.setDate(a.getDate()+c*f*7);break;case \"hh\":a.setHours(a.getHours()+c*f);break;case \"mm\":a.setMinutes(a.getMinutes()+"]},{"action":"removeText","range":{"start":{"row":0,"column":2},"end":{"row":0,"column":186}},"text":"(!AmCharts)var AmCharts={themes:{},maps:{},inheriting:{},charts:[],onReadyArray:[],useUTC:!1,updateRate:40,uid:0,lang:{},translations:{},mapTranslations:{},windows:{},initHandlers:[]};"},{"action":"removeText","range":{"start":{"row":0,"column":2},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":2},"end":{"row":0,"column":31}},"text":" (!AmCharts) var AmCharts = {"},{"action":"insertText","range":{"start":{"row":0,"column":31},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":7623,"column":0}},"lines":["    themes: {},","    maps: {},","    inheriting: {},","    charts: [],","    onReadyArray: [],","    useUTC: !1,","    updateRate: 40,","    uid: 0,","    lang: {},","    translations: {},","    mapTranslations: {},","    windows: {},","    initHandlers: []","};","AmCharts.Class = function(a) {","    var b = function() {","        arguments[0] !== AmCharts.inheriting && (this.events = {}, this.construct.apply(this, arguments))","    };","    a.inherits ? (b.prototype = new a.inherits(AmCharts.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function() {","        for (var a = 0, b = arguments.length; a < b; a++) this.events[arguments[a]] = []","    }, b.prototype.listenTo = function(a, b, c) {","        this.removeListener(a, b, c);","        a.events[b].push({","            handler: c,","            scope: this","        })","    }, b.prototype.addListener = function(a, b, c) {","        this.removeListener(this,","            a, b);","        this.events[a].push({","            handler: b,","            scope: c","        })","    }, b.prototype.removeListener = function(a, b, c) {","        if (a && a.events)","            for (a = a.events[b], b = a.length - 1; 0 <= b; b--) a[b].handler === c && a.splice(b, 1)","    }, b.prototype.fire = function(a, b) {","        for (var c = this.events[a], g = 0, h = c.length; g < h; g++) {","            var k = c[g];","            k.handler.call(k.scope, b)","        }","    });","    for (var c in a) b.prototype[c] = a[c];","    return b","};","AmCharts.addChart = function(a) {","    AmCharts.charts.push(a)","};","AmCharts.removeChart = function(a) {","    for (var b = AmCharts.charts, c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1)","};","AmCharts.isModern = !0;","AmCharts.getIEVersion = function() {","    var a = 0;","    if (\"Microsoft Internet Explorer\" == navigator.appName) {","        var b = navigator.userAgent,","            c = /MSIE ([0-9]{1,}[.0-9]{0,})/;","        null != c.exec(b) && (a = parseFloat(RegExp.$1))","    }","    else \"Netscape\" == navigator.appName && (b = navigator.userAgent, c = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/, null != c.exec(b) && (a = parseFloat(RegExp.$1)));","    return a","};","AmCharts.applyLang = function(a, b) {","    var c = AmCharts.translations;","    b.dayNames = AmCharts.dayNames;","    b.shortDayNames = AmCharts.shortDayNames;","    b.monthNames = AmCharts.monthNames;","    b.shortMonthNames = AmCharts.shortMonthNames;","    c && (c = c[a]) && (AmCharts.lang = c, c.monthNames && (b.dayNames = c.dayNames, b.shortDayNames = c.shortDayNames, b.monthNames = c.monthNames, b.shortMonthNames = c.shortMonthNames))","};","AmCharts.IEversion = AmCharts.getIEVersion();","9 > AmCharts.IEversion && 0 < AmCharts.IEversion && (AmCharts.isModern = !1, AmCharts.isIE = !0);","AmCharts.dx = 0;","AmCharts.dy = 0;","if (document.addEventListener || window.opera) AmCharts.isNN = !0, AmCharts.isIE = !1, AmCharts.dx = .5, AmCharts.dy = .5;","document.attachEvent && (AmCharts.isNN = !1, AmCharts.isIE = !0, AmCharts.isModern || (AmCharts.dx = 0, AmCharts.dy = 0));","window.chrome && (AmCharts.chrome = !0);","AmCharts.handleResize = function() {","    for (var a = AmCharts.charts, b = 0; b < a.length; b++) {","        var c = a[b];","        c && c.div && c.handleResize()","    }","};","AmCharts.handleMouseUp = function(a) {","    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {","        var d = b[c];","        d && d.handleReleaseOutside(a)","    }","};","AmCharts.handleMouseMove = function(a) {","    for (var b = AmCharts.charts, c = 0; c < b.length; c++) {","        var d = b[c];","        d && d.handleMouseMove(a)","    }","};","AmCharts.resetMouseOver = function() {","    for (var a = AmCharts.charts, b = 0; b < a.length; b++) {","        var c = a[b];","        c && (c.mouseIsOver = !1)","    }","};","AmCharts.ready = function(a) {","    AmCharts.onReadyArray.push(a)","};","AmCharts.handleLoad = function() {","    AmCharts.isReady = !0;","    for (var a = AmCharts.onReadyArray, b = 0; b < a.length; b++) {","        var c = a[b];","        isNaN(AmCharts.processDelay) ? c() : setTimeout(c, AmCharts.processDelay * b)","    }","};","AmCharts.addInitHandler = function(a, b) {","    AmCharts.initHandlers.push({","        method: a,","        types: b","    })","};","AmCharts.callInitHandler = function(a) {","    var b = AmCharts.initHandlers;","    if (AmCharts.initHandlers)","        for (var c = 0; c < b.length; c++) {","            var d = b[c];","            d.types && -1 != d.types.indexOf(a.type) && d.method(a)","        }","};","AmCharts.getUniqueId = function() {","    AmCharts.uid++;","    return \"AmChartsEl-\" + AmCharts.uid","};","AmCharts.isNN && (document.addEventListener(\"mousemove\", AmCharts.handleMouseMove, !0), window.addEventListener(\"resize\", AmCharts.handleResize, !0), document.addEventListener(\"mouseup\", AmCharts.handleMouseUp, !0), window.addEventListener(\"load\", AmCharts.handleLoad, !0));","AmCharts.isIE && (document.attachEvent(\"onmousemove\", AmCharts.handleMouseMove), window.attachEvent(\"onresize\", AmCharts.handleResize), document.attachEvent(\"onmouseup\", AmCharts.handleMouseUp), window.attachEvent(\"onload\", AmCharts.handleLoad));","AmCharts.clear = function() {","    var a = AmCharts.charts;","    if (a)","        for (var b = 0; b < a.length; b++) a[b].clear();","    AmCharts.charts = null;","    AmCharts.isNN && (document.removeEventListener(\"mousemove\", AmCharts.handleMouseMove, !0), window.removeEventListener(\"resize\", AmCharts.handleResize, !0), document.removeEventListener(\"mouseup\", AmCharts.handleMouseUp, !0), window.removeEventListener(\"load\", AmCharts.handleLoad, !0));","    AmCharts.isIE && (document.detachEvent(\"onmousemove\", AmCharts.handleMouseMove), window.detachEvent(\"onresize\", AmCharts.handleResize),","        document.detachEvent(\"onmouseup\", AmCharts.handleMouseUp), window.detachEvent(\"onload\", AmCharts.handleLoad))","};","AmCharts.makeChart = function(a, b, c) {","    var d = b.type,","        e = b.theme;","    AmCharts.isString(e) && (e = AmCharts.themes[e], b.theme = e);","    var f;","    switch (d) {","        case \"serial\":","            f = new AmCharts.AmSerialChart(e);","            break;","        case \"xy\":","            f = new AmCharts.AmXYChart(e);","            break;","        case \"pie\":","            f = new AmCharts.AmPieChart(e);","            break;","        case \"radar\":","            f = new AmCharts.AmRadarChart(e);","            break;","        case \"gauge\":","            f = new AmCharts.AmAngularGauge(e);","            break;","        case \"funnel\":","            f = new AmCharts.AmFunnelChart(e);","            break;","        case \"map\":","            f = new AmCharts.AmMap(e);","            break;","        case \"stock\":","            f = new AmCharts.AmStockChart(e)","    }","    AmCharts.extend(f,","        b);","    AmCharts.isReady ? isNaN(c) ? f.write(a) : setTimeout(function() {","        AmCharts.realWrite(f, a)","    }, c) : AmCharts.ready(function() {","        isNaN(c) ? f.write(a) : setTimeout(function() {","            AmCharts.realWrite(f, a)","        }, c)","    });","    return f","};","AmCharts.realWrite = function(a, b) {","    a.write(b)","};","AmCharts.toBoolean = function(a, b) {","    if (void 0 === a) return b;","    switch (String(a).toLowerCase()) {","        case \"true\":","        case \"yes\":","        case \"1\":","            return !0;","        case \"false\":","        case \"no\":","        case \"0\":","        case null:","            return !1;","        default:","            return Boolean(a)","    }","};","AmCharts.removeFromArray = function(a, b) {","    var c;","    for (c = a.length - 1; 0 <= c; c--) a[c] == b && a.splice(c, 1)","};","AmCharts.getDecimals = function(a) {","    var b = 0;","    isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length));","    return b","};","AmCharts.wrappedText = function(a, b, c, d, e, f, g, h, k) {","    var l = AmCharts.text(a, b, c, d, e, f, g),","        m = \"\\n\";","    AmCharts.isModern || (m = \"<br>\");","    if (10 < k) return l;","    if (l) {","        var n = l.getBBox();","        if (n.width > h) {","            l.remove();","            for (var l = [], p = 0; - 1 < (index = b.indexOf(\" \", p));) l.push(index), p = index + 1;","            for (var q = Math.round(b.length / 2), r = 1E3, s, p = 0; p < l.length; p++) {","                var w = Math.abs(l[p] - q);","                w < r && (s = l[p], r = w)","            }","            if (isNaN(s)) {","                h = Math.ceil(n.width / h);","                if (0 == k)","                    for (p = 1; p < h; p++) s = Math.round(b.length / h * p), b = b.substr(0, s) + m + b.substr(s);","                return AmCharts.text(a, b,","                    c, d, e, f, g)","            }","            b = b.substr(0, s) + m + b.substr(s + 1);","            return AmCharts.wrappedText(a, b, c, d, e, f, g, h, k + 1)","        }","        return l","    }","};","AmCharts.getStyle = function(a, b) {","    var c = \"\";","    document.defaultView && document.defaultView.getComputedStyle ? c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b) : a.currentStyle && (b = b.replace(/\\-(\\w)/g, function(a, b) {","        return b.toUpperCase()","    }), c = a.currentStyle[b]);","    return c","};","AmCharts.removePx = function(a) {","    if (void 0 != a) return Number(a.substring(0, a.length - 2))","};","AmCharts.getURL = function(a, b) {","    if (a)","        if (\"_self\" != b && b)","            if (\"_top\" == b && window.top) window.top.location.href = a;","            else if (\"_parent\" == b && window.parent) window.parent.location.href = a;","    else if (\"_blank\" == b) window.open(a);","    else {","        var c = document.getElementsByName(b)[0];","        c ? c.src = a : (c = AmCharts.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : AmCharts.windows[b] = window.open(a) : AmCharts.windows[b] = window.open(a)","    }","    else window.location.href = a","};","AmCharts.ifArray = function(a) {","    return a && 0 < a.length ? !0 : !1","};","AmCharts.callMethod = function(a, b) {","    var c;","    for (c = 0; c < b.length; c++) {","        var d = b[c];","        if (d) {","            if (d[a]) d[a]();","            var e = d.length;","            if (0 < e) {","                var f;","                for (f = 0; f < e; f++) {","                    var g = d[f];","                    if (g && g[a]) g[a]()","                }","            }","        }","    }","};","AmCharts.toNumber = function(a) {","    return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\"))","};","AmCharts.toColor = function(a) {","    if (\"\" !== a && void 0 !== a)","        if (-1 != a.indexOf(\",\")) {","            a = a.split(\",\");","            var b;","            for (b = 0; b < a.length; b++) {","                var c = a[b].substring(a[b].length - 6, a[b].length);","                a[b] = \"#\" + c","            }","        }","        else a = a.substring(a.length - 6, a.length), a = \"#\" + a;","    return a","};","AmCharts.toCoordinate = function(a, b, c) {","    var d;","    void 0 !== a && (a = String(a), c && c < b && (b = c), d = Number(a), -1 != a.indexOf(\"!\") && (d = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (d = b * Number(a.substr(0, a.length - 1)) / 100));","    return d","};","AmCharts.fitToBounds = function(a, b, c) {","    a < b && (a = b);","    a > c && (a = c);","    return a","};","AmCharts.isDefined = function(a) {","    return void 0 === a ? !1 : !0","};","AmCharts.stripNumbers = function(a) {","    return a.replace(/[0-9]+/g, \"\")","};","AmCharts.roundTo = function(a, b) {","    if (0 > b) return a;","    var c = Math.pow(10, b);","    return Math.round(a * c) / c","};","AmCharts.toFixed = function(a, b) {","    var c = String(Math.round(a * Math.pow(10, b)));","    if (0 < b) {","        var d = c.length;","        if (d < b) {","            var e;","            for (e = 0; e < b - d; e++) c = \"0\" + c","        }","        d = c.substring(0, c.length - b);","        \"\" === d && (d = 0);","        return d + \".\" + c.substring(c.length - b, c.length)","    }","    return String(c)","};","AmCharts.formatDuration = function(a, b, c, d, e, f) {","    var g = AmCharts.intervals,","        h = f.decimalSeparator;","    if (a >= g[b].contains) {","        var k = a - Math.floor(a / g[b].contains) * g[b].contains;","        \"ss\" == b && (k = AmCharts.formatNumber(k, f), 1 == k.split(h)[0].length && (k = \"0\" + k));","        (\"mm\" == b || \"hh\" == b) && 10 > k && (k = \"0\" + k);","        c = k + \"\" + d[b] + \"\" + c;","        a = Math.floor(a / g[b].contains);","        b = g[b].nextInterval;","        return AmCharts.formatDuration(a, b, c, d, e, f)","    }","    \"ss\" == b && (a = AmCharts.formatNumber(a, f), 1 == a.split(h)[0].length && (a = \"0\" + a));","    (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a);","    c = a + \"\" +","        d[b] + \"\" + c;","    if (g[e].count > g[b].count)","        for (a = g[b].count; a < g[e].count; a++) b = g[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + d[b] + \"\" + c : \"DD\" == b && (c = \"0\" + d[b] + \"\" + c);","    \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));","    return c","};","AmCharts.formatNumber = function(a, b, c, d, e) {","    a = AmCharts.roundTo(a, b.precision);","    isNaN(c) && (c = b.precision);","    var f = b.decimalSeparator;","    b = b.thousandsSeparator;","    var g;","    g = 0 > a ? \"-\" : \"\";","    a = Math.abs(a);","    var h = String(a),","        k = !1; - 1 != h.indexOf(\"e\") && (k = !0);","    0 <= c && !k && (h = AmCharts.toFixed(a, c));","    var l = \"\";","    if (k) l = h;","    else {","        var h = h.split(\".\"),","            k = String(h[0]),","            m;","        for (m = k.length; 0 <= m; m -= 3) l = m != k.length ? 0 !== m ? k.substring(m - 3, m) + b + l : k.substring(m - 3, m) + l : k.substring(m - 3, m);","        void 0 !== h[1] && (l = l + f + h[1]);","        void 0 !== c && 0 < c && \"0\" != l && (l = AmCharts.addZeroes(l,","            f, c))","    }","    l = g + l;","    \"\" === g && !0 === d && 0 !== a && (l = \"+\" + l);","    !0 === e && (l += \"%\");","    return l","};","AmCharts.addZeroes = function(a, b, c) {","    a = a.split(b);","    void 0 === a[1] && 0 < c && (a[1] = \"0\");","    return a[1].length < c ? (a[1] += \"0\", AmCharts.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0]","};","AmCharts.scientificToNormal = function(a) {","    var b;","    a = String(a).split(\"e\");","    var c;","    if (\"-\" == a[1].substr(0, 1)) {","        b = \"0.\";","        for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += \"0\";","        b += a[0].split(\".\").join(\"\")","    }","    else {","        var d = 0;","        b = a[0].split(\".\");","        b[1] && (d = b[1].length);","        b = a[0].split(\".\").join(\"\");","        for (c = 0; c < Math.abs(Number(a[1])) - d; c++) b += \"0\"","    }","    return b","};","AmCharts.toScientific = function(a, b) {","    if (0 === a) return \"0\";","    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E);","    Math.pow(10, c);","    mantissa = String(mantissa).split(\".\").join(b);","    return String(mantissa) + \"e\" + c","};","AmCharts.randomColor = function() {","    return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6)","};","AmCharts.hitTest = function(a, b, c) {","    var d = !1,","        e = a.x,","        f = a.x + a.width,","        g = a.y,","        h = a.y + a.height,","        k = AmCharts.isInRectangle;","    d || (d = k(e, g, b));","    d || (d = k(e, h, b));","    d || (d = k(f, g, b));","    d || (d = k(f, h, b));","    d || !0 === c || (d = AmCharts.hitTest(b, a, !0));","    return d","};","AmCharts.isInRectangle = function(a, b, c) {","    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1","};","AmCharts.isPercents = function(a) {","    if (-1 != String(a).indexOf(\"%\")) return !0","};","AmCharts.findPosX = function(a) {","    var b = a,","        c = a.offsetLeft;","    if (a.offsetParent) {","        for (; a = a.offsetParent;) c += a.offsetLeft;","        for (;","            (b = b.parentNode) && b != document.body;) c -= b.scrollLeft || 0","    }","    return c","};","AmCharts.findPosY = function(a) {","    var b = a,","        c = a.offsetTop;","    if (a.offsetParent) {","        for (; a = a.offsetParent;) c += a.offsetTop;","        for (;","            (b = b.parentNode) && b != document.body;) c -= b.scrollTop || 0","    }","    return c","};","AmCharts.findIfFixed = function(a) {","    if (a.offsetParent)","        for (; a = a.offsetParent;)","            if (\"fixed\" == AmCharts.getStyle(a, \"position\")) return !0;","    return !1","};","AmCharts.findIfAuto = function(a) {","    return a.style && \"auto\" == AmCharts.getStyle(a, \"overflow\") ? !0 : a.parentNode ? AmCharts.findIfAuto(a.parentNode) : !1","};","AmCharts.findScrollLeft = function(a, b) {","    a.scrollLeft && (b += a.scrollLeft);","    return a.parentNode ? AmCharts.findScrollLeft(a.parentNode, b) : b","};","AmCharts.findScrollTop = function(a, b) {","    a.scrollTop && (b += a.scrollTop);","    return a.parentNode ? AmCharts.findScrollTop(a.parentNode, b) : b","};","AmCharts.formatValue = function(a, b, c, d, e, f, g, h) {","    if (b) {","        void 0 === e && (e = \"\");","        var k;","        for (k = 0; k < c.length; k++) {","            var l = c[k],","                m = b[l];","            void 0 !== m && (m = f ? AmCharts.addPrefix(m, h, g, d) : AmCharts.formatNumber(m, d), a = a.replace(new RegExp(\"\\\\[\\\\[\" + e + \"\" + l + \"\\\\]\\\\]\", \"g\"), m))","        }","    }","    return a","};","AmCharts.formatDataContextValue = function(a, b) {","    if (a) {","        var c = a.match(/\\[\\[.*?\\]\\]/g),","            d;","        for (d = 0; d < c.length; d++) {","            var e = c[d],","                e = e.substr(2, e.length - 4);","            void 0 !== b[e] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + e + \"\\\\]\\\\]\", \"g\"), b[e]))","        }","    }","    return a","};","AmCharts.massReplace = function(a, b) {","    for (var c in b)","        if (b.hasOwnProperty(c)) {","            var d = b[c];","            void 0 === d && (d = \"\");","            a = a.replace(c, d)","        }","    return a","};","AmCharts.cleanFromEmpty = function(a) {","    return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\")","};","AmCharts.addPrefix = function(a, b, c, d, e) {","    var f = AmCharts.formatNumber(a, d),","        g = \"\",","        h, k, l;","    if (0 === a) return \"0\";","    0 > a && (g = \"-\");","    a = Math.abs(a);","    if (1 < a)","        for (h = b.length - 1; - 1 < h; h--) {","            if (a >= b[h].number && (k = a / b[h].number, l = Number(d.precision), 1 > l && (l = 1), c = AmCharts.roundTo(k, l), l = AmCharts.formatNumber(c, {","                precision: -1,","                decimalSeparator: d.decimalSeparator,","                thousandsSeparator: d.thousandsSeparator","            }), !e || k == c)) {","                f = g + \"\" + l + \"\" + b[h].prefix;","                break","            }","        }","    else","        for (h = 0; h < c.length; h++)","            if (a <= c[h].number) {","                k = a / c[h].number;","                l = Math.abs(Math.round(Math.log(k) *","                    Math.LOG10E));","                k = AmCharts.roundTo(k, l);","                f = g + \"\" + k + \"\" + c[h].prefix;","                break","            } return f","};","AmCharts.remove = function(a) {","    a && a.remove()","};","AmCharts.recommended = function() {","    var a = \"js\";","    document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") || swfobject && swfobject.hasFlashPlayerVersion(\"8\") && (a = \"flash\");","    return a","};","AmCharts.getEffect = function(a) {","    \">\" == a && (a = \"easeOutSine\");","    \"<\" == a && (a = \"easeInSine\");","    \"elastic\" == a && (a = \"easeOutElastic\");","    return a","};","AmCharts.getObjById = function(a, b) {","    var c, d;","    for (d = 0; d < a.length; d++) {","        var e = a[d];","        e.id == b && (c = e)","    }","    return c","};","AmCharts.applyTheme = function(a, b, c) {","    b || (b = AmCharts.theme);","    b && b[c] && AmCharts.extend(a, b[c])","};","AmCharts.isString = function(a) {","    return \"string\" == typeof a ? !0 : !1","};","AmCharts.extend = function(a, b, c) {","    for (var d in b) c ? a.hasOwnProperty(d) || (a[d] = b[d]) : a[d] = b[d];","    return a","};","AmCharts.copyProperties = function(a, b) {","    for (var c in a) a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c])","};","AmCharts.processObject = function(a, b, c) {","    !1 === a instanceof b && (a = AmCharts.extend(new b(c), a));","    return a","};","AmCharts.fixNewLines = function(a) {","    var b = RegExp(\"\\\\n\", \"g\");","    a && (a = a.replace(b, \"<br />\"));","    return a","};","AmCharts.fixBrakes = function(a) {","    if (AmCharts.isModern) {","        var b = RegExp(\"<br>\", \"g\");","        a && (a = a.replace(b, \"\\n\"))","    }","    else a = AmCharts.fixNewLines(a);","    return a","};","AmCharts.deleteObject = function(a, b) {","    if (a) {","        if (void 0 === b || null === b) b = 20;","        if (0 !== b)","            if (\"[object Array]\" === Object.prototype.toString.call(a))","                for (var c = 0; c < a.length; c++) AmCharts.deleteObject(a[c], b - 1), a[c] = null;","            else if (a && !a.tagName) try {","            for (c in a) a[c] && (\"object\" == typeof a[c] && AmCharts.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null))","        }","        catch (d) {}","    }","};","AmCharts.bounce = function(a, b, c, d, e) {","    return (b /= e) < 1 / 2.75 ? 7.5625 * d * b * b + c : b < 2 / 2.75 ? d * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? d * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : d * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c","};","AmCharts.easeInSine = function(a, b, c, d, e) {","    return -d * Math.cos(b / e * (Math.PI / 2)) + d + c","};","AmCharts.easeOutSine = function(a, b, c, d, e) {","    return d * Math.sin(b / e * (Math.PI / 2)) + c","};","AmCharts.easeOutElastic = function(a, b, c, d, e) {","    a = 1.70158;","    var f = 0,","        g = d;","    if (0 === b) return c;","    if (1 == (b /= e)) return c + d;","    f || (f = .3 * e);","    g < Math.abs(d) ? (g = d, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(d / g);","    return g * Math.pow(2, -10 * b) * Math.sin(2 * (b * e - a) * Math.PI / f) + d + c","};","AmCharts.AxisBase = AmCharts.Class({","    construct: function(a) {","        this.createEvents(\"clickItem\", \"rollOverItem\", \"rollOutItem\");","        this.viY = this.viX = this.y = this.x = this.dy = this.dx = 0;","        this.axisThickness = 1;","        this.axisColor = \"#000000\";","        this.axisAlpha = 1;","        this.gridCount = this.tickLength = 5;","        this.gridAlpha = .15;","        this.gridThickness = 1;","        this.gridColor = \"#000000\";","        this.dashLength = 0;","        this.labelFrequency = 1;","        this.showLastLabel = this.showFirstLabel = !0;","        this.fillColor = \"#FFFFFF\";","        this.fillAlpha = 0;","        this.labelsEnabled = !0;","        this.labelRotation = 0;","        this.autoGridCount = !0;","        this.valueRollOverColor = \"#CC0000\";","        this.offset = 0;","        this.guides = [];","        this.visible = !0;","        this.counter = 0;","        this.guides = [];","        this.ignoreAxisWidth = this.inside = !1;","        this.minHorizontalGap = 75;","        this.minVerticalGap = 35;","        this.titleBold = !0;","        this.minorGridEnabled = !1;","        this.minorGridAlpha = .07;","        this.autoWrap = !1;","        this.titleAlign = \"middle\";","        this.labelOffset = 0;","        AmCharts.applyTheme(this, a, \"AxisBase\")","    },","    zoom: function(a, b) {","        this.start = a;","        this.end = b;","        this.dataChanged = !0;","        this.draw()","    },","    fixAxisPosition: function() {","        var a = this.position;","        \"H\" == this.orientation ?","            (\"left\" == a && (a = \"bottom\"), \"right\" == a && (a = \"top\")) : (\"bottom\" == a && (a = \"left\"), \"top\" == a && (a = \"right\"));","        this.position = a","    },","    draw: function() {","        var a = this.chart;","        this.allLabels = [];","        this.counter = 0;","        this.destroy();","        this.fixAxisPosition();","        this.labels = [];","        var b = a.container,","            c = b.set();","        a.gridSet.push(c);","        this.set = c;","        b = b.set();","        a.axesLabelsSet.push(b);","        this.labelsSet = b;","        this.axisLine = new this.axisRenderer(this);","        this.autoGridCount ? (\"V\" == this.orientation ? (a = this.height / this.minVerticalGap, 3 > a && (a = 3)) : a = this.width / this.minHorizontalGap,","            this.gridCountR = Math.max(a, 1)) : this.gridCountR = this.gridCount;","        this.axisWidth = this.axisLine.axisWidth;","        this.addTitle()","    },","    setOrientation: function(a) {","        this.orientation = a ? \"H\" : \"V\"","    },","    addTitle: function() {","        var a = this.title;","        if (a) {","            var b = this.chart,","                c = this.titleColor;","            void 0 === c && (c = b.color);","            var d = this.titleFontSize;","            isNaN(d) && (d = b.fontSize + 1);","            this.titleLabel = AmCharts.text(b.container, a, c, b.fontFamily, d, this.titleAlign, this.titleBold)","        }","    },","    positionTitle: function() {","        var a = this.titleLabel;","        if (a) {","            var b, c, d = this.labelsSet,","                e = {};","            0 < d.length() ? e = d.getBBox() : (e.x = 0, e.y = 0, e.width = this.viW, e.height = this.viH);","            d.push(a);","            var d = e.x,","                f = e.y;","            AmCharts.VML && (this.rotate ? d -= this.x : f -= this.y);","            var g = e.width,","                e = e.height,","                h = this.viW,","                k = this.viH,","                l = 0,","                m = a.getBBox().height / 2,","                n = this.inside,","                p = this.titleAlign;","            switch (this.position) {","                case \"top\":","                    b = \"left\" == p ? -1 : \"right\" == p ? h : h / 2;","                    c = f - 10 - m;","                    break;","                case \"bottom\":","                    b = \"left\" == p ? -1 : \"right\" == p ? h : h / 2;","                    c = f + e + 10 + m;","                    break;","                case \"left\":","                    b = d - 10 - m;","                    n && (b -= 5);","                    c = \"left\" == p ? k + 1 : \"right\" == p ? -1 : k / 2;","                    l = -90;","                    break;","                case \"right\":","                    b = d + g + 10 +","                        m - 3, n && (b += 7), c = \"left\" == p ? k + 2 : \"right\" == p ? -2 : k / 2, l = -90","            }","            this.marginsChanged ? (a.translate(b, c), this.tx = b, this.ty = c) : a.translate(this.tx, this.ty);","            this.marginsChanged = !1;","            0 !== l && a.rotate(l)","        }","    },","    pushAxisItem: function(a, b) {","        var c = this,","            d = a.graphics();","        0 < d.length() && (b ? c.labelsSet.push(d) : c.set.push(d));","        if (d = a.getLabel()) this.labelsSet.push(d), d.click(function(b) {","            c.handleMouse(b, a, \"clickItem\")","        }).mouseover(function(b) {","            c.handleMouse(b, a, \"rollOverItem\")","        }).mouseout(function(b) {","            c.handleMouse(b, a, \"rollOutItem\")","        })","    },","    handleMouse: function(a,","        b, c) {","        this.fire(c, {","            type: c,","            value: b.value,","            serialDataItem: b.serialDataItem,","            axis: this,","            target: b.label,","            chart: this.chart,","            event: a","        })","    },","    addGuide: function(a) {","        for (var b = this.guides, c = !1, d = 0; d < b.length; d++) b[d] == a && (c = !0);","        c || b.push(a)","    },","    removeGuide: function(a) {","        var b = this.guides,","            c;","        for (c = 0; c < b.length; c++) b[c] == a && b.splice(c, 1)","    },","    handleGuideOver: function(a) {","        clearTimeout(this.chart.hoverInt);","        var b = a.graphics.getBBox(),","            c = b.x + b.width / 2,","            b = b.y + b.height / 2,","            d = a.fillColor;","        void 0 === d && (d = a.lineColor);","        this.chart.showBalloon(a.balloonText,","            d, !0, c, b)","    },","    handleGuideOut: function(a) {","        this.chart.hideBalloon()","    },","    addEventListeners: function(a, b) {","        var c = this;","        a.mouseover(function() {","            c.handleGuideOver(b)","        });","        a.mouseout(function() {","            c.handleGuideOut(b)","        })","    },","    getBBox: function() {","        var a = this.labelsSet.getBBox();","        AmCharts.VML || (a = {","            x: a.x + this.x,","            y: a.y + this.y,","            width: a.width,","            height: a.height","        });","        return a","    },","    destroy: function() {","        AmCharts.remove(this.set);","        AmCharts.remove(this.labelsSet);","        var a = this.axisLine;","        a && AmCharts.remove(a.set);","        AmCharts.remove(this.grid0)","    }","});","AmCharts.ValueAxis = AmCharts.Class({","    inherits: AmCharts.AxisBase,","    construct: function(a) {","        this.cname = \"ValueAxis\";","        this.createEvents(\"axisChanged\", \"logarithmicAxisFailed\", \"axisSelfZoomed\", \"axisZoomed\");","        AmCharts.ValueAxis.base.construct.call(this, a);","        this.dataChanged = !0;","        this.stackType = \"none\";","        this.position = \"left\";","        this.unitPosition = \"right\";","        this.recalculateToPercents = this.includeHidden = this.includeGuidesInMinMax = this.integersOnly = !1;","        this.durationUnits = {","            DD: \"d. \",","            hh: \":\",","            mm: \":\",","            ss: \"\"","        };","        this.scrollbar = !1;","        this.baseValue =","            0;","        this.radarCategoriesEnabled = !0;","        this.gridType = \"polygons\";","        this.useScientificNotation = !1;","        this.axisTitleOffset = 10;","        this.minMaxMultiplier = 1;","        this.logGridLimit = 2;","        AmCharts.applyTheme(this, a, this.cname)","    },","    updateData: function() {","        0 >= this.gridCountR && (this.gridCountR = 1);","        this.totals = [];","        this.data = this.chart.chartData;","        var a = this.chart;","        \"xy\" != a.type && (this.stackGraphs(\"smoothedLine\"), this.stackGraphs(\"line\"), this.stackGraphs(\"column\"), this.stackGraphs(\"step\"));","        this.recalculateToPercents && this.recalculate();","        this.synchronizationMultiplier &&","            this.synchronizeWith ? (AmCharts.isString(this.synchronizeWith) && (this.synchronizeWith = a.getValueAxisById(this.synchronizeWith)), this.synchronizeWith && (this.synchronizeWithAxis(this.synchronizeWith), this.foundGraphs = !0)) : (this.foundGraphs = !1, this.getMinMax())","    },","    draw: function() {","        AmCharts.ValueAxis.base.draw.call(this);","        var a = this.chart,","            b = this.set;","        \"duration\" == this.type && (this.duration = \"ss\");","        !0 === this.dataChanged && (this.updateData(), this.dataChanged = !1);","        if (this.logarithmic && (0 >= this.getMin(0, this.data.length -","            1) || 0 >= this.minimum)) this.fire(\"logarithmicAxisFailed\", {","            type: \"logarithmicAxisFailed\",","            chart: a","        });","        else {","            this.grid0 = null;","            var c, d, e = a.dx,","                f = a.dy,","                g = !1,","                h = this.logarithmic;","            if (isNaN(this.min) || isNaN(this.max) || !this.foundGraphs || Infinity == this.min || -Infinity == this.max) g = !0;","            else {","                var k = this.labelFrequency,","                    l = this.showFirstLabel,","                    m = this.showLastLabel,","                    n = 1,","                    p = 0,","                    q = Math.round((this.max - this.min) / this.step) + 1,","                    r;","                !0 === h ? (r = Math.log(this.max) * Math.LOG10E - Math.log(this.minReal) * Math.LOG10E, this.stepWidth = this.axisWidth / r,","                    r > this.logGridLimit && (q = Math.ceil(Math.log(this.max) * Math.LOG10E) + 1, p = Math.round(Math.log(this.minReal) * Math.LOG10E), q > this.gridCountR && (n = Math.ceil(q / this.gridCountR)))) : this.stepWidth = this.axisWidth / (this.max - this.min);","                var s = 0;","                1 > this.step && -1 < this.step && (s = AmCharts.getDecimals(this.step));","                this.integersOnly && (s = 0);","                s > this.maxDecCount && (s = this.maxDecCount);","                var w = this.precision;","                isNaN(w) || (s = w);","                this.max = AmCharts.roundTo(this.max, this.maxDecCount);","                this.min = AmCharts.roundTo(this.min, this.maxDecCount);","                d = {};","                d.precision = s;","                d.decimalSeparator = a.nf.decimalSeparator;","                d.thousandsSeparator = a.nf.thousandsSeparator;","                this.numberFormatter = d;","                var v, t = this.guides;","                c = t.length;","                if (0 < c) {","                    var u = this.fillAlpha;","                    for (d = this.fillAlpha = 0; d < c; d++) {","                        var x = t[d],","                            E = NaN,","                            A = x.above;","                        isNaN(x.toValue) || (E = this.getCoordinate(x.toValue), v = new this.axisItemRenderer(this, E, \"\", !0, NaN, NaN, x), this.pushAxisItem(v, A));","                        var z = NaN;","                        isNaN(x.value) || (z = this.getCoordinate(x.value), v = new this.axisItemRenderer(this, z, x.label, !0, NaN, (E - z) / 2, x), this.pushAxisItem(v,","                            A));","                        isNaN(E - z) || (v = new this.guideFillRenderer(this, z, E, x), this.pushAxisItem(v, A), v = v.graphics(), x.graphics = v, x.balloonText && this.addEventListeners(v, x))","                    }","                    this.fillAlpha = u","                }","                this.exponential = !1;","                for (d = p; d < q; d += n) t = AmCharts.roundTo(this.step * d + this.min, s), -1 != String(t).indexOf(\"e\") && (this.exponential = !0, String(t).split(\"e\"));","                this.duration && (this.maxInterval = AmCharts.getMaxInterval(this.max, this.duration));","                var s = this.step,","                    H, t = this.minorGridAlpha;","                this.minorGridEnabled && (H = this.getMinorGridStep(s, this.stepWidth *","                    s));","                for (d = p; d < q; d += n)","                    if (p = s * d + this.min, h && this.max - this.min > 5 * this.min && (p -= this.min), p = AmCharts.roundTo(p, this.maxDecCount + 1), !this.integersOnly || Math.round(p) == p)","                        if (isNaN(w) || Number(AmCharts.toFixed(p, w)) == p) {","                            !0 === h && (0 === p && (p = this.minReal), r > this.logGridLimit && (p = Math.pow(10, d)));","                            v = this.formatValue(p, !1, d);","                            Math.round(d / k) != d / k && (v = void 0);","                            if (0 === d && !l || d == q - 1 && !m) v = \" \";","                            c = this.getCoordinate(p);","                            v = new this.axisItemRenderer(this, c, v, void 0, void 0, void 0, void 0, this.boldLabels);","                            this.pushAxisItem(v);","                            if (p == this.baseValue && \"radar\" != a.type) {","                                var F, G, x = this.viW,","                                    A = this.viH;","                                v = this.viX;","                                u = this.viY;","                                \"H\" == this.orientation ? 0 <= c && c <= x + 1 && (F = [c, c, c + e], G = [A, 0, f]) : 0 <= c && c <= A + 1 && (F = [0, x, x + e], G = [c, c, c + f]);","                                F && (c = AmCharts.fitToBounds(2 * this.gridAlpha, 0, 1), c = AmCharts.line(a.container, F, G, this.gridColor, c, 1, this.dashLength), c.translate(v, u), this.grid0 = c, a.axesSet.push(c), c.toBack())","                            }","                            if (!isNaN(H) && 0 < t && d < q - 1) {","                                v = this.gridAlpha;","                                this.gridAlpha = this.minorGridAlpha;","                                for (c = 1; c < s / H; c++) u = this.getCoordinate(p + H * c), u = new this.axisItemRenderer(this,","                                    u, \"\", !1, 0, 0, !1, !1, 0, !0), this.pushAxisItem(u);","                                this.gridAlpha = v","                            }","                        }","                e = this.baseValue;","                this.min > this.baseValue && this.max > this.baseValue && (e = this.min);","                this.min < this.baseValue && this.max < this.baseValue && (e = this.max);","                h && e < this.minReal && (e = this.minReal);","                this.baseCoord = this.getCoordinate(e);","                e = {","                    type: \"axisChanged\",","                    target: this,","                    chart: a","                };","                e.min = h ? this.minReal : this.min;","                e.max = this.max;","                this.fire(\"axisChanged\", e);","                this.axisCreated = !0","            }","            h = this.axisLine.set;","            e = this.labelsSet;","            this.positionTitle();","            \"radar\" != a.type ? (a = this.viX, f =","                this.viY, b.translate(a, f), e.translate(a, f)) : h.toFront();","            !this.visible || g ? (b.hide(), h.hide(), e.hide()) : (b.show(), h.show(), e.show());","            this.axisY = this.y - this.viY;","            this.axisX = this.x - this.viX","        }","    },","    formatValue: function(a, b, c) {","        var d = this.exponential,","            e = this.logarithmic,","            f = this.numberFormatter,","            g = this.chart;","        !0 === this.logarithmic && (d = -1 != String(a).indexOf(\"e\") ? !0 : !1);","        this.useScientificNotation && (d = !0);","        this.usePrefixes && (d = !1);","        d ? (valueText = -1 == String(a).indexOf(\"e\") ? a.toExponential(15) : String(a), c = valueText.split(\"e\"),","            b = Number(c[0]), c = Number(c[1]), b = AmCharts.roundTo(b, 14), 10 == b && (b = 1, c += 1), valueText = b + \"e\" + c, 0 === a && (valueText = \"0\"), 1 == a && (valueText = \"1\")) : (e && (d = String(a).split(\".\"), d[1] ? (f.precision = d[1].length, 0 > c && (f.precision = Math.abs(c))) : f.precision = -1), valueText = this.usePrefixes ? AmCharts.addPrefix(a, g.prefixesOfBigNumbers, g.prefixesOfSmallNumbers, f, !b) : AmCharts.formatNumber(a, f, f.precision));","        this.duration && (valueText = AmCharts.formatDuration(a, this.duration, \"\", this.durationUnits, this.maxInterval, f));","        this.recalculateToPercents ?","            valueText += \"%\" : (f = this.unit) && (valueText = \"left\" == this.unitPosition ? f + valueText : valueText + f);","        this.labelFunction && (valueText = this.labelFunction(a, valueText, this).toString());","        return valueText","    },","    getMinorGridStep: function(a, b) {","        var c = [5, 4, 2];","        60 > b && c.shift();","        for (var d = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), e = 0; e < c.length; e++) {","            var f = a / c[e],","                g = Math.floor(Math.log(Math.abs(f)) * Math.LOG10E);","            if (!(0 < Math.abs(d - g)))","                if (1 > a) {","                    if (g = Math.pow(10, -g) * f, g == Math.round(g)) return f","                }","                else if (f == Math.round(f)) return f","        }","    },","    stackGraphs: function(a) {","        var b = this.stackType;","        \"stacked\" == b && (b = \"regular\");","        \"line\" == b && (b = \"none\");","        \"100% stacked\" == b && (b = \"100%\");","        this.stackType = b;","        var c = [],","            d = [],","            e = [],","            f = [],","            g, h = this.chart.graphs,","            k, l, m, n, p = this.baseValue,","            q = !1;","        if (\"line\" == a || \"step\" == a || \"smoothedLine\" == a) q = !0;","        if (q && (\"regular\" == b || \"100%\" == b))","            for (n = 0; n < h.length; n++) m = h[n], m.hidden || (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable && (k && (m.stackGraph = k), k = m));","        for (k = this.start; k <= this.end; k++) {","            var r = 0;","            for (n = 0; n < h.length; n++)","                if (m =","                    h[n], m.hidden) m.newStack && (e[k] = NaN, d[k] = NaN);","                else if (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable)","                if (l = this.data[k].axes[this.id].graphs[m.id], g = l.values.value, isNaN(g)) m.newStack && (e[k] = NaN, d[k] = NaN);","                else {","                    var s = AmCharts.getDecimals(g);","                    r < s && (r = s);","                    isNaN(f[k]) ? f[k] = Math.abs(g) : f[k] += Math.abs(g);","                    f[k] = AmCharts.roundTo(f[k], r);","                    s = m.fillToGraph;","                    q && s && (s = this.data[k].axes[this.id].graphs[s.id]) && (l.values.open = s.values.value);","                    \"regular\" == b && (q && (isNaN(c[k]) ? (c[k] = g, l.values.close = g,","                        l.values.open = this.baseValue) : (isNaN(g) ? l.values.close = c[k] : l.values.close = g + c[k], l.values.open = c[k], c[k] = l.values.close)), \"column\" == a && (m.newStack && (e[k] = NaN, d[k] = NaN), l.values.close = g, 0 > g ? (l.values.close = g, isNaN(d[k]) ? l.values.open = p : (l.values.close += d[k], l.values.open = d[k]), d[k] = l.values.close) : (l.values.close = g, isNaN(e[k]) ? l.values.open = p : (l.values.close += e[k], l.values.open = e[k]), e[k] = l.values.close)))","                }","        }","        for (k = this.start; k <= this.end; k++)","            for (n = 0; n < h.length; n++)(m = h[n], m.hidden) ? m.newStack && (e[k] =","                NaN, d[k] = NaN) : (l = m.type, m.chart == this.chart && m.valueAxis == this && a == l && m.stackable && (l = this.data[k].axes[this.id].graphs[m.id], g = l.values.value, isNaN(g) || (c = g / f[k] * 100, l.values.percents = c, l.values.total = f[k], m.newStack && (e[k] = NaN, d[k] = NaN), \"100%\" == b && (isNaN(d[k]) && (d[k] = 0), isNaN(e[k]) && (e[k] = 0), 0 > c ? (l.values.close = AmCharts.fitToBounds(c + d[k], -100, 100), l.values.open = d[k], d[k] = l.values.close) : (l.values.close = AmCharts.fitToBounds(c + e[k], -100, 100), l.values.open = e[k], e[k] = l.values.close)))))","    },","    recalculate: function() {","        var a =","            this.chart,","            b = a.graphs,","            c;","        for (c = 0; c < b.length; c++) {","            var d = b[c];","            if (d.valueAxis == this) {","                var e = \"value\";","                if (\"candlestick\" == d.type || \"ohlc\" == d.type) e = \"open\";","                var f, g, h = this.end + 2,","                    h = AmCharts.fitToBounds(this.end + 1, 0, this.data.length - 1),","                    k = this.start;","                0 < k && k--;","                var l;","                g = this.start;","                d.compareFromStart && (g = 0);","                if (!isNaN(a.startTime) && (l = a.categoryAxis)) {","                    minDuration = l.minDuration();","                    var m = new Date(a.startTime + minDuration / 2),","                        n = AmCharts.resetDateToMin(new Date(a.startTime), l.minPeriod).getTime();","                    AmCharts.resetDateToMin(new Date(m),","                        l.minPeriod).getTime() > n && g++","                }","                if (l = a.recalculateFromDate) a.dataDateFormat && (l = AmCharts.stringToDate(l, a.dataDateFormat)), g = a.getClosestIndex(a.chartData, \"time\", l.getTime(), !0, 0, a.chartData.length), h = a.chartData.length - 1;","                for (l = g; l <= h && (g = this.data[l].axes[this.id].graphs[d.id], f = g.values[e], isNaN(f)); l++);","                this.recBaseValue = f;","                for (e = k; e <= h; e++) {","                    g = this.data[e].axes[this.id].graphs[d.id];","                    g.percents = {};","                    var k = g.values,","                        p;","                    for (p in k) g.percents[p] = \"percents\" != p ? k[p] / f * 100 - 100 : k[p]","                }","            }","        }","    },","    getMinMax: function() {","        var a = !1,","            b = this.chart,","            c = b.graphs,","            d;","        for (d = 0; d < c.length; d++) {","            var e = c[d].type;","            (\"line\" == e || \"step\" == e || \"smoothedLine\" == e) && this.expandMinMax && (a = !0)","        }","        a && (0 < this.start && this.start--, this.end < this.data.length - 1 && this.end++);","        \"serial\" == b.type && (!0 !== b.categoryAxis.parseDates || a || this.end < this.data.length - 1 && this.end++);","        a = this.minMaxMultiplier;","        this.min = this.getMin(this.start, this.end);","        this.max = this.getMax();","        a = (this.max - this.min) * (a - 1);","        this.min -= a;","        this.max += a;","        a = this.guides.length;","        if (this.includeGuidesInMinMax && 0 < a)","            for (b =","                0; b < a; b++) c = this.guides[b], c.toValue < this.min && (this.min = c.toValue), c.value < this.min && (this.min = c.value), c.toValue > this.max && (this.max = c.toValue), c.value > this.max && (this.max = c.value);","        isNaN(this.minimum) || (this.min = this.minimum);","        isNaN(this.maximum) || (this.max = this.maximum);","        this.min > this.max && (a = this.max, this.max = this.min, this.min = a);","        isNaN(this.minTemp) || (this.min = this.minTemp);","        isNaN(this.maxTemp) || (this.max = this.maxTemp);","        this.minReal = this.min;","        this.maxReal = this.max;","        0 === this.min && 0 === this.max && (this.max =","            9);","        this.min > this.max && (this.min = this.max - 1);","        a = this.min;","        b = this.max;","        c = this.max - this.min;","        d = 0 === c ? Math.pow(10, Math.floor(Math.log(Math.abs(this.max)) * Math.LOG10E)) / 10 : Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;","        isNaN(this.maximum) && isNaN(this.maxTemp) && (this.max = Math.ceil(this.max / d) * d + d);","        isNaN(this.minimum) && isNaN(this.minTemp) && (this.min = Math.floor(this.min / d) * d - d);","        0 > this.min && 0 <= a && (this.min = 0);","        0 < this.max && 0 >= b && (this.max = 0);","        \"100%\" == this.stackType && (this.min = 0 > this.min ? -100 : 0, this.max =","            0 > this.max ? 0 : 100);","        c = this.max - this.min;","        d = Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;","        this.step = Math.ceil(c / this.gridCountR / d) * d;","        c = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E));","        c = this.fixStepE(c);","        d = Math.ceil(this.step / c);","        5 < d && (d = 10);","        5 >= d && 2 < d && (d = 5);","        this.step = Math.ceil(this.step / (c * d)) * c * d;","        1 > c ? (this.maxDecCount = Math.abs(Math.log(Math.abs(c)) * Math.LOG10E), this.maxDecCount = Math.round(this.maxDecCount), this.step = AmCharts.roundTo(this.step, this.maxDecCount + 1)) : this.maxDecCount =","            0;","        this.min = this.step * Math.floor(this.min / this.step);","        this.max = this.step * Math.ceil(this.max / this.step);","        0 > this.min && 0 <= a && (this.min = 0);","        0 < this.max && 0 >= b && (this.max = 0);","        1 < this.minReal && 1 < this.max - this.minReal && (this.minReal = Math.floor(this.minReal));","        c = Math.pow(10, Math.floor(Math.log(Math.abs(this.minReal)) * Math.LOG10E));","        0 === this.min && (this.minReal = c);","        0 === this.min && 1 < this.minReal && (this.minReal = 1);","        0 < this.min && 0 < this.minReal - this.step && (this.minReal = this.min + this.step < this.minReal ? this.min + this.step : this.min);","        c = Math.log(b) * Math.LOG10E - Math.log(a) * Math.LOG10E;","        this.logarithmic && (2 < c ? (this.minReal = this.min = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)), this.max = Math.pow(10, Math.ceil(Math.log(Math.abs(b)) * Math.LOG10E))) : (b = Math.pow(10, Math.floor(Math.log(Math.abs(this.min)) * Math.LOG10E)) / 10, a = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)) / 10, b < a && (this.minReal = this.min = 10 * a)))","    },","    fixStepE: function(a) {","        a = a.toExponential(0).split(\"e\");","        var b = Number(a[1]);","        9 == Number(a[0]) && b++;","        return this.generateNumber(1,","            b)","    },","    generateNumber: function(a, b) {","        var c = \"\",","            d;","        d = 0 > b ? Math.abs(b) - 1 : Math.abs(b);","        var e;","        for (e = 0; e < d; e++) c += \"0\";","        return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c)","    },","    getMin: function(a, b) {","        var c, d;","        for (d = a; d <= b; d++) {","            var e = this.data[d].axes[this.id].graphs,","                f;","            for (f in e)","                if (e.hasOwnProperty(f)) {","                    var g = this.chart.getGraphById(f);","                    if (g.includeInMinMax && (!g.hidden || this.includeHidden)) {","                        isNaN(c) && (c = Infinity);","                        this.foundGraphs = !0;","                        g = e[f].values;","                        this.recalculateToPercents && (g = e[f].percents);","                        var h;","                        if (this.minMaxField) h =","                            g[this.minMaxField], h < c && (c = h);","                        else","                            for (var k in g) g.hasOwnProperty(k) && \"percents\" != k && \"total\" != k && (h = g[k], h < c && (c = h))","                    }","                }","        }","        return c","    },","    getMax: function() {","        var a, b;","        for (b = this.start; b <= this.end; b++) {","            var c = this.data[b].axes[this.id].graphs,","                d;","            for (d in c)","                if (c.hasOwnProperty(d)) {","                    var e = this.chart.getGraphById(d);","                    if (e.includeInMinMax && (!e.hidden || this.includeHidden)) {","                        isNaN(a) && (a = -Infinity);","                        this.foundGraphs = !0;","                        e = c[d].values;","                        this.recalculateToPercents && (e = c[d].percents);","                        var f;","                        if (this.minMaxField) f = e[this.minMaxField],","                            f > a && (a = f);","                        else","                            for (var g in e) e.hasOwnProperty(g) && \"percents\" != g && \"total\" != g && (f = e[g], f > a && (a = f))","                    }","                }","        }","        return a","    },","    dispatchZoomEvent: function(a, b) {","        var c = {","            type: \"axisZoomed\",","            startValue: a,","            endValue: b,","            target: this,","            chart: this.chart","        };","        this.fire(c.type, c)","    },","    zoomToValues: function(a, b) {","        if (b < a) {","            var c = b;","            b = a;","            a = c","        }","        a < this.min && (a = this.min);","        b > this.max && (b = this.max);","        c = {","            type: \"axisSelfZoomed\"","        };","        c.chart = this.chart;","        c.valueAxis = this;","        c.multiplier = this.axisWidth / Math.abs(this.getCoordinate(b) - this.getCoordinate(a));","        c.position = \"V\" ==","            this.orientation ? this.reversed ? this.getCoordinate(a) : this.getCoordinate(b) : this.reversed ? this.getCoordinate(b) : this.getCoordinate(a);","        this.fire(c.type, c)","    },","    coordinateToValue: function(a) {","        if (isNaN(a)) return NaN;","        var b = this.axisWidth,","            c = this.stepWidth,","            d = this.reversed,","            e = this.rotate,","            f = this.min,","            g = this.minReal;","        return !0 === this.logarithmic ? Math.pow(10, (e ? !0 === d ? (b - a) / c : a / c : !0 === d ? a / c : (b - a) / c) + Math.log(g) * Math.LOG10E) : !0 === d ? e ? f - (a - b) / c : a / c + f : e ? a / c + f : f - (a - b) / c","    },","    getCoordinate: function(a) {","        if (isNaN(a)) return NaN;","        var b = this.rotate,","            c = this.reversed,","            d = this.axisWidth,","            e = this.stepWidth,","            f = this.min,","            g = this.minReal;","        !0 === this.logarithmic ? (a = Math.log(a) * Math.LOG10E - Math.log(g) * Math.LOG10E, b = b ? !0 === c ? d - e * a : e * a : !0 === c ? e * a : d - e * a) : b = !0 === c ? b ? d - e * (a - f) : e * (a - f) : b ? e * (a - f) : d - e * (a - f);","        b = this.rotate ? b + (this.x - this.viX) : b + (this.y - this.viY);","        1E7 < Math.abs(b) && (b = 1E7 * (b / Math.abs(b)));","        return Math.round(b)","    },","    synchronizeWithAxis: function(a) {","        this.synchronizeWith = a;","        this.listenTo(this.synchronizeWith, \"axisChanged\", this.handleSynchronization)","    },","    handleSynchronization: function(a) {","        var b = this.synchronizeWith;","        a = b.min;","        var c = b.max,","            b = b.step,","            d = this.synchronizationMultiplier;","        d && (this.min = a * d, this.max = c * d, this.step = b * d, a = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)), a = Math.abs(Math.log(Math.abs(a)) * Math.LOG10E), this.maxDecCount = a = Math.round(a), this.draw())","    }","});","AmCharts.RecAxis = AmCharts.Class({","    construct: function(a) {","        var b = a.chart,","            c = a.axisThickness,","            d = a.axisColor,","            e = a.axisAlpha,","            f = a.offset,","            g = a.dx,","            h = a.dy,","            k = a.viX,","            l = a.viY,","            m = a.viH,","            n = a.viW,","            p = b.container;","        \"H\" == a.orientation ? (d = AmCharts.line(p, [0, n], [0, 0], d, e, c), this.axisWidth = a.width, \"bottom\" == a.position ? (a = c / 2 + f + m + l - 1, c = k) : (a = -c / 2 - f + l + h, c = g + k)) : (this.axisWidth = a.height, \"right\" == a.position ? (d = AmCharts.line(p, [0, 0, -g], [0, m, m - h], d, e, c), a = l + h, c = c / 2 + f + g + n + k - 1) : (d = AmCharts.line(p, [0, 0], [0, m], d, e, c), a = l, c = -c / 2 - f + k));","        d.translate(c,","            a);","        b.axesSet.push(d);","        this.set = d","    }","});","AmCharts.RecItem = AmCharts.Class({","    construct: function(a, b, c, d, e, f, g, h, k, l, m) {","        b = Math.round(b);","        this.value = c;","        void 0 == c && (c = \"\");","        k || (k = 0);","        void 0 == d && (d = !0);","        var n = a.chart.fontFamily,","            p = a.fontSize;","        void 0 == p && (p = a.chart.fontSize);","        var q = a.color;","        void 0 == q && (q = a.chart.color);","        void 0 !== m && (q = m);","        var r = a.chart.container,","            s = r.set();","        this.set = s;","        var w = a.axisThickness,","            v = a.axisColor,","            t = a.axisAlpha,","            u = a.tickLength,","            x = a.gridAlpha,","            E = a.gridThickness,","            A = a.gridColor,","            z = a.dashLength,","            H = a.fillColor,","            F = a.fillAlpha,","            G = a.labelsEnabled;","        m = a.labelRotation;","        var V = a.counter,","            N = a.inside,","            ia = a.labelOffset,","            da = a.dx,","            ba = a.dy,","            Sa = a.orientation,","            na = a.position,","            ta = a.previousCoord,","            L = a.viH,","            Y = a.viW,","            $ = a.offset,","            oa, W;","        g ? (G = !0, isNaN(g.tickLength) || (u = g.tickLength), void 0 != g.lineColor && (A = g.lineColor), void 0 != g.color && (q = g.color), isNaN(g.lineAlpha) || (x = g.lineAlpha), isNaN(g.dashLength) || (z = g.dashLength), isNaN(g.lineThickness) || (E = g.lineThickness), !0 === g.inside && (N = !0), isNaN(g.labelRotation) || (m = g.labelRotation), isNaN(g.fontSize) || (p = g.fontSize), g.position && (na = g.position), void 0 !==","            g.boldLabel && (h = g.boldLabel), isNaN(g.labelOffset) || (ia = g.labelOffset)) : \"\" === c && (u = 0);","        W = \"start\";","        e && (W = \"middle\");","        var Z = m * Math.PI / 180,","            pa, I = 0,","            D = 0,","            aa = 0,","            S = pa = 0,","            Ta = 0;","        \"V\" == Sa && (m = 0);","        var T;","        G && (T = a.autoWrap && 0 === m ? AmCharts.wrappedText(r, c, q, n, p, W, h, e, 0) : AmCharts.text(r, c, q, n, p, W, h), W = T.getBBox(), S = W.width, Ta = W.height);","        if (\"H\" == Sa) {","            if (0 <= b && b <= Y + 1 && (0 < u && 0 < t && b + k <= Y + 1 && (oa = AmCharts.line(r, [b + k, b + k], [0, u], v, t, E), s.push(oa)), 0 < x && (W = AmCharts.line(r, [b, b + da, b + da], [L, L + ba, ba], A, x, E, z), s.push(W))), D = 0, I = b, g && 90 ==","                m && N && (I -= p), !1 === d ? (W = \"start\", D = \"bottom\" == na ? N ? D + u : D - u : N ? D - u : D + u, I += 3, e && (I += e / 2 - 3, W = \"middle\"), 0 < m && (W = \"middle\")) : W = \"middle\", 1 == V && 0 < F && !g && !l && ta < Y && (d = AmCharts.fitToBounds(b, 0, Y), ta = AmCharts.fitToBounds(ta, 0, Y), pa = d - ta, 0 < pa && (fill = AmCharts.rect(r, pa, a.height, H, F), fill.translate(d - pa + da, ba), s.push(fill))), \"bottom\" == na ? (D += L + p / 2 + $, N ? (0 < m ? (D = L - S / 2 * Math.sin(Z) - u - 3, I += S / 2 * Math.cos(Z) - 4 + 2) : 0 > m ? (D = L + S * Math.sin(Z) - u - 3 + 2, I += -S * Math.cos(Z) - Ta * Math.sin(Z) - 4) : D -= u + p + 3 + 3, D -= ia) : (0 < m ? (D = L + S / 2 * Math.sin(Z) + u +","                    3, I -= S / 2 * Math.cos(Z)) : 0 > m ? (D = L + u + 3 - S / 2 * Math.sin(Z) + 2, I += S / 2 * Math.cos(Z)) : D += u + w + 3 + 3, D += ia)) : (D += ba + p / 2 - $, I += da, N ? (0 < m ? (D = S / 2 * Math.sin(Z) + u + 3, I -= S / 2 * Math.cos(Z)) : D += u + 3, D += ia) : (0 < m ? (D = -(S / 2) * Math.sin(Z) - u - 6, I += S / 2 * Math.cos(Z)) : D -= u + p + 3 + w + 3, D -= ia)), \"bottom\" == na ? pa = (N ? L - u - 1 : L + w - 1) + $ : (aa = da, pa = (N ? ba : ba - u - w + 1) - $), f && (I += f), f = I, 0 < m && (f += S / 2 * Math.cos(Z)), T && (p = 0, N && (p = S / 2 * Math.cos(Z)), f + p > Y + 2 || 0 > f)) T.remove(), T = null","        }","        else {","            0 <= b && b <= L + 1 && (0 < u && 0 < t && b + k <= L + 1 && (oa = AmCharts.line(r, [0, u], [b + k, b + k], v, t, E), s.push(oa)),","                0 < x && (W = AmCharts.line(r, [0, da, Y + da], [b, b + ba, b + ba], A, x, E, z), s.push(W)));","            W = \"end\";","            if (!0 === N && \"left\" == na || !1 === N && \"right\" == na) W = \"start\";","            D = b - p / 2;","            1 == V && 0 < F && !g && !l && (d = AmCharts.fitToBounds(b, 0, L), ta = AmCharts.fitToBounds(ta, 0, L), Z = d - ta, fill = AmCharts.polygon(r, [0, a.width, a.width, 0], [0, 0, Z, Z], H, F), fill.translate(da, d - Z + ba), s.push(fill));","            D += p / 2;","            \"right\" == na ? (I += da + Y + $, D += ba, N ? (f || (D -= p / 2 + 3), I = I - (u + 4) - ia) : (I += u + 4 + w, D -= 2, I += ia)) : N ? (I += u + 4 - $, f || (D -= p / 2 + 3), g && (I += da, D += ba), I += ia) : (I += -u - w - 4 - 2 - $, D -= 2, I -= ia);","            oa &&","                (\"right\" == na ? (aa += da + $ + Y, pa += ba, aa = N ? aa - w : aa + w) : (aa -= $, N || (aa -= u + w)));","            f && (D += f);","            N = -3;","            \"right\" == na && (N += ba);","            T && (D > L + 1 || D < N) && (T.remove(), T = null)","        }","        oa && oa.translate(aa, pa);","        !1 === a.visible && (oa && oa.remove(), T && (T.remove(), T = null));","        T && (T.attr({","            \"text-anchor\": W","        }), T.translate(I, D), 0 !== m && T.rotate(-m, a.chart.backgroundColor), a.allLabels.push(T), \" \" != c && (this.label = T));","        l || (a.counter = 0 === V ? 1 : 0, a.previousCoord = b);","        0 === this.set.node.childNodes.length && this.set.remove()","    },","    graphics: function() {","        return this.set","    },","    getLabel: function() {","        return this.label","    }","});","AmCharts.RecFill = AmCharts.Class({","    construct: function(a, b, c, d) {","        var e = a.dx,","            f = a.dy,","            g = a.orientation,","            h = 0;","        if (c < b) {","            var k = b;","            b = c;","            c = k","        }","        var l = d.fillAlpha;","        isNaN(l) && (l = 0);","        k = a.chart.container;","        d = d.fillColor;","        \"V\" == g ? (b = AmCharts.fitToBounds(b, 0, a.viH), c = AmCharts.fitToBounds(c, 0, a.viH)) : (b = AmCharts.fitToBounds(b, 0, a.viW), c = AmCharts.fitToBounds(c, 0, a.viW));","        c -= b;","        isNaN(c) && (c = 4, h = 2, l = 0);","        0 > c && \"object\" == typeof d && (d = d.join(\",\").split(\",\").reverse());","        \"V\" == g ? (a = AmCharts.rect(k, a.width, c, d, l), a.translate(e, b - h + f)) : (a = AmCharts.rect(k,","            c, a.height, d, l), a.translate(b - h + e, f));","        this.set = k.set([a])","    },","    graphics: function() {","        return this.set","    },","    getLabel: function() {}","});","AmCharts.AmChart = AmCharts.Class({","    construct: function(a) {","        this.theme = a;","        this.version = \"3.11.1\";","        AmCharts.addChart(this);","        this.createEvents(\"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\");","        this.height = this.width = \"100%\";","        this.dataChanged = !0;","        this.chartCreated = !1;","        this.previousWidth = this.previousHeight = 0;","        this.backgroundColor = \"#FFFFFF\";","        this.borderAlpha = this.backgroundAlpha = 0;","        this.color = this.borderColor = \"#000000\";","        this.fontFamily = \"Verdana\";","        this.fontSize = 11;","        this.usePrefixes = !1;","        this.precision = -1;","        this.percentPrecision =","            2;","        this.decimalSeparator = \".\";","        this.thousandsSeparator = \",\";","        this.labels = [];","        this.allLabels = [];","        this.titles = [];","        this.marginRight = this.marginLeft = this.autoMarginOffset = 0;","        this.timeOuts = [];","        this.creditsPosition = \"top-left\";","        var b = document.createElement(\"div\"),","            c = b.style;","        c.overflow = \"hidden\";","        c.position = \"relative\";","        c.textAlign = \"left\";","        this.chartDiv = b;","        b = document.createElement(\"div\");","        c = b.style;","        c.overflow = \"hidden\";","        c.position = \"relative\";","        c.textAlign = \"left\";","        this.legendDiv = b;","        this.titleHeight = 0;","        this.hideBalloonTime = 150;","        this.handDrawScatter =","            2;","        this.handDrawThickness = 1;","        this.prefixesOfBigNumbers = [{","            number: 1E3,","            prefix: \"k\"","        }, {","            number: 1E6,","            prefix: \"M\"","        }, {","            number: 1E9,","            prefix: \"G\"","        }, {","            number: 1E12,","            prefix: \"T\"","        }, {","            number: 1E15,","            prefix: \"P\"","        }, {","            number: 1E18,","            prefix: \"E\"","        }, {","            number: 1E21,","            prefix: \"Z\"","        }, {","            number: 1E24,","            prefix: \"Y\"","        }];","        this.prefixesOfSmallNumbers = [{","            number: 1E-24,","            prefix: \"y\"","        }, {","            number: 1E-21,","            prefix: \"z\"","        }, {","            number: 1E-18,","            prefix: \"a\"","        }, {","            number: 1E-15,","            prefix: \"f\"","        }, {","            number: 1E-12,","            prefix: \"p\"","        }, {","            number: 1E-9,","            prefix: \"n\"","        }, {","            number: 1E-6,","            prefix: \"μ\"","        }, {","            number: .001,","            prefix: \"m\"","        }];","        this.panEventsEnabled = !0;","        AmCharts.bezierX = 3;","        AmCharts.bezierY = 6;","        this.product = \"amcharts\";","        this.animations = [];","        this.balloon = new AmCharts.AmBalloon(this.theme);","        this.balloon.chart = this;","        AmCharts.applyTheme(this, a, \"AmChart\")","    },","    drawChart: function() {","        this.drawBackground();","        this.redrawLabels();","        this.drawTitles();","        this.brr()","    },","    drawBackground: function() {","        AmCharts.remove(this.background);","        var a = this.container,","            b = this.backgroundColor,","            c = this.backgroundAlpha,","            d = this.set;","        AmCharts.isModern || 0 !== c || (c = .001);","        var e = this.updateWidth();","        this.realWidth = e;","        var f = this.updateHeight();","        this.realHeight = f;","        this.background = b = AmCharts.polygon(a, [0, e - 1, e - 1, 0], [0, 0, f - 1, f - 1], b, c, 1, this.borderColor, this.borderAlpha);","        d.push(b);","        if (b = this.backgroundImage) this.path && (b = this.path + b), this.bgImg = a = a.image(b, 0, 0, e, f), d.push(a)","    },","    drawTitles: function() {","        var a = this.titles;","        if (AmCharts.ifArray(a)) {","            var b = 20,","                c;","            for (c = 0; c < a.length; c++) {","                var d = a[c],","                    e = d.color;","                void 0 === e && (e = this.color);","                var f = d.size;","                isNaN(f) && (f = this.fontSize + 2);","                isNaN(d.alpha);","                var g = this.marginLeft,","                    e = AmCharts.text(this.container,","                        d.text, e, this.fontFamily, f);","                e.translate(g + (this.realWidth - this.marginRight - g) / 2, b);","                e.node.style.pointerEvents = \"none\";","                g = !0;","                void 0 !== d.bold && (g = d.bold);","                g && e.attr({","                    \"font-weight\": \"bold\"","                });","                e.attr({","                    opacity: d.alpha","                });","                b += f + 6;","                this.freeLabelsSet.push(e)","            }","        }","    },","    write: function(a) {","        if (a = \"object\" != typeof a ? document.getElementById(a) : a) {","            a.innerHTML = \"\";","            this.div = a;","            a.style.overflow = \"hidden\";","            a.style.textAlign = \"left\";","            var b = this.chartDiv,","                c = this.legendDiv,","                d = this.legend,","                e = c.style,","                f = b.style;","            this.measure();","            var g, h = document.createElement(\"div\");","            g = h.style;","            g.position = \"relative\";","            this.containerDiv = h;","            a.appendChild(h);","            var k = this.exportConfig;","            k && AmCharts.AmExport && !this.AmExport && (this.AmExport = new AmCharts.AmExport(this, k));","            this.amExport && AmCharts.AmExport && (this.AmExport = AmCharts.extend(this.amExport, new AmCharts.AmExport(this), !0));","            this.AmExport && this.AmExport.init && this.AmExport.init();","            if (d) switch (d = this.addLegend(d, d.divId), d.position) {","                case \"bottom\":","                    h.appendChild(b);","                    h.appendChild(c);","                    break;","                case \"top\":","                    h.appendChild(c);","                    h.appendChild(b);","                    break;","                case \"absolute\":","                    g.width = a.style.width;","                    g.height = a.style.height;","                    e.position = \"absolute\";","                    f.position = \"absolute\";","                    void 0 !== d.left && (e.left = d.left + \"px\");","                    void 0 !== d.right && (e.right = d.right + \"px\");","                    void 0 !== d.top && (e.top = d.top + \"px\");","                    void 0 !== d.bottom && (e.bottom = d.bottom + \"px\");","                    d.marginLeft = 0;","                    d.marginRight = 0;","                    h.appendChild(b);","                    h.appendChild(c);","                    break;","                case \"right\":","                    g.width = a.style.width;","                    g.height = a.style.height;","                    e.position = \"relative\";","                    f.position = \"absolute\";","                    h.appendChild(b);","                    h.appendChild(c);","                    break;","                case \"left\":","                    g.width = a.style.width;","                    g.height = a.style.height;","                    e.position = \"absolute\";","                    f.position = \"relative\";","                    h.appendChild(b);","                    h.appendChild(c);","                    break;","                case \"outside\":","                    h.appendChild(b)","            }","            else h.appendChild(b);","            this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);","            this.initChart()","        }","    },","    createLabelsSet: function() {","        AmCharts.remove(this.labelsSet);","        this.labelsSet = this.container.set();","        this.freeLabelsSet.push(this.labelsSet)","    },","    initChart: function() {","        AmCharts.callInitHandler(this);","        AmCharts.applyLang(this.language, this);","        var a = this.numberFormatter;","        a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));","        (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision);","        this.nf = {","            precision: this.precision,","            thousandsSeparator: this.thousandsSeparator,","            decimalSeparator: this.decimalSeparator","        };","        this.pf = {","            precision: this.percentPrecision,","            thousandsSeparator: this.thousandsSeparator,","            decimalSeparator: this.decimalSeparator","        };","        this.divIsFixed = AmCharts.findIfFixed(this.chartDiv);","        this.previousHeight = this.divRealHeight;","        this.previousWidth = this.divRealWidth;","        this.destroy();","        this.startInterval();","        a = 0;","        document.attachEvent && !window.opera && (a = 1);","        this.dmouseX = this.dmouseY = 0;","        var b = document.getElementsByTagName(\"html\")[0];","        b && window.getComputedStyle && (b = window.getComputedStyle(b, null)) && (this.dmouseY = AmCharts.removePx(b.getPropertyValue(\"margin-top\")), this.dmouseX = AmCharts.removePx(b.getPropertyValue(\"margin-left\")));","        this.mouseMode = a;","        (a = this.container) ? (a.container.innerHTML = \"\", this.chartDiv.appendChild(a.container), a.setSize(this.realWidth, this.realHeight)) : a = new AmCharts.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this);","        AmCharts.VML || AmCharts.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, this.container = a, this.set && this.set.remove(), this.set = a.set(), this.gridSet && this.gridSet.remove(), this.gridSet = a.set(), this.cursorLineSet && this.cursorLineSet.remove(),","                this.cursorLineSet = a.set(), this.graphsBehindSet && this.graphsBehindSet.remove(), this.graphsBehindSet = a.set(), this.bulletBehindSet && this.bulletBehindSet.remove(), this.bulletBehindSet = a.set(), this.columnSet && this.columnSet.remove(), this.columnSet = a.set(), this.graphsSet && this.graphsSet.remove(), this.graphsSet = a.set(), this.trendLinesSet && this.trendLinesSet.remove(), this.trendLinesSet = a.set(), this.axesLabelsSet && this.axesLabelsSet.remove(), this.axesLabelsSet = a.set(), this.axesSet && this.axesSet.remove(),","                this.axesSet = a.set(), this.cursorSet && this.cursorSet.remove(), this.cursorSet = a.set(), this.scrollbarsSet && this.scrollbarsSet.remove(), this.scrollbarsSet = a.set(), this.bulletSet && this.bulletSet.remove(), this.bulletSet = a.set(), this.freeLabelsSet && this.freeLabelsSet.remove(), this.freeLabelsSet = a.set(), this.balloonsSet && this.balloonsSet.remove(), this.balloonsSet = a.set(), this.zoomButtonSet && this.zoomButtonSet.remove(), this.zoomButtonSet = a.set(), this.linkSet && this.linkSet.remove(), this.linkSet = a.set(), this.renderFix()) :","            this.fire(\"failed\", {","                type: \"failed\",","                chart: this","            })","    },","    measure: function() {","        var a = this.div;","        if (a) {","            var b = this.chartDiv,","                c = a.offsetWidth,","                d = a.offsetHeight,","                e = this.container;","            a.clientHeight && (c = a.clientWidth, d = a.clientHeight);","            var f = AmCharts.removePx(AmCharts.getStyle(a, \"padding-left\")),","                g = AmCharts.removePx(AmCharts.getStyle(a, \"padding-right\")),","                h = AmCharts.removePx(AmCharts.getStyle(a, \"padding-top\")),","                k = AmCharts.removePx(AmCharts.getStyle(a, \"padding-bottom\"));","            isNaN(f) || (c -= f);","            isNaN(g) || (c -= g);","            isNaN(h) || (d -= h);","            isNaN(k) ||","                (d -= k);","            f = a.style;","            a = f.width;","            f = f.height; - 1 != a.indexOf(\"px\") && (c = AmCharts.removePx(a)); - 1 != f.indexOf(\"px\") && (d = AmCharts.removePx(f));","            a = AmCharts.toCoordinate(this.width, c);","            f = AmCharts.toCoordinate(this.height, d);","            this.balloon = AmCharts.processObject(this.balloon, AmCharts.AmBalloon, this.theme);","            this.balloon.chart = this;","            (a != this.previousWidth || f != this.previousHeight) && 0 < a && 0 < f && (b.style.width = a + \"px\", b.style.height = f + \"px\", e && e.setSize(a, f));","            this.balloon.setBounds(2, 2, a - 2, f);","            this.realWidth = a;","            this.realHeight = f;","            this.divRealWidth = c;","            this.divRealHeight = d","        }","    },","    destroy: function() {","        this.chartDiv.innerHTML = \"\";","        this.clearTimeOuts();","        this.interval && clearInterval(this.interval);","        this.interval = NaN","    },","    clearTimeOuts: function() {","        var a = this.timeOuts;","        if (a) {","            var b;","            for (b = 0; b < a.length; b++) clearTimeout(a[b])","        }","        this.timeOuts = []","    },","    clear: function(a) {","        AmCharts.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);","        this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;","        this.clearTimeOuts();","        this.interval && clearInterval(this.interval);","        this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));","        a || AmCharts.removeChart(this)","    },","    setMouseCursor: function(a) {","        \"auto\" == a && AmCharts.isNN && (a = \"default\");","        this.chartDiv.style.cursor = a;","        this.legendDiv.style.cursor = a","    },","    redrawLabels: function() {","        this.labels = [];","        var a = this.allLabels;","        this.createLabelsSet();","        var b;","        for (b = 0; b < a.length; b++) this.drawLabel(a[b])","    },","    drawLabel: function(a) {","        if (this.container) {","            var b = a.y,","                c = a.text,","                d = a.align,","                e =","                a.size,","                f = a.color,","                g = a.rotation,","                h = a.alpha,","                k = a.bold,","                l = AmCharts.toCoordinate(a.x, this.realWidth),","                b = AmCharts.toCoordinate(b, this.realHeight);","            l || (l = 0);","            b || (b = 0);","            void 0 === f && (f = this.color);","            isNaN(e) && (e = this.fontSize);","            d || (d = \"start\");","            \"left\" == d && (d = \"start\");","            \"right\" == d && (d = \"end\");","            \"center\" == d && (d = \"middle\", g ? b = this.realHeight - b + b / 2 : l = this.realWidth / 2 - l);","            void 0 === h && (h = 1);","            void 0 === g && (g = 0);","            b += e / 2;","            c = AmCharts.text(this.container, c, f, this.fontFamily, e, d, k, h);","            c.translate(l, b);","            0 !== g && c.rotate(g);","            a.url ? (c.setAttr(\"cursor\",","                \"pointer\"), c.click(function() {","                AmCharts.getURL(a.url)","            })) : c.node.style.pointerEvents = \"none\";","            this.labelsSet.push(c);","            this.labels.push(c)","        }","    },","    addLabel: function(a, b, c, d, e, f, g, h, k, l) {","        a = {","            x: a,","            y: b,","            text: c,","            align: d,","            size: e,","            color: f,","            alpha: h,","            rotation: g,","            bold: k,","            url: l","        };","        this.container && this.drawLabel(a);","        this.allLabels.push(a)","    },","    clearLabels: function() {","        var a = this.labels,","            b;","        for (b = a.length - 1; 0 <= b; b--) a[b].remove();","        this.labels = [];","        this.allLabels = []","    },","    updateHeight: function() {","        var a = this.divRealHeight,","            b = this.legend;","        if (b) {","            var c = this.legendDiv.offsetHeight,","                b = b.position;","            if (\"top\" == b || \"bottom\" == b) {","                a -= c;","                if (0 > a || isNaN(a)) a = 0;","                this.chartDiv.style.height = a + \"px\"","            }","        }","        return a","    },","    updateWidth: function() {","        var a = this.divRealWidth,","            b = this.divRealHeight,","            c = this.legend;","        if (c) {","            var d = this.legendDiv,","                e = d.offsetWidth;","            isNaN(c.width) || (e = c.width);","            var f = d.offsetHeight,","                d = d.style,","                g = this.chartDiv.style,","                c = c.position;","            if (\"right\" == c || \"left\" == c) {","                a -= e;","                if (0 > a || isNaN(a)) a = 0;","                g.width = a + \"px\";","                \"left\" == c ? g.left = e + \"px\" : d.left = a + \"px\";","                b > f && (d.top = (b - f) / 2 + \"px\")","            }","        }","        return a","    },","    getTitleHeight: function() {","        var a =","            0,","            b = this.titles;","        if (0 < b.length) {","            var a = 15,","                c;","            for (c = 0; c < b.length; c++) {","                var d = b[c].size;","                isNaN(d) && (d = this.fontSize + 2);","                a += d + 6","            }","        }","        return a","    },","    addTitle: function(a, b, c, d, e) {","        isNaN(b) && (b = this.fontSize + 2);","        a = {","            text: a,","            size: b,","            color: c,","            alpha: d,","            bold: e","        };","        this.titles.push(a);","        return a","    },","    addMouseWheel: function() {","        var a = this;","        window.addEventListener && !a.wheelAdded && (window.addEventListener(\"DOMMouseScroll\", function(b) {","            a.handleWheel.call(a, b)","        }, !1), document.addEventListener(\"mousewheel\", function(b) {","            a.handleWheel.call(a, b)","        }, !1), a.wheelAdded = !0)","    },","    handleWheel: function(a) {","        if (this.mouseIsOver) {","            var b = 0;","            a || (a = window.event);","            a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);","            b && this.handleWheelReal(b, a.shiftKey);","            a.preventDefault && a.preventDefault()","        }","    },","    handleWheelReal: function(a) {},","    addListeners: function() {","        var a = this,","            b = a.chartDiv;","        document.addEventListener ? (a.panEventsEnabled && (b.style.msTouchAction = \"none\", \"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function(b) {","            a.handleTouchMove.call(a, b);","            a.handleTouchStart.call(a,","                b)","        }, !0), b.addEventListener(\"touchmove\", function(b) {","            a.handleTouchMove.call(a, b)","        }, !0), b.addEventListener(\"touchend\", function(b) {","            a.handleTouchEnd.call(a, b)","        }, !0))), b.addEventListener(\"mousedown\", function(b) {","            a.mouseIsOver = !0;","            a.handleMouseMove.call(a, b);","            a.handleMouseDown.call(a, b)","        }, !0), b.addEventListener(\"mouseover\", function(b) {","            a.handleMouseOver.call(a, b)","        }, !0), b.addEventListener(\"mouseout\", function(b) {","            a.handleMouseOut.call(a, b)","        }, !0)) : (b.attachEvent(\"onmousedown\", function(b) {","                a.handleMouseDown.call(a, b)","            }),","            b.attachEvent(\"onmouseover\", function(b) {","                a.handleMouseOver.call(a, b)","            }), b.attachEvent(\"onmouseout\", function(b) {","                a.handleMouseOut.call(a, b)","            }))","    },","    dispDUpd: function() {","        var a;","        this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, a = \"dataUpdated\", this.fire(a, {","            type: a,","            chart: this","        }));","        this.chartCreated || (a = \"init\", this.fire(a, {","            type: a,","            chart: this","        }));","        this.chartRendered || (a = \"rendered\", this.fire(a, {","            type: a,","            chart: this","        }), this.chartRendered = !0);","        a = \"drawn\";","        this.fire(a, {","            type: a,","            chart: this","        })","    },","    validateSize: function() {","        var a = this;","        a.measure();","        var b = a.legend;","        if ((a.realWidth != a.previousWidth || a.realHeight != a.previousHeight) && 0 < a.realWidth && 0 < a.realHeight) {","            a.sizeChanged = !0;","            if (b) {","                clearTimeout(a.legendInitTO);","                var c = setTimeout(function() {","                    b.invalidateSize()","                }, 100);","                a.timeOuts.push(c);","                a.legendInitTO = c","            }","            a.marginsUpdated = \"xy\" != a.type ? !1 : !0;","            clearTimeout(a.initTO);","            c = setTimeout(function() {","                a.initChart()","            }, 150);","            a.timeOuts.push(c);","            a.initTO = c","        }","        a.renderFix();","        b && b.renderFix()","    },","    invalidateSize: function() {","        this.previousHeight = this.previousWidth = NaN;","        this.invalidateSizeReal()","    },","    invalidateSizeReal: function() {","        var a = this;","        a.marginsUpdated = !1;","        clearTimeout(a.validateTO);","        var b = setTimeout(function() {","            a.validateSize()","        }, 5);","        a.timeOuts.push(b);","        a.validateTO = b","    },","    validateData: function(a) {","        this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = \"xy\" != this.type ? !1 : !0, this.initChart(a))","    },","    validateNow: function() {","        this.chartRendered = !1;","        this.write(this.div)","    },","    showItem: function(a) {","        a.hidden = !1;","        this.initChart()","    },","    hideItem: function(a) {","        a.hidden = !0;","        this.initChart()","    },","    hideBalloon: function() {","        var a = this;","        clearInterval(a.hoverInt);","        clearTimeout(a.balloonTO);","        a.hoverInt = setTimeout(function() {","            a.hideBalloonReal.call(a)","        }, a.hideBalloonTime)","    },","    cleanChart: function() {},","    hideBalloonReal: function() {","        var a = this.balloon;","        a && a.hide()","    },","    showBalloon: function(a, b, c, d, e) {","        var f = this;","        clearTimeout(f.balloonTO);","        clearInterval(f.hoverInt);","        f.balloonTO = setTimeout(function() {","            f.showBalloonReal.call(f, a, b, c, d, e)","        }, 1)","    },","    showBalloonReal: function(a, b, c, d, e) {","        this.handleMouseMove();","        var f = this.balloon;","        f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(d, e), f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a))","    },","    handleTouchMove: function(a) {","        this.hideBalloon();","        var b = this.chartDiv;","        a.touches && (a = a.touches.item(0), this.mouseX = a.pageX - AmCharts.findPosX(b), this.mouseY = a.pageY - AmCharts.findPosY(b))","    },","    handleMouseOver: function(a) {","        AmCharts.resetMouseOver();","        this.mouseIsOver = !0","    },","    handleMouseOut: function(a) {","        AmCharts.resetMouseOver();","        this.mouseIsOver = !1","    },","    handleMouseMove: function(a) {","        if (this.mouseIsOver) {","            var b = this.chartDiv;","            a || (a = window.event);","            var c, d;","            if (a) {","                this.posX = AmCharts.findPosX(b);","                this.posY = AmCharts.findPosY(b);","                switch (this.mouseMode) {","                    case 1:","                        c = a.clientX - this.posX;","                        d = a.clientY - this.posY;","                        if (!this.divIsFixed) {","                            var b = document.body,","                                e, f;","                            b && (e = b.scrollLeft, y1 = b.scrollTop);","                            if (b = document.documentElement) f = b.scrollLeft, y2 = b.scrollTop;","                            e = Math.max(e, f);","                            f = Math.max(y1, y2);","                            c += e;","                            d += f","                        }","                        break;","                    case 0:","                        this.divIsFixed ? (c = a.clientX - this.posX, d = a.clientY - this.posY) : (c = a.pageX - this.posX, d = a.pageY - this.posY)","                }","                a.touches && (a = a.touches.item(0),","                    c = a.pageX - this.posX, d = a.pageY - this.posY);","                this.mouseX = c - this.dmouseX;","                this.mouseY = d - this.dmouseY","            }","        }","    },","    handleTouchStart: function(a) {","        this.handleMouseDown(a)","    },","    handleTouchEnd: function(a) {","        AmCharts.resetMouseOver();","        this.handleReleaseOutside(a)","    },","    handleReleaseOutside: function(a) {},","    handleMouseDown: function(a) {","        AmCharts.resetMouseOver();","        this.mouseIsOver = !0;","        a && a.preventDefault && a.preventDefault()","    },","    addLegend: function(a, b) {","        a = AmCharts.processObject(a, AmCharts.AmLegend, this.theme);","        a.divId = b;","        var c;","        c = \"object\" != typeof b &&","            b ? document.getElementById(b) : b;","        this.legend = a;","        a.chart = this;","        c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv;","        c = this.handleLegendEvent;","        this.listenTo(a, \"showItem\", c);","        this.listenTo(a, \"hideItem\", c);","        this.listenTo(a, \"clickMarker\", c);","        this.listenTo(a, \"rollOverItem\", c);","        this.listenTo(a, \"rollOutItem\", c);","        this.listenTo(a, \"rollOverMarker\", c);","        this.listenTo(a, \"rollOutMarker\", c);","        this.listenTo(a, \"clickLabel\", c);","        return a","    },","    removeLegend: function() {","        this.legend = void 0;","        this.legendDiv.innerHTML = \"\"","    },","    handleResize: function() {","        (AmCharts.isPercents(this.width) ||","            AmCharts.isPercents(this.height)) && this.invalidateSizeReal();","        this.renderFix()","    },","    renderFix: function() {","        if (!AmCharts.VML) {","            var a = this.container;","            a && a.renderFix()","        }","    },","    getSVG: function() {","        if (AmCharts.hasSVG) return this.container","    },","    animate: function(a, b, c, d, e, f, g) {","        a[\"an_\" + b] && AmCharts.removeFromArray(this.animations, a[\"an_\" + b]);","        c = {","            obj: a,","            frame: 0,","            attribute: b,","            from: c,","            to: d,","            time: e,","            effect: f,","            suffix: g","        };","        a[\"an_\" + b] = c;","        this.animations.push(c);","        return c","    },","    setLegendData: function(a) {","        var b = this.legend;","        b && b.setData(a)","    },","    startInterval: function() {","        var a =","            this;","        clearInterval(a.interval);","        a.interval = setInterval(function() {","            a.updateAnimations.call(a)","        }, AmCharts.updateRate)","    },","    stopAnim: function(a) {","        AmCharts.removeFromArray(this.animations, a)","    },","    updateAnimations: function() {","        var a;","        this.container && this.container.update();","        for (a = this.animations.length - 1; 0 <= a; a--) {","            var b = this.animations[a],","                c = 1E3 * b.time / AmCharts.updateRate,","                d = b.frame + 1,","                e = b.obj,","                f = b.attribute;","            if (d <= c) {","                b.frame++;","                var g = Number(b.from),","                    h = Number(b.to) - g,","                    c = AmCharts[b.effect](0, d, g, h, c);","                0 === h ? (this.animations.splice(a,","                    1), e.node.style[f] = Number(b.to) + b.suffix) : e.node.style[f] = c + b.suffix","            }","            else e.node.style[f] = Number(b.to) + b.suffix, this.animations.splice(a, 1)","        }","    },","    inIframe: function() {","        try {","            return window.self !== window.top","        }","        catch (a) {","            return !0","        }","    },","    brr: function() {","        var a = window.location.hostname.split(\".\"),","            b;","        2 <= a.length && (b = a[a.length - 2] + \".\" + a[a.length - 1]);","        this.amLink && (a = this.amLink.parentNode) && a.removeChild(this.amLink);","        a = this.creditsPosition;","        if (\"amcharts.com\" != b || !0 === this.inIframe()) {","            var c = b = 0,","                d = this.realWidth,","                e = this.realHeight;","            if (\"serial\" == this.type || \"xy\" == this.type) b = this.marginLeftReal, c = this.marginTopReal, d = b + this.plotAreaWidth, e = c + this.plotAreaHeight;","            var f = \"http://www.amcharts.com/javascript-charts/\",","                g = \"JavaScript charts\",","                h = \"StockChart By GetFreakingRich\";","            \"ammap\" == this.product && (f = \"http://www.ammap.com/javascript-maps/\", g = \"Interactive JavaScript maps\", h = \"JS map by amCharts\");","            var k = document.createElement(\"a\"),","                h = document.createTextNode(h);","            k.setAttribute(\"href\", f);","            k.setAttribute(\"title\", g);","            k.appendChild(h);","            this.chartDiv.appendChild(k);","            this.amLink = k;","            f = k.style;","            f.position = \"absolute\";","            f.textDecoration = \"none\";","            f.color = this.color;","            f.fontFamily = this.fontFamily;","            f.fontSize = this.fontSize + \"px\";","            f.opacity = .7;","            f.display = \"block\";","            var g = k.offsetWidth,","                k = k.offsetHeight,","                h = 5 + b,","                l = c + 5;","            \"bottom-left\" == a && (h = 5 + b, l = e - k - 3);","            \"bottom-right\" == a && (h = d - g - 5, l = e - k - 3);","            \"top-right\" == a && (h = d - g - 5, l = c + 5);","            f.left = h + \"px\";","            f.top = l + \"px\"","        }","    }","});","AmCharts.Slice = AmCharts.Class({","    construct: function() {}","});","AmCharts.SerialDataItem = AmCharts.Class({","    construct: function() {}","});","AmCharts.GraphDataItem = AmCharts.Class({","    construct: function() {}","});","AmCharts.Guide = AmCharts.Class({","    construct: function(a) {","        this.cname = \"Guide\";","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.AmGraph = AmCharts.Class({","    construct: function(a) {","        this.cname = \"AmGraph\";","        this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\");","        this.type = \"line\";","        this.stackable = !0;","        this.columnCount = 1;","        this.columnIndex = 0;","        this.centerCustomBullets = this.showBalloon = !0;","        this.maxBulletSize = 50;","        this.minBulletSize = 4;","        this.balloonText = \"[[value]]\";","        this.hidden = this.scrollbar = this.animationPlayed = !1;","        this.pointPosition = \"middle\";","        this.depthCount = 1;","        this.includeInMinMax = !0;","        this.negativeBase = 0;","        this.visibleInLegend = !0;","        this.showAllValueLabels = !1;","        this.showBulletsAt = this.showBalloonAt = \"close\";","        this.lineThickness = 1;","        this.dashLength = 0;","        this.connect = !0;","        this.lineAlpha = 1;","        this.bullet = \"none\";","        this.bulletBorderThickness = 2;","        this.bulletBorderAlpha = 0;","        this.bulletAlpha = 1;","        this.bulletSize = 8;","        this.hideBulletsCount = this.bulletOffset = 0;","        this.labelPosition = \"top\";","        this.cornerRadiusTop = 0;","        this.cursorBulletAlpha = 1;","        this.gradientOrientation = \"vertical\";","        this.dy = this.dx =","            0;","        this.periodValue = \"\";","        this.clustered = !0;","        this.periodSpan = 1;","        this.y = this.x = 0;","        this.switchable = !0;","        this.tcc = this.minDistance = 1;","        AmCharts.applyTheme(this, a, this.cname)","    },","    draw: function() {","        var a = this.chart;","        isNaN(this.precision) || (this.numberFormatter ? this.numberFormatter.precision = this.precision : this.numberFormatter = {","            precision: this.precision,","            decimalSeparator: a.decimalSeparator,","            thousandsSeparator: a.thousandsSeparator","        });","        var b = a.container;","        this.container = b;","        this.destroy();","        var c = b.set(),","            d = b.set();","        this.behindColumns ?","            (a.graphsBehindSet.push(c), a.bulletBehindSet.push(d)) : (a.graphsSet.push(c), a.bulletSet.push(d));","        var e = this.bulletAxis;","        AmCharts.isString(e) && (this.bulletAxis = a.getValueAxisById(e));","        this.bulletSet = d;","        this.scrollbar || (e = a.marginLeftReal, a = a.marginTopReal, c.translate(e, a), d.translate(e, a));","        b = b.set();","        AmCharts.remove(this.columnsSet);","        c.push(b);","        this.set = c;","        this.columnsSet = b;","        this.columnsArray = [];","        this.ownColumns = [];","        this.allBullets = [];","        this.animationArray = [];","        AmCharts.ifArray(this.data) && (c = !1, \"xy\" == this.chart.type ?","            this.xAxis.axisCreated && this.yAxis.axisCreated && (c = !0) : this.valueAxis.axisCreated && (c = !0), !this.hidden && c && this.createGraph())","    },","    createGraph: function() {","        var a = this,","            b = a.chart;","        \"inside\" == a.labelPosition && \"column\" != a.type && (a.labelPosition = \"bottom\");","        a.startAlpha = b.startAlpha;","        a.seqAn = b.sequencedAnimation;","        a.baseCoord = a.valueAxis.baseCoord;","        void 0 === a.fillAlphas && (a.fillAlphas = 0);","        a.bulletColorR = a.bulletColor;","        void 0 === a.bulletColorR && (a.bulletColorR = a.lineColorR, a.bulletColorNegative = a.negativeLineColor);","        void 0 ===","            a.bulletAlpha && (a.bulletAlpha = a.lineAlpha);","        clearTimeout(a.playedTO);","        if (!isNaN(a.valueAxis.min) && !isNaN(a.valueAxis.max)) {","            switch (b.type) {","                case \"serial\":","                    a.categoryAxis && (a.createSerialGraph(), \"candlestick\" == a.type && 1 > a.valueAxis.minMaxMultiplier && a.positiveClip(a.set));","                    break;","                case \"radar\":","                    a.createRadarGraph();","                    break;","                case \"xy\":","                    a.createXYGraph(), a.positiveClip(a.set)","            }","            a.playedTO = setTimeout(function() {","                a.setAnimationPlayed.call(a)","            }, 500 * a.chart.startDuration)","        }","    },","    setAnimationPlayed: function() {","        this.animationPlayed = !0","    },","    createXYGraph: function() {","        var a = [],","            b = [],","            c = this.xAxis,","            d = this.yAxis;","        this.pmh = d.viH + 1;","        this.pmw = c.viW + 1;","        this.pmy = this.pmx = 0;","        var e;","        for (e = this.start; e <= this.end; e++) {","            var f = this.data[e].axes[c.id].graphs[this.id],","                g = f.values,","                h = g.x,","                k = g.y,","                g = c.getCoordinate(h),","                l = d.getCoordinate(k);","            !isNaN(h) && !isNaN(k) && (a.push(g), b.push(l), (h = this.createBullet(f, g, l, e)) || (h = 0), k = this.labelText) && (f = this.createLabel(f, g, l, k), this.allBullets.push(f), this.positionLabel(g, l, f, this.labelPosition, h))","        }","        this.drawLineGraph(a, b);","        this.launchAnimation()","    },","    createRadarGraph: function() {","        var a = this.valueAxis.stackType,","            b = [],","            c = [],","            d, e, f;","        for (f = this.start; f <= this.end; f++) {","            var g = this.data[f].axes[this.valueAxis.id].graphs[this.id],","                h;","            h = \"none\" == a || \"3d\" == a ? g.values.value : g.values.close;","            if (isNaN(h)) this.drawLineGraph(b, c), b = [], c = [];","            else {","                var k = this.y - (this.valueAxis.getCoordinate(h) - this.height),","                    l = 180 - 360 / (this.end - this.start + 1) * f;","                h = k * Math.sin(l / 180 * Math.PI);","                k *= Math.cos(l / 180 * Math.PI);","                b.push(h);","                c.push(k);","                (l = this.createBullet(g, h, k, f)) || (l = 0);","                var m = this.labelText;","                m && (g = this.createLabel(g, h, k, m), this.allBullets.push(g), this.positionLabel(h, k, g, this.labelPosition, l));","                isNaN(d) && (d = h);","                isNaN(e) && (e = k)","            }","        }","        b.push(d);","        c.push(e);","        this.drawLineGraph(b, c);","        this.launchAnimation()","    },","    positionLabel: function(a, b, c, d, e) {","        var f = c.getBBox();","        switch (d) {","            case \"left\":","                a -= (f.width + e) / 2 + 2;","                break;","            case \"top\":","                b -= (e + f.height) / 2 + 1;","                break;","            case \"right\":","                a += (f.width + e) / 2 + 2;","                break;","            case \"bottom\":","                b += (e + f.height) / 2 + 1","        }","        c.translate(a, b)","    },","    getGradRotation: function() {","        var a = 270;","        \"horizontal\" == this.gradientOrientation &&","            (a = 0);","        return this.gradientRotation = a","    },","    createSerialGraph: function() {","        this.dashLengthSwitched = this.fillColorsSwitched = this.lineColorSwitched = void 0;","        var a = this.chart,","            b = this.id,","            c = this.index,","            d = this.data,","            e = this.chart.container,","            f = this.valueAxis,","            g = this.type,","            h = this.columnWidthReal,","            k = this.showBulletsAt;","        isNaN(this.columnWidth) || (h = this.columnWidth);","        isNaN(h) && (h = .8);","        var l = this.useNegativeColorIfDown,","            m = this.width,","            n = this.height,","            p = this.y,","            q = this.rotate,","            r = this.columnCount,","            s = AmCharts.toCoordinate(this.cornerRadiusTop,","                h / 2),","            w = this.connect,","            v = [],","            t = [],","            u, x, E, A, z = this.chart.graphs.length,","            H, F = this.dx / this.tcc,","            G = this.dy / this.tcc,","            V = f.stackType,","            N = this.labelPosition,","            ia = this.start,","            da = this.end,","            ba = this.scrollbar,","            Sa = this.categoryAxis,","            na = this.baseCoord,","            ta = this.negativeBase,","            L = this.columnIndex,","            Y = this.lineThickness,","            $ = this.lineAlpha,","            oa = this.lineColorR,","            W = this.dashLength,","            Z = this.set,","            pa, I = N,","            D = this.getGradRotation(),","            aa = this.chart.columnSpacing,","            S = Sa.cellWidth,","            Ta = (S * h - r) / r;","        aa > Ta && (aa = Ta);","        var T, y, bb, kb = n + 1,","            lb = m + 1,","            cb = 0,","            mb = 0,","            nb, ob, db, eb, pb =","            this.fillColorsR,","            Da = this.negativeFillColors,","            wa = this.negativeLineColor,","            Ua = this.fillAlphas,","            Va = this.negativeFillAlphas;","        \"object\" == typeof Ua && (Ua = Ua[0]);","        \"object\" == typeof Va && (Va = Va[0]);","        var fb = f.getCoordinate(f.min);","        f.logarithmic && (fb = f.getCoordinate(f.minReal));","        this.minCoord = fb;","        this.resetBullet && (this.bullet = \"none\");","        if (!(ba || \"line\" != g && \"smoothedLine\" != g && \"step\" != g || (1 == d.length && \"step\" != g && \"none\" == this.bullet && (this.bullet = \"round\", this.resetBullet = !0), !Da && void 0 == wa || l))) {","            var Na = ta;","            Na > f.max && (Na = f.max);","            Na < f.min && (Na = f.min);","            f.logarithmic && (Na = f.minReal);","            var Aa = f.getCoordinate(Na),","                Hb = f.getCoordinate(f.max);","            q ? (kb = n, lb = Math.abs(Hb - Aa), nb = n, ob = Math.abs(fb - Aa), eb = mb = 0, f.reversed ? (cb = 0, db = Aa) : (cb = Aa, db = 0)) : (lb = m, kb = Math.abs(Hb - Aa), ob = m, nb = Math.abs(fb - Aa), db = cb = 0, f.reversed ? (eb = p, mb = Aa) : eb = Aa + 1)","        }","        var Ba = Math.round;","        this.pmx = Ba(cb);","        this.pmy = Ba(mb);","        this.pmh = Ba(kb);","        this.pmw = Ba(lb);","        this.nmx = Ba(db);","        this.nmy = Ba(eb);","        this.nmh = Ba(nb);","        this.nmw = Ba(ob);","        AmCharts.isModern || (this.nmy = this.nmx = 0, this.nmh = this.height);","        this.clustered ||","            (r = 1);","        h = \"column\" == g ? (S * h - aa * (r - 1)) / r : S * h;","        1 > h && (h = 1);","        var J;","        if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) {","            if (0 < ia) {","                for (J = ia - 1; - 1 < J; J--)","                    if (T = d[J], y = T.axes[f.id].graphs[b], bb = y.values.value, !isNaN(bb)) {","                        ia = J;","                        break","                    }","                if (this.lineColorField)","                    for (J = ia; - 1 < J; J--)","                        if (T = d[J], y = T.axes[f.id].graphs[b], y.lineColor) {","                            this.bulletColorSwitched = this.lineColorSwitched = y.lineColor;","                            break","                        }","                if (this.fillColorsField)","                    for (J = ia; - 1 < J; J--)","                        if (T = d[J], y = T.axes[f.id].graphs[b], y.fillColors) {","                            this.fillColorsSwitched = y.fillColors;","                            break","                        }","                if (this.dashLengthField)","                    for (J =","                        ia; - 1 < J; J--)","                        if (T = d[J], y = T.axes[f.id].graphs[b], !isNaN(y.dashLength)) {","                            this.dashLengthSwitched = y.dashLength;","                            break","                        }","            }","            if (da < d.length - 1)","                for (J = da + 1; J < d.length; J++)","                    if (T = d[J], y = T.axes[f.id].graphs[b], bb = y.values.value, !isNaN(bb)) {","                        da = J;","                        break","                    }","        }","        da < d.length - 1 && da++;","        var O = [],","            P = [],","            Ea = !1;","        if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g)","            if (this.stackable && \"regular\" == V || \"100%\" == V || this.fillToGraph) Ea = !0;","        var Ib = this.noStepRisers,","            gb = -1E3,","            hb = -1E3,","            ib = this.minDistance,","            Fa = !0,","            Wa = !1;","        for (J = ia; J <= da; J++) {","            T = d[J];","            y = T.axes[f.id].graphs[b];","            y.index = J;","            var Xa, Ga = NaN;","            if (l && void 0 == this.openField)","                for (var qb = J + 1; qb < d.length && (!d[qb] || !(Xa = d[J + 1].axes[f.id].graphs[b]) || !Xa.values || (Ga = Xa.values.value, isNaN(Ga))); qb++);","            var X, Q, R, ea, la = NaN,","                C = NaN,","                B = NaN,","                M = NaN,","                K = NaN,","                Ha = NaN,","                xa = NaN,","                Ia = NaN,","                ya = NaN,","                ca = NaN,","                ja = NaN,","                fa = NaN,","                ga = NaN,","                U = NaN,","                rb = NaN,","                sb = NaN,","                ka = NaN,","                ra = void 0,","                Ca = pb,","                Oa = Ua,","                ua = oa,","                qa, sa, tb = this.proCandlesticks,","                Ya = this.pattern;","            void 0 != y.pattern && (Ya = y.pattern);","            void 0 != y.color && (Ca = y.color);","            y.fillColors && (Ca = y.fillColors);","            isNaN(y.alpha) || (Oa = y.alpha);","            isNaN(y.dashLength) || (W = y.dashLength);","            var va = y.values;","            f.recalculateToPercents && (va = y.percents);","            if (va) {","                U = this.stackable && \"none\" != V && \"3d\" != V ? va.close : va.value;","                if (\"candlestick\" == g || \"ohlc\" == g) U = va.close, sb = va.low, xa = f.getCoordinate(sb), rb = va.high, ya = f.getCoordinate(rb);","                ka = va.open;","                B = f.getCoordinate(U);","                isNaN(ka) || (K = f.getCoordinate(ka), l && (Ga = ka, ka = K = NaN));","                l && (void 0 == this.openField ? Xa && (Xa.isNegative = Ga < U ? !0 : !1, isNaN(Ga) && (y.isNegative = !Fa)) : y.isNegative = Ga > U ? !0 : !1);","                if (!ba) switch (this.showBalloonAt) {","                    case \"close\":","                        y.y =","                            B;","                        break;","                    case \"open\":","                        y.y = K;","                        break;","                    case \"high\":","                        y.y = ya;","                        break;","                    case \"low\":","                        y.y = xa","                }","                var la = T.x[Sa.id],","                    Pa = this.periodSpan - 1,","                    ma = Math.floor(S / 2) + Math.floor(Pa * S / 2),","                    za = ma,","                    Jb = 0;","                \"left\" == this.stepDirection && (Jb = (2 * S + Pa * S) / 2, la -= Jb);","                \"start\" == this.pointPosition && (la -= S / 2 + Math.floor(Pa * S / 2), ma = 0, za = Math.floor(S) + Math.floor(Pa * S));","                \"end\" == this.pointPosition && (la += S / 2 + Math.floor(Pa * S / 2), ma = Math.floor(S) + Math.floor(Pa * S), za = 0);","                if (Ib) {","                    var ub = this.columnWidth;","                    isNaN(ub) || (ma *= ub, za *= ub)","                }","                ba || (y.x = la); - 1E5 > la && (la = -1E5);","                la >","                    m + 1E5 && (la = m + 1E5);","                q ? (C = B, M = K, K = B = la, isNaN(ka) && !this.fillToGraph && (M = na), Ha = xa, Ia = ya) : (M = C = la, isNaN(ka) && !this.fillToGraph && (K = na));","                if (!tb && U < ka || tb && U < pa) y.isNegative = !0, Da && (Ca = Da), Va && (Oa = Va), void 0 != wa && (ua = wa);","                Wa = !1;","                isNaN(U) || (l ? U > Ga ? (Fa && (Wa = !0), Fa = !1) : (Fa || (Wa = !0), Fa = !0) : y.isNegative = U < ta ? !0 : !1, pa = U);","                switch (g) {","                    case \"line\":","                        if (isNaN(U)) w || (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = []);","                        else {","                            if (Math.abs(C - gb) >= ib || Math.abs(B - hb) >= ib) v.push(C), t.push(B), gb = C, hb = B;","                            ca = C;","                            ja = B;","                            fa = C;","                            ga = B;","                            !Ea || isNaN(K) ||","                                isNaN(M) || (O.push(M), P.push(K));","                            if (Wa || void 0 != y.lineColor || void 0 != y.fillColors || !isNaN(y.dashLength)) this.drawLineGraph(v, t, O, P), v = [C], t = [B], O = [], P = [], !Ea || isNaN(K) || isNaN(M) || (O.push(M), P.push(K)), l ? Fa ? (this.lineColorSwitched = oa, this.fillColorsSwitched = pb) : (this.lineColorSwitched = wa, this.fillColorsSwitched = Da) : (this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors), this.dashLengthSwitched = y.dashLength;","                            y.gap && (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = [])","                        }","                        break;","                    case \"smoothedLine\":","                        if (isNaN(U)) w ||","                            (this.drawSmoothedGraph(v, t, O, P), v = [], t = [], O = [], P = []);","                        else {","                            if (Math.abs(C - gb) >= ib || Math.abs(B - hb) >= ib) v.push(C), t.push(B), gb = C, hb = B;","                            ca = C;","                            ja = B;","                            fa = C;","                            ga = B;","                            !Ea || isNaN(K) || isNaN(M) || (O.push(M), P.push(K));","                            void 0 == y.lineColor && void 0 == y.fillColors && isNaN(y.dashLength) || (this.drawSmoothedGraph(v, t, O, P), v = [C], t = [B], O = [], P = [], !Ea || isNaN(K) || isNaN(M) || (O.push(M), P.push(K)), this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors, this.dashLengthSwitched = y.dashLength);","                            y.gap && (this.drawSmoothedGraph(v,","                                t, O, P), v = [], t = [], O = [], P = [])","                        }","                        break;","                    case \"step\":","                        if (!isNaN(U)) {","                            if (void 0 == y.lineColor && void 0 == y.fillColors && isNaN(y.dashLength) || (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = [], this.lineColorSwitched = y.lineColor, this.fillColorsSwitched = y.fillColors, this.dashLengthSwitched = y.dashLength), q ? (isNaN(u) || (v.push(u), t.push(B - ma)), t.push(B - ma), v.push(C), t.push(B + za), v.push(C), !Ea || isNaN(K) || isNaN(M) || (O.push(E), P.push(K - ma), O.push(M), P.push(K - ma), O.push(M), P.push(K + za))) : (isNaN(x) || (t.push(x), v.push(u), t.push(x),","                                v.push(C - ma)), v.push(C - ma), t.push(B), v.push(C + za), t.push(B), !Ea || isNaN(K) || isNaN(M) || (O.push(M - ma), P.push(A), O.push(M - ma), P.push(K), O.push(M + za), P.push(K))), u = C, x = B, E = M, A = K, ca = C, ja = B, fa = C, ga = B, Wa && (this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = [], l && (Fa ? (this.lineColorSwitched = oa, this.fillColorsSwitched = pb) : (this.lineColorSwitched = wa, this.fillColorsSwitched = Da))), Ib || y.gap) u = x = NaN, this.drawLineGraph(v, t, O, P), v = [], t = [], O = [], P = []","                        }","                        else if (!w) {","                            if (1 >= this.periodSpan || 1 < this.periodSpan && C - u > ma + za) u = x = NaN;","                            this.drawLineGraph(v, t, O, P);","                            v = [];","                            t = [];","                            O = [];","                            P = []","                        }","                        break;","                    case \"column\":","                        qa = ua;","                        void 0 != y.lineColor && (qa = y.lineColor);","                        var Kb = this.topRadius;","                        if (!isNaN(U)) {","                            l || (y.isNegative = U < ta ? !0 : !1);","                            y.isNegative && (Da && (Ca = Da), void 0 != wa && (qa = wa));","                            var Lb = f.min,","                                Mb = f.max;","                            if (!(U < Lb && ka < Lb || U > Mb && ka > Mb))","                                if (q) {","                                    \"3d\" == V ? (Q = B - (r / 2 - this.depthCount + 1) * (h + aa) + aa / 2 + G * L, X = M + F * L) : (Q = Math.floor(B - (r / 2 - L) * (h + aa) + aa / 2), X = M);","                                    R = h;","                                    ca = C;","                                    ja = Q + h / 2;","                                    fa = C;","                                    ga = Q + h / 2;","                                    Q + R > n + L * G && (R = n - Q + L * G);","                                    Q < L * G && (R += Q, Q = L * G);","                                    ea = C - M;","                                    var Yb = X;","                                    X = AmCharts.fitToBounds(X,","                                        0, m);","                                    ea += Yb - X;","                                    ea = AmCharts.fitToBounds(ea, -X, m - X + F * L);","                                    Q < n && 0 < R && (ra = new AmCharts.Cuboid(e, ea, R, F - a.d3x, G - a.d3y, Ca, Oa, Y, qa, $, D, s, q, W, Ya, Kb), \"bottom\" != N && \"inside\" != N && \"middle\" != N && (N = f.reversed ? \"left\" : \"right\", 0 > U && (N = f.reversed ? \"right\" : \"left\")), \"regular\" == V || \"100%\" == V) && (ca += this.dx)","                                }","                                else {","                                    \"3d\" == V ? (X = C - (r / 2 - this.depthCount + 1) * (h + aa) + aa / 2 + F * L, Q = K + G * L) : (X = C - (r / 2 - L) * (h + aa) + aa / 2, Q = K);","                                    R = h;","                                    ca = X + h / 2;","                                    ja = B;","                                    fa = X + h / 2;","                                    ga = B;","                                    X + R > m + L * F && (R = m - X + L * F);","                                    X < L * F && (R += X - L * F, X = L * F);","                                    ea = B - K;","                                    var Zb = Q;","                                    Q = AmCharts.fitToBounds(Q, this.dy,","                                        n);","                                    ea += Zb - Q;","                                    ea = AmCharts.fitToBounds(ea, -Q + G * L, n - Q);","                                    if (X < m + L * F && 0 < R)","                                        if (this.showOnAxis && (Q -= G / 2), ra = new AmCharts.Cuboid(e, R, ea, F - a.d3x, G - a.d3y, Ca, Oa, Y, qa, this.lineAlpha, D, s, q, W, Ya, Kb), 0 > U && \"middle\" != N && \"inside\" != N) N = \"bottom\";","                                        else if (N = I, \"regular\" == V || \"100%\" == V) ja += this.dy","                                }","                            if (ra && (sa = ra.set, y.columnGraphics = sa, sa.translate(X, Q), this.columnsSet.push(sa), (y.url || this.showHandOnHover) && sa.setAttr(\"cursor\", \"pointer\"), !ba)) {","                                \"none\" == V && (H = q ? (this.end + 1 - J) * z - c : z * J + c);","                                \"3d\" == V && (q ? (H = (this.end + 1 - J) * z - c - 1E3 *","                                    this.depthCount, ca += F * this.columnIndex, fa += F * this.columnIndex, y.y += F * this.columnIndex) : (H = (z - c) * (J + 1) + 1E3 * this.depthCount, ca += 3, ja += G * this.columnIndex + 7, ga += G * this.columnIndex, y.y += G * this.columnIndex));","                                if (\"regular\" == V || \"100%\" == V) \"inside\" != N && (N = \"middle\"), H = q ? 0 < va.value ? (this.end + 1 - J) * z + c : (this.end + 1 - J) * z - c : 0 < va.value ? z * J + c : z * J - c;","                                this.columnsArray.push({","                                    column: ra,","                                    depth: H","                                });","                                y.x = q ? Q + R / 2 : X + R / 2;","                                this.ownColumns.push(ra);","                                this.animateColumns(ra, J, C, M, B, K);","                                this.addListeners(sa, y)","                            }","                        }","                        break;","                    case \"candlestick\":","                        if (!isNaN(ka) &&","                            !isNaN(U)) {","                            var jb, vb;","                            qa = ua;","                            void 0 != y.lineColor && (qa = y.lineColor);","                            if (q) {","                                if (Q = B - h / 2, X = M, R = h, Q + R > n && (R = n - Q), 0 > Q && (R += Q, Q = 0), Q < n && 0 < R) {","                                    var wb, xb;","                                    U > ka ? (wb = [C, Ia], xb = [M, Ha]) : (wb = [M, Ia], xb = [C, Ha]);","                                    !isNaN(Ia) && !isNaN(Ha) && B < n && 0 < B && (jb = AmCharts.line(e, wb, [B, B], qa, $, Y), vb = AmCharts.line(e, xb, [B, B], qa, $, Y));","                                    ea = C - M;","                                    ra = new AmCharts.Cuboid(e, ea, R, F, G, Ca, Ua, Y, qa, $, D, s, q, W, Ya)","                                }","                            }","                            else if (X = C - h / 2, Q = K + Y / 2, R = h, X + R > m && (R = m - X), 0 > X && (R += X, X = 0), ea = B - K, X < m && 0 < R) {","                                tb && U >= ka && (Oa = 0);","                                var ra = new AmCharts.Cuboid(e, R, ea, F, G, Ca, Oa,","                                        Y, qa, $, D, s, q, W, Ya),","                                    yb, zb;","                                U > ka ? (yb = [B, ya], zb = [K, xa]) : (yb = [K, ya], zb = [B, xa]);","                                !isNaN(ya) && !isNaN(xa) && C < m && 0 < C && (jb = AmCharts.line(e, [C, C], yb, qa, $, Y), vb = AmCharts.line(e, [C, C], zb, qa, $, Y))","                            }","                            ra && (sa = ra.set, y.columnGraphics = sa, Z.push(sa), sa.translate(X, Q - Y / 2), (y.url || this.showHandOnHover) && sa.setAttr(\"cursor\", \"pointer\"), jb && (Z.push(jb), Z.push(vb)), ca = C, ja = B, q ? (ga = B, fa = C, \"open\" == k && (fa = M), \"high\" == k && (fa = Ia), \"low\" == k && (fa = Ha)) : (ga = B, \"open\" == k && (ga = K), \"high\" == k && (ga = ya), \"low\" == k && (ga = xa), fa = C), ba || (y.x = q ? Q + R /","                                2 : X + R / 2, this.animateColumns(ra, J, C, M, B, K), this.addListeners(sa, y)))","                        }","                        break;","                    case \"ohlc\":","                        if (!(isNaN(ka) || isNaN(rb) || isNaN(sb) || isNaN(U))) {","                            U < ka && (y.isNegative = !0, void 0 != wa && (ua = wa));","                            var Ab, Bb, Cb;","                            if (q) {","                                var Db = B - h / 2,","                                    Db = AmCharts.fitToBounds(Db, 0, n),","                                    Nb = AmCharts.fitToBounds(B, 0, n),","                                    Eb = B + h / 2,","                                    Eb = AmCharts.fitToBounds(Eb, 0, n);","                                Bb = AmCharts.line(e, [M, M], [Db, Nb], ua, $, Y, W);","                                0 < B && B < n && (Ab = AmCharts.line(e, [Ha, Ia], [B, B], ua, $, Y, W));","                                Cb = AmCharts.line(e, [C, C], [Nb, Eb], ua, $, Y, W);","                                ga = B;","                                fa = C;","                                \"open\" == k && (fa = M);","                                \"high\" == k && (fa = Ia);","                                \"low\" == k && (fa = Ha)","                            }","                            else {","                                var Fb = C - h / 2,","                                    Fb = AmCharts.fitToBounds(Fb, 0, m),","                                    Ob = AmCharts.fitToBounds(C, 0, m),","                                    Gb = C + h / 2,","                                    Gb = AmCharts.fitToBounds(Gb, 0, m);","                                Bb = AmCharts.line(e, [Fb, Ob], [K, K], ua, $, Y, W);","                                0 < C && C < m && (Ab = AmCharts.line(e, [C, C], [xa, ya], ua, $, Y, W));","                                Cb = AmCharts.line(e, [Ob, Gb], [B, B], ua, $, Y, W);","                                ga = B;","                                \"open\" == k && (ga = K);","                                \"high\" == k && (ga = ya);","                                \"low\" == k && (ga = xa);","                                fa = C","                            }","                            Z.push(Bb);","                            Z.push(Ab);","                            Z.push(Cb);","                            ca = C;","                            ja = B","                        }","                }","                if (!ba && !isNaN(U)) {","                    var Pb = this.hideBulletsCount;","                    if (this.end - this.start <= Pb || 0 === Pb) {","                        var Ja = this.createBullet(y,","                            fa, ga, J);","                        Ja || (Ja = 0);","                        var Qb = this.labelText;","                        if (Qb) {","                            var ha = this.createLabel(y, 0, 0, Qb),","                                Ka = 0,","                                La = 0,","                                Rb = ha.getBBox(),","                                Qa = Rb.width,","                                Ma = Rb.height;","                            switch (N) {","                                case \"left\":","                                    Ka = -(Qa / 2 + Ja / 2 + 3);","                                    break;","                                case \"top\":","                                    La = -(Ma / 2 + Ja / 2 + 3);","                                    break;","                                case \"right\":","                                    Ka = Ja / 2 + 2 + Qa / 2;","                                    break;","                                case \"bottom\":","                                    q && \"column\" == g ? (ca = na, 0 > U || 0 < U && f.reversed ? (Ka = -6, ha.attr({","                                        \"text-anchor\": \"end\"","                                    })) : (Ka = 6, ha.attr({","                                        \"text-anchor\": \"start\"","                                    }))) : (La = Ja / 2 + Ma / 2, ha.x = -(Qa / 2 + 2));","                                    break;","                                case \"middle\":","                                    \"column\" == g && (q ? (La = -(Ma / 2) + this.fontSize / 2, Ka = -(C - M) / 2 - F, Math.abs(C -","                                        M) < Qa && !this.showAllValueLabels && (ha.remove(), ha = null)) : (La = -(B - K) / 2 - G, Math.abs(B - K) < Ma && !this.showAllValueLabels && (ha.remove(), ha = null)));","                                    break;","                                case \"inside\":","                                    q ? (La = -(Ma / 2) + this.fontSize / 2, Ka = 0 > ea ? Qa / 2 + 6 : -Qa / 2 - 6) : La = 0 > ea ? Ma : -Ma","                            }","                            if (ha) {","                                if (isNaN(ja) || isNaN(ca)) ha.remove(), ha = null;","                                else if (ca += Ka, ja += La, ha.translate(ca, ja), q) {","                                    if (0 > ja || ja > n) ha.remove(), ha = null","                                }","                                else {","                                    var Sb = 0;","                                    \"3d\" == V && (Sb = F * L);","                                    if (0 > ca || ca > m + Sb) ha.remove(), ha = null","                                }","                                ha && this.allBullets.push(ha)","                            }","                        }","                        if (\"regular\" == V || \"100%\" == V) {","                            var Tb = f.totalText;","                            if (Tb) {","                                var Ra = this.createLabel(y, 0, 0, Tb, f.totalTextColor);","                                this.allBullets.push(Ra);","                                var Ub = Ra.getBBox(),","                                    Vb = Ub.width,","                                    Wb = Ub.height,","                                    Za, $a, Xb = f.totals[J];","                                Xb && Xb.remove();","                                var ab = 0;","                                \"column\" != g && (ab = Ja);","                                q ? ($a = B, Za = 0 > U ? C - Vb / 2 - 2 - ab : C + Vb / 2 + 3 + ab) : (Za = C, $a = 0 > U ? B + Wb / 2 + ab : B - Wb / 2 - 3 - ab);","                                Ra.translate(Za, $a);","                                f.totals[J] = Ra;","                                q ? (0 > $a || $a > n) && Ra.remove() : (0 > Za || Za > m) && Ra.remove()","                            }","                        }","                    }","                }","            }","        }","        if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) \"smoothedLine\" == g ? this.drawSmoothedGraph(v, t, O, P) : this.drawLineGraph(v, t, O, P), ba || this.launchAnimation();","        this.bulletsHidden && this.hideBullets()","    },","    animateColumns: function(a, b, c, d, e, f) {","        var g = this;","        c = g.chart.startDuration;","        0 < c && !g.animationPlayed && (g.seqAn ? (a.set.hide(), g.animationArray.push(a), a = setTimeout(function() {","            g.animate.call(g)","        }, c / (g.end - g.start + 1) * (b - g.start) * 1E3), g.timeOuts.push(a)) : g.animate(a))","    },","    createLabel: function(a, b, c, d, e) {","        var f = this.chart,","            g = a.labelColor;","        g || (g = this.color);","        g || (g = f.color);","        e && (g = e);","        e = this.fontSize;","        void 0 === e && (this.fontSize = e = f.fontSize);","        var h = this.labelFunction;","        d = f.formatString(d,","            a);","        d = AmCharts.cleanFromEmpty(d);","        h && (d = h(a, d));","        a = AmCharts.text(this.container, d, g, f.fontFamily, e);","        a.node.style.pointerEvents = \"none\";","        a.translate(b, c);","        this.bulletSet.push(a);","        return a","    },","    positiveClip: function(a) {","        a.clipRect(this.pmx, this.pmy, this.pmw, this.pmh)","    },","    negativeClip: function(a) {","        a.clipRect(this.nmx, this.nmy, this.nmw, this.nmh)","    },","    drawLineGraph: function(a, b, c, d) {","        var e = this;","        if (1 < a.length) {","            var f = e.set,","                g = e.chart,","                h = e.container,","                k = h.set(),","                l = h.set();","            f.push(l);","            f.push(k);","            var m = e.lineAlpha,","                n = e.lineThickness,","                f =","                e.fillAlphas,","                p = e.lineColorR,","                q = e.negativeLineAlpha;","            isNaN(q) && (q = m);","            var r = e.lineColorSwitched;","            r && (p = r);","            var r = e.fillColorsR,","                s = e.fillColorsSwitched;","            s && (r = s);","            var w = e.dashLength;","            (s = e.dashLengthSwitched) && (w = s);","            var s = e.negativeLineColor,","                v = e.negativeFillColors,","                t = e.negativeFillAlphas,","                u = e.baseCoord;","            0 !== e.negativeBase && (u = e.valueAxis.getCoordinate(e.negativeBase));","            m = AmCharts.line(h, a, b, p, m, n, w, !1, !0);","            k.push(m);","            k.click(function(a) {","                e.handleGraphEvent(a, \"clickGraph\")","            }).mouseover(function(a) {","                e.handleGraphEvent(a,","                    \"rollOverGraph\")","            }).mouseout(function(a) {","                e.handleGraphEvent(a, \"rollOutGraph\")","            });","            void 0 === s || e.useNegativeColorIfDown || (n = AmCharts.line(h, a, b, s, q, n, w, !1, !0), l.push(n));","            if (0 < f || 0 < t)","                if (n = a.join(\";\").split(\";\"), q = b.join(\";\").split(\";\"), m = g.type, \"serial\" == m ? 0 < c.length ? (c.reverse(), d.reverse(), n = a.concat(c), q = b.concat(d)) : e.rotate ? (q.push(q[q.length - 1]), n.push(u), q.push(q[0]), n.push(u), q.push(q[0]), n.push(n[0])) : (n.push(n[n.length - 1]), q.push(u), n.push(n[0]), q.push(u), n.push(a[0]), q.push(q[0])) : \"xy\" == m &&","                    (b = e.fillToAxis) && (AmCharts.isString(b) && (b = g.getValueAxisById(b)), \"H\" == b.orientation ? (u = \"top\" == b.position ? 0 : b.viH, n.push(n[n.length - 1]), q.push(u), n.push(n[0]), q.push(u), n.push(a[0]), q.push(q[0])) : (u = \"left\" == b.position ? 0 : b.viW, q.push(q[q.length - 1]), n.push(u), q.push(q[0]), n.push(u), q.push(q[0]), n.push(n[0]))), a = e.gradientRotation, 0 < f && (g = AmCharts.polygon(h, n, q, r, f, 1, \"#000\", 0, a), g.pattern(e.pattern), k.push(g)), v || void 0 !== s) isNaN(t) && (t = f), v || (v = s), h = AmCharts.polygon(h, n, q, v, t, 1, \"#000\", 0, a), h.pattern(e.pattern),","                    l.push(h), l.click(function(a) {","                        e.handleGraphEvent(a, \"clickGraph\")","                    }).mouseover(function(a) {","                        e.handleGraphEvent(a, \"rollOverGraph\")","                    }).mouseout(function(a) {","                        e.handleGraphEvent(a, \"rollOutGraph\")","                    });","            e.applyMask(l, k)","        }","    },","    applyMask: function(a, b) {","        var c = a.length();","        \"serial\" != this.chart.type || this.scrollbar || (this.positiveClip(b), 0 < c && this.negativeClip(a))","    },","    drawSmoothedGraph: function(a, b, c, d) {","        if (1 < a.length) {","            var e = this.set,","                f = this.container,","                g = f.set(),","                h = f.set();","            e.push(h);","            e.push(g);","            var k = this.lineAlpha,","                l = this.lineThickness,","                e = this.dashLength,","                m = this.fillAlphas,","                n = this.lineColorR,","                p = this.fillColorsR,","                q = this.negativeLineColor,","                r = this.negativeFillColors,","                s = this.negativeFillAlphas,","                w = this.baseCoord,","                v = this.lineColorSwitched;","            v && (n = v);","            (v = this.fillColorsSwitched) && (p = v);","            v = this.negativeLineAlpha;","            isNaN(v) && (v = k);","            k = new AmCharts.Bezier(f, a, b, n, k, l, p, 0, e);","            g.push(k.path);","            void 0 !== q && (l = new AmCharts.Bezier(f, a, b, q, v, l, p, 0, e), h.push(l.path));","            0 < m && (k = a.join(\";\").split(\";\"), n = b.join(\";\").split(\";\"), l = \"\", 0 < c.length ? (c.push(\"M\"), d.push(\"M\"), c.reverse(),","                d.reverse(), k = a.concat(c), n = b.concat(d)) : (this.rotate ? (l += \" L\" + w + \",\" + b[b.length - 1], l += \" L\" + w + \",\" + b[0]) : (l += \" L\" + a[a.length - 1] + \",\" + w, l += \" L\" + a[0] + \",\" + w), l += \" L\" + a[0] + \",\" + b[0]), c = new AmCharts.Bezier(f, k, n, NaN, 0, 0, p, m, e, l), c.path.pattern(this.pattern), g.push(c.path), r || void 0 !== q) && (s || (s = m), r || (r = q), a = new AmCharts.Bezier(f, a, b, NaN, 0, 0, r, s, e, l), a.path.pattern(this.pattern), h.push(a.path));","            this.applyMask(h, g)","        }","    },","    launchAnimation: function() {","        var a = this,","            b = a.chart.startDuration;","        if (0 < b && !a.animationPlayed) {","            var c =","                a.set,","                d = a.bulletSet;","            AmCharts.VML || (c.attr({","                opacity: a.startAlpha","            }), d.attr({","                opacity: a.startAlpha","            }));","            c.hide();","            d.hide();","            a.seqAn ? (b = setTimeout(function() {","                a.animateGraphs.call(a)","            }, a.index * b * 1E3), a.timeOuts.push(b)) : a.animateGraphs()","        }","    },","    animateGraphs: function() {","        var a = this.chart,","            b = this.set,","            c = this.bulletSet,","            d = this.x,","            e = this.y;","        b.show();","        c.show();","        var f = a.startDuration,","            a = a.startEffect;","        b && (this.rotate ? (b.translate(-1E3, e), c.translate(-1E3, e)) : (b.translate(d, -1E3), c.translate(d, -1E3)), b.animate({","            opacity: 1,","            translate: d +","                \",\" + e","        }, f, a), c.animate({","            opacity: 1,","            translate: d + \",\" + e","        }, f, a))","    },","    animate: function(a) {","        var b = this.chart,","            c = this.animationArray;","        !a && 0 < c.length && (a = c[0], c.shift());","        c = AmCharts[AmCharts.getEffect(b.startEffect)];","        b = b.startDuration;","        a && (this.rotate ? a.animateWidth(b, c) : a.animateHeight(b, c), a.set.show())","    },","    legendKeyColor: function() {","        var a = this.legendColor,","            b = this.lineAlpha;","        void 0 === a && (a = this.lineColorR, 0 === b && (b = this.fillColorsR) && (a = \"object\" == typeof b ? b[0] : b));","        return a","    },","    legendKeyAlpha: function() {","        var a = this.legendAlpha;","        void 0 === a && (a = this.lineAlpha, this.fillAlphas > a && (a = this.fillAlphas), 0 === a && (a = this.bulletAlpha), 0 === a && (a = 1));","        return a","    },","    createBullet: function(a, b, c, d) {","        if (!isNaN(b) && !isNaN(c)) {","            d = this.container;","            var e = this.bulletOffset,","                f = this.bulletSize;","            isNaN(a.bulletSize) || (f = a.bulletSize);","            var g = a.values.value,","                h = this.maxValue,","                k = this.minValue,","                l = this.maxBulletSize,","                m = this.minBulletSize;","            isNaN(h) || (isNaN(g) || (f = (g - k) / (h - k) * (l - m) + m), k == h && (f = l));","            h = f;","            this.bulletAxis && (f = a.values.error, isNaN(f) || (g = f), f = this.bulletAxis.stepWidth *","                g);","            f < this.minBulletSize && (f = this.minBulletSize);","            this.rotate ? b = a.isNegative ? b - e : b + e : c = a.isNegative ? c + e : c - e;","            var n, m = this.bulletColorR;","            a.lineColor && (this.bulletColorSwitched = a.lineColor);","            this.bulletColorSwitched && (m = this.bulletColorSwitched);","            a.isNegative && void 0 !== this.bulletColorNegative && (m = this.bulletColorNegative);","            void 0 !== a.color && (m = a.color);","            var p;","            \"xy\" == this.chart.type && this.valueField && (p = this.pattern, a.pattern && (p = a.pattern));","            e = this.bullet;","            a.bullet && (e = a.bullet);","            var g = this.bulletBorderThickness,","                k = this.bulletBorderColorR,","                l = this.bulletBorderAlpha,","                q = this.bulletAlpha;","            k || (k = m);","            this.useLineColorForBulletBorder && (k = this.lineColorR);","            var r = a.alpha;","            isNaN(r) || (q = r);","            if (\"none\" != this.bullet || a.bullet) n = AmCharts.bullet(d, e, f, m, q, g, k, l, h, 0, p);","            if (this.customBullet || a.customBullet) p = this.customBullet, a.customBullet && (p = a.customBullet), p && (n && n.remove(), \"function\" == typeof p ? (n = new p, n.chart = this.chart, a.bulletConfig && (n.availableSpace = c, n.graph = this, n.graphDataItem = a, n.bulletY = c, a.bulletConfig.minCoord = this.minCoord -","                c, n.bulletConfig = a.bulletConfig), n.write(d), n = n.set) : (this.chart.path && (p = this.chart.path + p), n = d.set(), d = d.image(p, 0, 0, f, f), n.push(d), this.centerCustomBullets && d.translate(-f / 2, -f / 2)));","            n && ((a.url || this.showHandOnHover) && n.setAttr(\"cursor\", \"pointer\"), \"serial\" == this.chart.type && (0 > b - 0 || b - 0 > this.width || c < -f / 2 || c - 0 > this.height) && (n.remove(), n = null), n && (this.bulletSet.push(n), n.translate(b, c), this.addListeners(n, a), this.allBullets.push(n)), a.bx = b, a.by = c);","            a.bulletGraphics = n;","            return f","        }","    },","    showBullets: function() {","        var a =","            this.allBullets,","            b;","        this.bulletsHidden = !1;","        for (b = 0; b < a.length; b++) a[b].show()","    },","    hideBullets: function() {","        var a = this.allBullets,","            b;","        this.bulletsHidden = !0;","        for (b = 0; b < a.length; b++) a[b].hide()","    },","    addListeners: function(a, b) {","        var c = this;","        a.mouseover(function(a) {","            c.handleRollOver(b, a)","        }).mouseout(function(a) {","            c.handleRollOut(b, a)","        }).touchend(function(a) {","            c.handleRollOver(b, a);","            c.chart.panEventsEnabled && c.handleClick(b, a)","        }).touchstart(function(a) {","            c.handleRollOver(b, a)","        }).click(function(a) {","            c.handleClick(b, a)","        }).dblclick(function(a) {","            c.handleDoubleClick(b,","                a)","        }).contextmenu(function(a) {","            c.handleRightClick(b, a)","        })","    },","    handleRollOver: function(a, b) {","        if (a) {","            var c = this.chart,","                d = {","                    type: \"rollOverGraphItem\",","                    item: a,","                    index: a.index,","                    graph: this,","                    target: this,","                    chart: this.chart,","                    event: b","                };","            this.fire(\"rollOverGraphItem\", d);","            c.fire(\"rollOverGraphItem\", d);","            clearTimeout(c.hoverInt);","            d = this.showBalloon;","            c.chartCursor && \"serial\" == c.type && (d = !1, !c.chartCursor.valueBalloonsEnabled && this.showBalloon && (d = !0));","            if (d) {","                var d = c.formatString(this.balloonText, a, !0),","                    e = this.balloonFunction;","                e && (d = e(a, a.graph));","                d = AmCharts.cleanFromEmpty(d);","                e = c.getBalloonColor(this, a);","                c.balloon.showBullet = !1;","                c.balloon.pointerOrientation = \"V\";","                var f = a.x,","                    g = a.y;","                c.rotate && (f = a.y, g = a.x);","                c.showBalloon(d, e, !0, f + c.marginLeftReal, g + c.marginTopReal)","            }","        }","        this.handleGraphEvent(b, \"rollOverGraph\")","    },","    handleRollOut: function(a, b) {","        this.chart.hideBalloon();","        if (a) {","            var c = {","                type: \"rollOutGraphItem\",","                item: a,","                index: a.index,","                graph: this,","                target: this,","                chart: this.chart,","                event: b","            };","            this.fire(\"rollOutGraphItem\", c);","            this.chart.fire(\"rollOutGraphItem\", c)","        }","        this.handleGraphEvent(b,","            \"rollOutGraph\")","    },","    handleClick: function(a, b) {","        if (a) {","            var c = {","                type: \"clickGraphItem\",","                item: a,","                index: a.index,","                graph: this,","                target: this,","                chart: this.chart,","                event: b","            };","            this.fire(\"clickGraphItem\", c);","            this.chart.fire(\"clickGraphItem\", c);","            AmCharts.getURL(a.url, this.urlTarget)","        }","        this.handleGraphEvent(b, \"clickGraph\")","    },","    handleGraphEvent: function(a, b) {","        var c = {","            type: b,","            graph: this,","            target: this,","            chart: this.chart,","            event: a","        };","        this.fire(b, c);","        this.chart.fire(b, c)","    },","    handleRightClick: function(a, b) {","        if (a) {","            var c = {","                type: \"rightClickGraphItem\",","                item: a,","                index: a.index,","                graph: this,","                target: this,","                chart: this.chart,","                event: b","            };","            this.fire(\"rightClickGraphItem\", c);","            this.chart.fire(\"rightClickGraphItem\", c)","        }","    },","    handleDoubleClick: function(a, b) {","        if (a) {","            var c = {","                type: \"doubleClickGraphItem\",","                item: a,","                index: a.index,","                graph: this,","                target: this,","                chart: this.chart,","                event: b","            };","            this.fire(\"doubleClickGraphItem\", c);","            this.chart.fire(\"doubleClickGraphItem\", c)","        }","    },","    zoom: function(a, b) {","        this.start = a;","        this.end = b;","        this.draw()","    },","    changeOpacity: function(a) {","        var b = this.set;","        b && b.setAttr(\"opacity\", a);","        if (b = this.ownColumns) {","            var c;","            for (c = 0; c < b.length; c++) {","                var d = b[c].set;","                d && d.setAttr(\"opacity\", a)","            }","        }(b = this.bulletSet) && b.setAttr(\"opacity\", a)","    },","    destroy: function() {","        AmCharts.remove(this.set);","        AmCharts.remove(this.bulletSet);","        var a = this.timeOuts;","        if (a) {","            var b;","            for (b = 0; b < a.length; b++) clearTimeout(a[b])","        }","        this.timeOuts = []","    }","});","AmCharts.ChartCursor = AmCharts.Class({","    construct: function(a) {","        this.cname = \"ChartCursor\";","        this.createEvents(\"changed\", \"zoomed\", \"onHideCursor\", \"draw\", \"selected\", \"moved\");","        this.enabled = !0;","        this.cursorAlpha = 1;","        this.selectionAlpha = .2;","        this.cursorColor = \"#CC0000\";","        this.categoryBalloonAlpha = 1;","        this.color = \"#FFFFFF\";","        this.type = \"cursor\";","        this.zoomed = !1;","        this.zoomable = !0;","        this.pan = !1;","        this.categoryBalloonDateFormat = \"MMM DD, YYYY\";","        this.categoryBalloonEnabled = this.valueBalloonsEnabled = !0;","        this.rolledOver = !1;","        this.cursorPosition =","            \"middle\";","        this.bulletsEnabled = this.skipZoomDispatch = !1;","        this.bulletSize = 8;","        this.selectWithoutZooming = this.oneBalloonOnly = !1;","        this.graphBulletSize = 1.7;","        this.animationDuration = .3;","        this.zooming = !1;","        this.adjustment = 0;","        this.avoidBalloonOverlapping = !0;","        AmCharts.applyTheme(this, a, this.cname)","    },","    draw: function() {","        var a = this;","        a.destroy();","        var b = a.chart,","            c = b.container;","        a.rotate = b.rotate;","        a.container = c;","        c = c.set();","        c.translate(a.x, a.y);","        a.set = c;","        b.cursorSet.push(c);","        c = new AmCharts.AmBalloon;","        c.chart = b;","        a.categoryBalloon = c;","        AmCharts.copyProperties(b.balloon,","            c);","        c.cornerRadius = 0;","        c.shadowAlpha = 0;","        c.borderThickness = 1;","        c.borderAlpha = 1;","        c.showBullet = !1;","        var d = a.categoryBalloonColor;","        void 0 === d && (d = a.cursorColor);","        c.fillColor = d;","        c.fillAlpha = a.categoryBalloonAlpha;","        c.borderColor = d;","        c.color = a.color;","        d = a.valueLineAxis;","        AmCharts.isString(d) && (d = b.getValueAxisById(d));","        d || (d = b.valueAxes[0]);","        a.valueLineAxis = d;","        a.valueLineBalloonEnabled && (d = new AmCharts.AmBalloon, a.vaBalloon = d, AmCharts.copyProperties(c, d), d.animationDuration = 0, a.rotate || (d.pointerOrientation = \"H\"));","        a.rotate && (c.pointerOrientation =","            \"H\");","        a.extraWidth = 0;","        a.prevX = [];","        a.prevY = [];","        a.prevTX = [];","        a.prevTY = [];","        if (a.valueBalloonsEnabled)","            for (c = 0; c < b.graphs.length; c++) d = new AmCharts.AmBalloon, d.chart = b, AmCharts.copyProperties(b.balloon, d), b.graphs[c].valueBalloon = d;","        \"cursor\" == a.type ? a.createCursor() : a.createCrosshair();","        a.interval = setInterval(function() {","            a.detectMovement.call(a)","        }, 40)","    },","    updateData: function() {","        var a = this.chart;","        this.data = a.chartData;","        this.firstTime = a.firstTime;","        this.lastTime = a.lastTime","    },","    createCursor: function() {","        var a = this.chart,","            b = this.cursorAlpha,","            c = a.categoryAxis,","            d = this.categoryBalloon,","            e, f, g, h;","        g = a.dx;","        h = a.dy;","        var k = this.width,","            l = this.height,","            a = a.rotate;","        d.pointerWidth = c.tickLength;","        a ? (e = [0, k, k + g], f = [0, 0, h], g = [g, 0, 0], h = [h, 0, l]) : (e = [g, 0, 0], f = [h, 0, l], g = [0, k, k + g], h = [0, 0, h]);","        this.line = e = AmCharts.line(this.container, e, f, this.cursorColor, b, 1);","        (f = this.fullRectSet) ? (f.push(e), f.translate(this.x, this.y)) : this.set.push(e);","        this.valueLineEnabled && (e = this.valueLineAlpha, isNaN(e) || (b = e), this.vLine = b = AmCharts.line(this.container, g, h, this.cursorColor, b, 1), this.set.push(b));","        this.setBalloonBounds(d, c, a);","        (c = this.vaBalloon) && this.setBalloonBounds(c, this.valueLineAxis, !a);","        this.hideCursor()","    },","    createCrosshair: function() {","        var a = this.cursorAlpha,","            b = this.container,","            c = AmCharts.line(b, [0, 0], [0, this.height], this.cursorColor, a, 1),","            a = AmCharts.line(b, [0, this.width], [0, 0], this.cursorColor, a, 1);","        this.set.push(c);","        this.set.push(a);","        this.vLine = c;","        this.hLine = a;","        this.hideCursor()","    },","    detectMovement: function() {","        var a = this.chart;","        if (a.mouseIsOver) {","            var b = a.mouseX - this.x,","                c = a.mouseY - this.y; - .5 < b && b < this.width +","                1 && 0 < c && c < this.height ? (this.drawing ? this.rolledOver || a.setMouseCursor(\"crosshair\") : this.pan && (this.rolledOver || a.setMouseCursor(\"move\")), this.rolledOver = !0, (this.valueLineEnabled || this.valueLineBalloonEnabled) && this.updateVLine(b, c), this.setPosition()) : this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1)","        }","        else this.rolledOver && (this.handleMouseOut(), this.rolledOver = !1)","    },","    updateVLine: function(a, b) {","        var c = this.vLine,","            d = this.vaBalloon;","        if ((c || d) && !this.panning && !this.drawing) {","            c && c.show();","            var e = this.valueLineAxis,","                f, g = this.rotate;","            g ? (c && c.translate(a, 0), e && (f = e.coordinateToValue(a)), c = a) : (c && c.translate(0, b), e && (f = e.coordinateToValue(b)), c = b - 1);","            if (d && !isNaN(f) && this.prevLineValue != f) {","                var h = e.formatValue(f, !0);","                d && (this.setBalloonPosition(d, e, c, !g), d.showBalloon(h))","            }","            this.prevLineValue = f","        }","    },","    getMousePosition: function() {","        var a, b = this.width,","            c = this.height;","        a = this.chart;","        this.rotate ? (a = a.mouseY - this.y, 0 > a && (a = 0), a > c && (a = c)) : (a = a.mouseX - this.x - 1, 0 > a && (a = 0), a > b && (a = b));","        return a","    },","    updateCrosshair: function() {","        var a = this.chart,","            b = a.mouseX - this.x,","            c = a.mouseY - this.y,","            d = this.vLine,","            e = this.hLine,","            b = AmCharts.fitToBounds(b, 0, this.width),","            c = AmCharts.fitToBounds(c, 0, this.height);","        0 < this.cursorAlpha && (d.show(), e.show(), d.translate(b, 0), e.translate(0, c));","        this.zooming && (a.hideXScrollbar && (b = NaN), a.hideYScrollbar && (c = NaN), this.updateSelectionSize(b, c));","        this.fireMoved();","        a.mouseIsOver || this.zooming || this.hideCursor()","    },","    fireMoved: function() {","        var a = this.chart,","            b = {","                type: \"moved\",","                target: this","            };","        b.chart = a;","        b.zooming = this.zooming;","        b.x = a.mouseX - this.x;","        b.y =","            a.mouseY - this.y;","        this.fire(\"moved\", b)","    },","    updateSelectionSize: function(a, b) {","        AmCharts.remove(this.selection);","        var c = this.selectionPosX,","            d = this.selectionPosY,","            e = 0,","            f = 0,","            g = this.width,","            h = this.height;","        isNaN(a) || (c > a && (e = a, g = c - a), c < a && (e = c, g = a - c), c == a && (e = a, g = 0), g += this.extraWidth, e -= this.extraWidth / 2);","        isNaN(b) || (d > b && (f = b, h = d - b), d < b && (f = d, h = b - d), d == b && (f = b, h = 0), h += this.extraWidth, f -= this.extraWidth / 2);","        0 < g && 0 < h && (c = AmCharts.rect(this.container, g, h, this.cursorColor, this.selectionAlpha), c.translate(e + this.x, f + this.y),","            this.selection = c)","    },","    arrangeBalloons: function() {","        var a = this.valueBalloons,","            b = this.x,","            c = this.y,","            d = this.height + c;","        a.sort(this.compareY);","        var e;","        for (e = 0; e < a.length; e++) {","            var f = a[e].balloon;","            f.setBounds(b, c, b + this.width, d);","            f.prevX = this.prevX[e];","            f.prevY = this.prevY[e];","            f.prevTX = this.prevTX[e];","            f.prevTY = this.prevTY[e];","            f.draw();","            d = f.yPos - 3","        }","        this.arrangeBalloons2()","    },","    compareY: function(a, b) {","        return a.yy < b.yy ? 1 : -1","    },","    arrangeBalloons2: function() {","        var a = this.valueBalloons;","        a.reverse();","        var b, c = this.x,","            d, e, f = a.length;","        for (e = 0; e < f; e++) {","            var g =","                a[e].balloon;","            b = g.bottom;","            var h = g.bottom - g.yPos,","                k = f - e - 1;","            0 < e && b - h < d + 3 && (g.setBounds(c, d + 3, c + this.width, d + h + 3), g.prevX = this.prevX[k], g.prevY = this.prevY[k], g.prevTX = this.prevTX[k], g.prevTY = this.prevTY[k], g.draw());","            g.set && g.set.show();","            this.prevX[k] = g.prevX;","            this.prevY[k] = g.prevY;","            this.prevTX[k] = g.prevTX;","            this.prevTY[k] = g.prevTY;","            d = g.bottom","        }","    },","    showBullets: function() {","        AmCharts.remove(this.allBullets);","        var a = this.container,","            b = a.set();","        this.set.push(b);","        this.set.show();","        this.allBullets = b;","        var b = this.chart.graphs,","            c;","        for (c =","            0; c < b.length; c++) {","            var d = b[c];","            if (!d.hidden && d.balloonText) {","                var e = this.data[this.index].axes[d.valueAxis.id].graphs[d.id],","                    f = e.y;","                if (!isNaN(f)) {","                    var g, h;","                    g = e.x;","                    this.rotate ? (h = f, f = g) : h = g;","                    d = AmCharts.circle(a, this.bulletSize / 2, this.chart.getBalloonColor(d, e, !0), d.cursorBulletAlpha);","                    d.translate(h, f);","                    this.allBullets.push(d)","                }","            }","        }","    },","    destroy: function() {","        this.clear();","        AmCharts.remove(this.selection);","        this.selection = null;","        var a = this.categoryBalloon;","        a && a.destroy();","        (a = this.vaBalloon) && a.destroy();","        this.destroyValueBalloons();","        AmCharts.remove(this.set)","    },","    clear: function() {","        clearInterval(this.interval)","    },","    destroyValueBalloons: function() {","        var a = this.valueBalloons;","        if (a) {","            var b;","            for (b = 0; b < a.length; b++) a[b].balloon.hide()","        }","    },","    zoom: function(a, b, c, d) {","        var e = this.chart;","        this.destroyValueBalloons();","        this.zooming = !1;","        var f;","        this.rotate ? this.selectionPosY = f = e.mouseY : this.selectionPosX = f = e.mouseX;","        this.start = a;","        this.end = b;","        this.startTime = c;","        this.endTime = d;","        this.zoomed = !0;","        d = e.categoryAxis;","        e = this.rotate;","        b = this.width;","        c = this.height;","        a = d.stepWidth;","        this.fullWidth &&","            (f = 1, d.parseDates && !d.equalSpacing && (f = d.minDuration()), e ? this.extraWidth = c = a * f : (this.extraWidth = b = a * f, this.categoryBalloon.minWidth = b), this.line && this.line.remove(), this.line = AmCharts.rect(this.container, b, c, this.cursorColor, this.cursorAlpha, 0), this.fullRectSet && this.fullRectSet.push(this.line));","        this.stepWidth = a;","        this.tempVal = this.valueBalloonsEnabled;","        this.valueBalloonsEnabled = !1;","        this.setPosition();","        this.valueBalloonsEnabled = this.tempVal;","        this.hideCursor()","    },","    hideObj: function(a) {","        a && a.hide()","    },","    hideCursor: function(a) {","        void 0 ===","            a && (a = !0);","        this.hideObj(this.set);","        this.hideObj(this.categoryBalloon);","        this.hideObj(this.line);","        this.hideObj(this.vLine);","        this.hideObj(this.hLine);","        this.hideObj(this.vaBalloon);","        this.hideObj(this.allBullets);","        this.destroyValueBalloons();","        this.selectWithoutZooming || AmCharts.remove(this.selection);","        this.previousIndex = NaN;","        a && this.fire(\"onHideCursor\", {","            type: \"onHideCursor\",","            chart: this.chart,","            target: this","        });","        this.drawing || this.chart.setMouseCursor(\"auto\");","        this.normalizeBulletSize()","    },","    setPosition: function(a, b, c) {","        void 0 ===","            b && (b = !0);","        if (\"cursor\" == this.type) {","            if (this.tempPosition = NaN, AmCharts.ifArray(this.data)) isNaN(a) && (a = this.getMousePosition()), (a != this.previousMousePosition || !0 === this.zoomed || this.oneBalloonOnly) && !isNaN(a) && (\"mouse\" == this.cursorPosition && (this.tempPosition = a), isNaN(c) && (c = this.chart.categoryAxis.xToIndex(a)), c != this.previousIndex || this.zoomed || \"mouse\" == this.cursorPosition || this.oneBalloonOnly) && (this.updateCursor(c, b), this.zoomed = !1), this.previousMousePosition = a","        }","        else this.updateCrosshair()","    },","    normalizeBulletSize: function() {","        var a =","            this.resizedBullets;","        if (a)","            for (var b = 0; b < a.length; b++) {","                var c = a[b],","                    d = c.bulletGraphics;","                d && (d.translate(c.bx, c.by, 1), c = c.graph, isNaN(this.graphBulletAlpha) || (d.setAttr(\"fill-opacity\", c.bulletAlpha), d.setAttr(\"stroke-opacity\", c.bulletBorderAlpha)))","            }","    },","    updateCursor: function(a, b) {","        var c = this.chart,","            d = this.fullWidth,","            e = c.mouseX - this.x,","            f = c.mouseY - this.y;","        this.drawingNow && (AmCharts.remove(this.drawingLine), this.drawingLine = AmCharts.line(this.container, [this.x + this.drawStartX, this.x + e], [this.y + this.drawStartY, this.y +","            f","        ], this.cursorColor, 1, 1));","        if (this.enabled) {","            void 0 === b && (b = !0);","            this.index = a += this.adjustment;","            var g = c.categoryAxis,","                h = c.dx,","                k = c.dy,","                l = this.x + 1,","                m = this.y + 1,","                n = this.width,","                p = this.height,","                q = this.data[a];","            this.fireMoved();","            if (q) {","                var r = q.x[g.id],","                    s = c.rotate,","                    w = this.stepWidth,","                    v = this.categoryBalloon,","                    t = this.firstTime,","                    u = this.lastTime,","                    x = this.cursorPosition,","                    E = this.zooming,","                    A = this.panning,","                    z = c.graphs;","                if (c.mouseIsOver || E || A || this.forceShow)","                    if (this.forceShow = !1, A) {","                        var h = this.panClickPos,","                            c = this.panClickEndTime,","                            E = this.panClickStartTime,","                            H = this.panClickEnd,","                            l = this.panClickStart,","                            e = (s ? h - f : h - e) / w;","                        if (!g.parseDates || g.equalSpacing) e = Math.round(e);","                        0 !== e && (h = {","                            type: \"zoomed\",","                            target: this","                        }, h.chart = this.chart, g.parseDates && !g.equalSpacing ? (c + e > u && (e = u - c), E + e < t && (e = t - E), h.start = Math.round(E + e), h.end = Math.round(c + e), this.fire(h.type, h)) : H + e >= this.data.length || 0 > l + e || (h.start = l + e, h.end = H + e, this.fire(h.type, h)))","                    }","                    else {","                        \"start\" == x ? r -= g.cellWidth / 2 : \"mouse\" == x && (c.mouseIsOver ? r = s ? f - 2 : e - 2 : isNaN(this.tempPosition) || (r = this.tempPosition - 2));","                        if (s) {","                            if (0 > r)","                                if (E) r =","                                    0;","                                else {","                                    this.hideCursor();","                                    return","                                }","                            if (r > p + 1)","                                if (E) r = p + 1;","                                else {","                                    this.hideCursor();","                                    return","                                }","                        }","                        else {","                            if (0 > r)","                                if (E) r = 0;","                                else {","                                    this.hideCursor();","                                    return","                                }","                            if (r > n)","                                if (E) r = n;","                                else {","                                    this.hideCursor();","                                    return","                                }","                        } if (0 < this.cursorAlpha) {","                            var F = this.line;","                            s ? (t = 0, u = r + k, d && (u -= g.cellWidth / 2)) : (t = r, u = 0, d && (t -= g.cellWidth / 2));","                            w = this.animationDuration;","                            0 < w && !this.zooming ? isNaN(this.previousX) ? F.translate(t, u) : (F.translate(this.previousX, this.previousY), F.animate({","                                translate: t + \",\" + u","                            }, w, \"easeOutSine\")) : F.translate(t, u);","                            this.previousX = t;","                            this.previousY =","                                u;","                            F.show()","                        }","                        this.linePos = s ? r + k : r;","                        E && (d && F.hide(), s ? this.updateSelectionSize(NaN, r) : this.updateSelectionSize(r, NaN));","                        w = !0;","                        E && (w = !1);","                        this.categoryBalloonEnabled && w ? (this.setBalloonPosition(v, g, r, s), (t = this.categoryBalloonFunction) ? v.showBalloon(t(q.category)) : g.parseDates ? (g = AmCharts.formatDate(q.category, this.categoryBalloonDateFormat, c), -1 != g.indexOf(\"fff\") && (g = AmCharts.formatMilliseconds(g, q.category)), v.showBalloon(g)) : v.showBalloon(AmCharts.fixNewLines(q.category))) : v.hide();","                        z && this.bulletsEnabled &&","                            this.showBullets();","                        if (this.oneBalloonOnly) {","                            r = Infinity;","                            for (g = 0; g < z.length; g++) t = z[g], t.showBalloon && !t.hidden && t.balloonText && (u = q.axes[t.valueAxis.id].graphs[t.id], v = u.y, isNaN(v) || (s ? Math.abs(e - v) < r && (r = Math.abs(e - v), H = t) : Math.abs(f - v) < r && (r = Math.abs(f - v), H = t)));","                            this.mostCloseGraph && (H = this.mostCloseGraph)","                        }","                        if (a != this.previousIndex || H != this.previousMostCloseGraph)","                            if (this.normalizeBulletSize(), this.destroyValueBalloons(), this.resizedBullets = [], z && this.valueBalloonsEnabled && w && c.balloon.enabled) {","                                this.valueBalloons =","                                    w = [];","                                for (g = 0; g < z.length; g++)","                                    if (t = z[g], v = NaN, (!this.oneBalloonOnly || t == H) && t.showBalloon && !t.hidden && t.balloonText && (\"step\" == t.type && \"left\" == t.stepDirection && (q = this.data[a + 1]), q)) {","                                        if (u = q.axes[t.valueAxis.id].graphs[t.id]) v = u.y;","                                        if (this.showNextAvailable && isNaN(v) && a + 1 < this.data.length)","                                            for (r = a + 1; r < this.data.length; r++)","                                                if (d = this.data[r])","                                                    if (u = d.axes[t.valueAxis.id].graphs[t.id], v = u.y, !isNaN(v)) break;","                                        if (!isNaN(v)) {","                                            d = u.x;","                                            k = !0;","                                            if (s) {","                                                if (r = v, 0 > d || d > p) k = !1","                                            }","                                            else if (r = d, d = v, 0 > r || r > n + h + 1) k = !1;","                                            k && (k = this.graphBulletSize,","                                                F = this.graphBulletAlpha, 1 == k && isNaN(F) || !AmCharts.isModern || !(x = u.bulletGraphics) || (x.getBBox(), x.translate(u.bx, u.by, k), this.resizedBullets.push(u), isNaN(F) || (x.setAttr(\"fill-opacity\", F), x.setAttr(\"stroke-opacity\", F))), k = t.valueBalloon, F = c.getBalloonColor(t, u), k.setBounds(l, m, l + n, m + p), k.pointerOrientation = \"H\", x = this.balloonPointerOrientation, \"vertical\" == x && (k.pointerOrientation = \"V\"), \"horizontal\" == x && (k.pointerOrientation = \"H\"), k.changeColor(F), void 0 !== t.balloonAlpha && (k.fillAlpha = t.balloonAlpha),","                                                void 0 !== t.balloonTextColor && (k.color = t.balloonTextColor), k.setPosition(r + l, d + m), r = c.formatString(t.balloonText, u, !0), (d = t.balloonFunction) && (r = d(u, t).toString()), \"\" !== r && (s ? k.showBalloon(r) : (k.text = r, k.show = !0), w.push({","                                                    yy: v,","                                                    balloon: k","                                                })), !s && k.set && (k.set.hide(), t = k.textDiv) && (t.style.visibility = \"hidden\"))","                                        }","                                    }","                                this.avoidBalloonOverlapping && this.arrangeBalloons()","                            }","                        b ? (h = {","                            type: \"changed\"","                        }, h.index = a, h.chart = this.chart, h.zooming = E, h.mostCloseGraph = H, h.position = s ? f : e, h.target = this, c.fire(\"changed\", h), this.fire(\"changed\",","                            h), this.skipZoomDispatch = !1) : (this.skipZoomDispatch = !0, c.updateLegendValues(a));","                        this.previousIndex = a;","                        this.previousMostCloseGraph = H","                    }","            }","        }","        else this.hideCursor()","    },","    setBalloonPosition: function(a, b, c, d) {","        var e = b.position,","            f = b.inside;","        b = b.axisThickness;","        var g = this.chart,","            h = g.dx,","            g = g.dy,","            k = this.x,","            l = this.y,","            m = this.width,","            n = this.height;","        d ? (f && (\"right\" == e ? a.setBounds(k, l + g, k + m + h, l + c + g) : a.setBounds(k, l + g, k + m + h, l + c)), \"right\" == e ? f ? a.setPosition(k + m + h, l + c + g) : a.setPosition(k + m + h + b, l + c + g) : f ? a.setPosition(k, l + c) : a.setPosition(k -","            b, l + c)) : \"top\" == e ? f ? a.setPosition(k + c + h, l + g) : a.setPosition(k + c + h, l + g - b + 1) : f ? a.setPosition(k + c, l + n) : a.setPosition(k + c, l + n + b - 1)","    },","    setBalloonBounds: function(a, b, c) {","        var d = b.position,","            e = b.inside,","            f = b.axisThickness,","            g = b.tickLength,","            h = this.chart,","            k = h.dx,","            h = h.dy,","            l = this.x,","            m = this.y,","            n = this.width,","            p = this.height;","        c ? (e && (a.pointerWidth = 0), \"right\" == d ? e ? a.setBounds(l, m + h, l + n + k, m + p + h) : a.setBounds(l + n + k + f, m + h, l + n + 1E3, m + p + h) : e ? a.setBounds(l, m, n + l, p + m) : a.setBounds(-1E3, -1E3, l - g - f, m + p + 15)) : (a.maxWidth = n, b.parseDates && (g = 0, a.pointerWidth =","            0), \"top\" == d ? e ? a.setBounds(l + k, m + h, n + k + l, p + m) : a.setBounds(l + k, -1E3, n + k + l, m + h - g - f) : e ? a.setBounds(l, m, n + l, p + m - g) : a.setBounds(l, m + p + g + f - 1, l + n, m + p + g + f))","    },","    enableDrawing: function(a) {","        this.enabled = !a;","        this.hideCursor();","        this.rolledOver = !1;","        this.drawing = a","    },","    isZooming: function(a) {","        a && a != this.zooming && this.handleMouseDown(\"fake\");","        a || a == this.zooming || this.handleMouseUp()","    },","    handleMouseOut: function() {","        if (this.enabled)","            if (this.zooming) this.setPosition();","            else {","                this.index = void 0;","                var a = {","                    type: \"changed\",","                    index: void 0,","                    target: this","                };","                a.chart = this.chart;","                this.fire(\"changed\", a);","                this.hideCursor()","            }","    },","    handleReleaseOutside: function() {","        this.handleMouseUp()","    },","    handleMouseUp: function() {","        var a = this.chart,","            b = this.data,","            c;","        if (a) {","            var d = a.mouseX - this.x,","                e = a.mouseY - this.y;","            if (this.drawingNow) {","                this.drawingNow = !1;","                AmCharts.remove(this.drawingLine);","                c = this.drawStartX;","                var f = this.drawStartY;","                if (2 < Math.abs(c - d) || 2 < Math.abs(f - e)) c = {","                    type: \"draw\",","                    target: this,","                    chart: a,","                    initialX: c,","                    initialY: f,","                    finalX: d,","                    finalY: e","                }, this.fire(c.type, c)","            }","            if (this.enabled && 0 < b.length) {","                if (this.pan) this.rolledOver = !1;","                else if (this.zoomable && this.zooming) {","                    c = this.selectWithoutZooming ? {","                        type: \"selected\"","                    } : {","                        type: \"zoomed\"","                    };","                    c.target = this;","                    c.chart = a;","                    if (\"cursor\" == this.type) this.rotate ? this.selectionPosY = e : this.selectionPosX = e = d, 2 > Math.abs(e - this.initialMouse) && this.fromIndex == this.index || (this.index < this.fromIndex ? (c.end = this.fromIndex, c.start = this.index) : (c.end = this.index, c.start = this.fromIndex), e = a.categoryAxis, e.parseDates && !e.equalSpacing && (b[c.start] && (c.start = b[c.start].time), b[c.end] && (c.end = a.getEndTime(b[c.end].time))),","                        this.skipZoomDispatch || this.fire(c.type, c));","                    else {","                        var g = this.initialMouseX,","                            h = this.initialMouseY;","                        3 > Math.abs(d - g) && 3 > Math.abs(e - h) || (b = Math.min(g, d), f = Math.min(h, e), d = Math.abs(g - d), e = Math.abs(h - e), a.hideXScrollbar && (b = 0, d = this.width), a.hideYScrollbar && (f = 0, e = this.height), c.selectionHeight = e, c.selectionWidth = d, c.selectionY = f, c.selectionX = b, this.skipZoomDispatch || this.fire(c.type, c))","                    }","                    this.selectWithoutZooming || AmCharts.remove(this.selection)","                }","                this.skipZoomDispatch = !1","            }","        }","        this.panning = this.zooming = !1","    },","    showCursorAt: function(a) {","        var b =","            this.chart.categoryAxis;","        a = b.parseDates ? b.dateToCoordinate(a) : b.categoryToCoordinate(a);","        this.previousMousePosition = NaN;","        this.forceShow = !0;","        this.setPosition(a, !1)","    },","    clearSelection: function() {","        AmCharts.remove(this.selection)","    },","    handleMouseDown: function(a) {","        if (this.zoomable || this.pan || this.drawing) {","            var b = this.rotate,","                c = this.chart,","                d = c.mouseX - this.x,","                e = c.mouseY - this.y;","            if (0 < d && d < this.width && 0 < e && e < this.height || \"fake\" == a) this.setPosition(), this.selectWithoutZooming && AmCharts.remove(this.selection), this.drawing ? (this.drawStartY =","                e, this.drawStartX = d, this.drawingNow = !0) : this.pan ? (this.zoomable = !1, c.setMouseCursor(\"move\"), this.panning = !0, this.panClickPos = b ? e : d, this.panClickStart = this.start, this.panClickEnd = this.end, this.panClickStartTime = this.startTime, this.panClickEndTime = this.endTime) : this.zoomable && (\"cursor\" == this.type ? (this.fromIndex = this.index, b ? (this.initialMouse = e, this.selectionPosY = this.linePos) : (this.initialMouse = d, this.selectionPosX = this.linePos)) : (this.initialMouseX = d, this.initialMouseY = e, this.selectionPosX = d, this.selectionPosY =","                e), this.zooming = !0)","        }","    }","});","AmCharts.SimpleChartScrollbar = AmCharts.Class({","    construct: function(a) {","        this.createEvents(\"zoomed\");","        this.backgroundColor = \"#D4D4D4\";","        this.backgroundAlpha = 1;","        this.selectedBackgroundColor = \"#EFEFEF\";","        this.scrollDuration = this.selectedBackgroundAlpha = 1;","        this.resizeEnabled = !0;","        this.hideResizeGrips = !1;","        this.scrollbarHeight = 20;","        this.updateOnReleaseOnly = !1;","        9 > document.documentMode && (this.updateOnReleaseOnly = !0);","        this.dragIconWidth = 18;","        this.dragIconHeight = 25;","        AmCharts.applyTheme(this, a, \"SimpleChartScrollbar\")","    },","    draw: function() {","        var a =","            this;","        a.destroy();","        a.interval = setInterval(function() {","            a.updateScrollbar.call(a)","        }, 40);","        var b = a.chart.container,","            c = a.rotate,","            d = a.chart,","            e = b.set();","        a.set = e;","        d.scrollbarsSet.push(e);","        var f, g;","        c ? (f = a.scrollbarHeight, g = d.plotAreaHeight) : (g = a.scrollbarHeight, f = d.plotAreaWidth);","        a.width = f;","        if ((a.height = g) && f) {","            var h = AmCharts.rect(b, f, g, a.backgroundColor, a.backgroundAlpha, 1, a.backgroundColor, a.backgroundAlpha);","            a.bg = h;","            e.push(h);","            h = AmCharts.rect(b, f, g, \"#000\", .005);","            e.push(h);","            a.invisibleBg = h;","            h.click(function() {","                a.handleBgClick()","            }).mouseover(function() {","                a.handleMouseOver()","            }).mouseout(function() {","                a.handleMouseOut()","            }).touchend(function() {","                a.handleBgClick()","            });","            h = AmCharts.rect(b, f, g, a.selectedBackgroundColor, a.selectedBackgroundAlpha);","            a.selectedBG = h;","            e.push(h);","            f = AmCharts.rect(b, f, g, \"#000\", .005);","            a.dragger = f;","            e.push(f);","            f.mousedown(function(b) {","                a.handleDragStart(b)","            }).mouseup(function() {","                a.handleDragStop()","            }).mouseover(function() {","                a.handleDraggerOver()","            }).mouseout(function() {","                a.handleMouseOut()","            }).touchstart(function(b) {","                a.handleDragStart(b)","            }).touchend(function() {","                a.handleDragStop()","            });","            f = d.pathToImages;","            c ? (h = f + \"dragIconH.gif\", f = a.dragIconWidth, c = a.dragIconHeight) : (h = f + \"dragIcon.gif\",","                c = a.dragIconWidth, f = a.dragIconHeight);","            g = b.image(h, 0, 0, c, f);","            var h = b.image(h, 0, 0, c, f),","                k = 10,","                l = 20;","            d.panEventsEnabled && (k = 25, l = a.scrollbarHeight);","            var m = AmCharts.rect(b, k, l, \"#000\", .005),","                n = AmCharts.rect(b, k, l, \"#000\", .005);","            n.translate(-(k - c) / 2, -(l - f) / 2);","            m.translate(-(k - c) / 2, -(l - f) / 2);","            c = b.set([g, n]);","            b = b.set([h, m]);","            a.iconLeft = c;","            a.iconRight = b;","            c.mousedown(function() {","                a.leftDragStart()","            }).mouseup(function() {","                a.leftDragStop()","            }).mouseover(function() {","                a.iconRollOver()","            }).mouseout(function() {","                a.iconRollOut()","            }).touchstart(function(b) {","                a.leftDragStart()","            }).touchend(function() {","                a.leftDragStop()","            });","            b.mousedown(function() {","                a.rightDragStart()","            }).mouseup(function() {","                a.rightDragStop()","            }).mouseover(function() {","                a.iconRollOver()","            }).mouseout(function() {","                a.iconRollOut()","            }).touchstart(function(b) {","                a.rightDragStart()","            }).touchend(function() {","                a.rightDragStop()","            });","            AmCharts.ifArray(d.chartData) ? e.show() : e.hide();","            a.hideDragIcons();","            a.clipDragger(!1)","        }","        e.translate(a.x, a.y)","    },","    updateScrollbarSize: function(a, b) {","        var c = this.dragger,","            d, e, f, g;","        this.rotate ? (d = 0, e = a, f = this.width + 1, g = b - a, c.setAttr(\"height\", b - a), c.setAttr(\"y\", e)) : (d = a,","            e = 0, f = b - a, g = this.height + 1, c.setAttr(\"width\", b - a), c.setAttr(\"x\", d));","        this.clipAndUpdate(d, e, f, g)","    },","    updateScrollbar: function() {","        var a, b = !1,","            c, d, e = this.x,","            f = this.y,","            g = this.dragger,","            h = this.getDBox();","        c = h.x + e;","        d = h.y + f;","        var k = h.width,","            h = h.height,","            l = this.rotate,","            m = this.chart,","            n = this.width,","            p = this.height,","            q = m.mouseX,","            r = m.mouseY;","        a = this.initialMouse;","        this.forceClip && this.clipDragger(!0);","        m.mouseIsOver && (this.dragging && (m = this.initialCoord, l ? (a = m + (r - a), 0 > a && (a = 0), m = p - h, a > m && (a = m), g.setAttr(\"y\", a)) : (a = m + (q - a), 0 > a && (a = 0), m = n - k,","            a > m && (a = m), g.setAttr(\"x\", a)), this.clipDragger(!0)), this.resizingRight && (l ? (a = r - d, a + d > p + f && (a = p - d + f), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr(\"height\", a))) : (a = q - c, a + c > n + e && (a = n - c + e), 0 > a ? (this.resizingRight = !1, b = this.resizingLeft = !0) : (0 === a && (a = .1), g.setAttr(\"width\", a))), this.clipDragger(!0)), this.resizingLeft && (l ? (c = d, d = r, d < f && (d = f), d > p + f && (d = p + f), a = !0 === b ? c - d : h + c - d, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"y\", c + h - f)) : (0 === a && (a = .1), g.setAttr(\"y\",","            d - f), g.setAttr(\"height\", a))) : (d = q, d < e && (d = e), d > n + e && (d = n + e), a = !0 === b ? c - d : k + c - d, 0 > a ? (this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"x\", c + k - e)) : (0 === a && (a = .1), g.setAttr(\"x\", d - e), g.setAttr(\"width\", a))), this.clipDragger(!0)))","    },","    stopForceClip: function() {","        this.forceClip = !1","    },","    clipDragger: function(a) {","        var b = this.getDBox();","        if (b) {","            var c = b.x,","                d = b.y,","                e = b.width,","                b = b.height,","                f = !1;","            if (this.rotate) {","                if (c = 0, e = this.width + 1, this.clipY != d || this.clipH != b) f = !0","            }","            else if (d = 0, b = this.height + 1, this.clipX != c || this.clipW != e) f = !0;","            f && (this.clipAndUpdate(c, d, e, b), a && (this.updateOnReleaseOnly || this.dispatchScrollbarEvent()))","        }","    },","    maskGraphs: function() {},","    clipAndUpdate: function(a, b, c, d) {","        this.clipX = a;","        this.clipY = b;","        this.clipW = c;","        this.clipH = d;","        this.selectedBG.clipRect(a, b, c, d);","        this.updateDragIconPositions();","        this.maskGraphs(a, b, c, d)","    },","    dispatchScrollbarEvent: function() {","        if (this.skipEvent) this.skipEvent = !1;","        else {","            var a = this.chart;","            a.hideBalloon();","            var b = this.getDBox(),","                c = b.x,","                d = b.y,","                e = b.width,","                b = b.height;","            this.rotate ? (c = d, e = this.height / b) : e = this.width /","                e;","            a = {","                type: \"zoomed\",","                position: c,","                chart: a,","                target: this,","                multiplier: e","            };","            this.fire(a.type, a)","        }","    },","    updateDragIconPositions: function() {","        var a = this.getDBox(),","            b = a.x,","            c = a.y,","            d = this.iconLeft,","            e = this.iconRight,","            f, g, h = this.scrollbarHeight;","        this.rotate ? (f = this.dragIconWidth, g = this.dragIconHeight, d.translate(this.x + (h - g) / 2, this.y + c - f / 2), e.translate(this.x + (h - g) / 2, this.y + c + a.height - f / 2)) : (f = this.dragIconHeight, g = this.dragIconWidth, d.translate(this.x + b - g / 2, this.y + (h - f) / 2), e.translate(this.x + b - g / 2 + a.width, this.y + (h - f) / 2))","    },","    showDragIcons: function() {","        this.resizeEnabled &&","            (this.iconLeft.show(), this.iconRight.show())","    },","    hideDragIcons: function() {","        if (!this.resizingLeft && !this.resizingRight && !this.dragging) {","            if (this.hideResizeGrips || !this.resizeEnabled) this.iconLeft.hide(), this.iconRight.hide();","            this.removeCursors()","        }","    },","    removeCursors: function() {","        this.chart.setMouseCursor(\"auto\")","    },","    relativeZoom: function(a, b) {","        this.dragger.stop();","        this.multiplier = a;","        this.position = b;","        this.updateScrollbarSize(b, this.rotate ? b + this.height / a : b + this.width / a)","    },","    destroy: function() {","        this.clear();","        AmCharts.remove(this.set);","        AmCharts.remove(this.iconRight);","        AmCharts.remove(this.iconLeft)","    },","    clear: function() {","        clearInterval(this.interval)","    },","    handleDragStart: function() {","        var a = this.chart;","        this.dragger.stop();","        this.removeCursors();","        this.dragging = !0;","        var b = this.getDBox();","        this.rotate ? (this.initialCoord = b.y, this.initialMouse = a.mouseY) : (this.initialCoord = b.x, this.initialMouse = a.mouseX)","    },","    handleDragStop: function() {","        this.updateOnReleaseOnly && (this.updateScrollbar(), this.skipEvent = !1, this.dispatchScrollbarEvent());","        this.dragging = !1;","        this.mouseIsOver &&","            this.removeCursors();","        this.updateScrollbar()","    },","    handleDraggerOver: function() {","        this.handleMouseOver()","    },","    leftDragStart: function() {","        this.dragger.stop();","        this.resizingLeft = !0","    },","    leftDragStop: function() {","        this.resizingLeft = !1;","        this.mouseIsOver || this.removeCursors();","        this.updateOnRelease()","    },","    rightDragStart: function() {","        this.dragger.stop();","        this.resizingRight = !0","    },","    rightDragStop: function() {","        this.resizingRight = !1;","        this.mouseIsOver || this.removeCursors();","        this.updateOnRelease()","    },","    iconRollOut: function() {","        this.removeCursors()","    },","    iconRollOver: function() {","        this.rotate ?","            this.chart.setMouseCursor(\"n-resize\") : this.chart.setMouseCursor(\"e-resize\");","        this.handleMouseOver()","    },","    getDBox: function() {","        if (this.dragger) return this.dragger.getBBox()","    },","    handleBgClick: function() {","        var a = this;","        if (!a.resizingRight && !a.resizingLeft) {","            a.zooming = !0;","            var b, c, d = a.scrollDuration,","                e = a.dragger;","            b = a.getDBox();","            var f = b.height,","                g = b.width;","            c = a.chart;","            var h = a.y,","                k = a.x,","                l = a.rotate;","            l ? (b = \"y\", c = c.mouseY - f / 2 - h, c = AmCharts.fitToBounds(c, 0, a.height - f)) : (b = \"x\", c = c.mouseX - g / 2 - k, c = AmCharts.fitToBounds(c, 0, a.width - g));","            a.updateOnReleaseOnly ?","                (a.skipEvent = !1, e.setAttr(b, c), a.dispatchScrollbarEvent(), a.clipDragger()) : (c = Math.round(c), l ? e.animate({","                    y: c","                }, d, \">\") : e.animate({","                    x: c","                }, d, \">\"), a.forceClip = !0, clearTimeout(a.forceTO), a.forceTO = setTimeout(function() {","                    a.stopForceClip.call(a)","                }, 3E3 * d))","        }","    },","    updateOnRelease: function() {","        this.updateOnReleaseOnly && (this.updateScrollbar(), this.skipEvent = !1, this.dispatchScrollbarEvent())","    },","    handleReleaseOutside: function() {","        if (this.set) {","            if (this.resizingLeft || this.resizingRight || this.dragging) this.updateOnRelease(), this.removeCursors();","            this.mouseIsOver = this.dragging = this.resizingRight = this.resizingLeft = !1;","            this.hideDragIcons();","            this.updateScrollbar()","        }","    },","    handleMouseOver: function() {","        this.mouseIsOver = !0;","        this.showDragIcons()","    },","    handleMouseOut: function() {","        this.mouseIsOver = !1;","        this.hideDragIcons()","    }","});","AmCharts.ChartScrollbar = AmCharts.Class({","    inherits: AmCharts.SimpleChartScrollbar,","    construct: function(a) {","        this.cname = \"ChartScrollbar\";","        AmCharts.ChartScrollbar.base.construct.call(this, a);","        this.graphLineColor = \"#BBBBBB\";","        this.graphLineAlpha = 0;","        this.graphFillColor = \"#BBBBBB\";","        this.graphFillAlpha = 1;","        this.selectedGraphLineColor = \"#888888\";","        this.selectedGraphLineAlpha = 0;","        this.selectedGraphFillColor = \"#888888\";","        this.selectedGraphFillAlpha = 1;","        this.gridCount = 0;","        this.gridColor = \"#FFFFFF\";","        this.gridAlpha = .7;","        this.skipEvent = this.autoGridCount = !1;","        this.color = \"#FFFFFF\";","        this.scrollbarCreated = !1;","        this.offset = 0;","        AmCharts.applyTheme(this, a, this.cname)","    },","    init: function() {","        var a = this.categoryAxis,","            b = this.chart;","        a || (this.categoryAxis = a = new AmCharts.CategoryAxis);","        a.chart = b;","        a.id = \"scrollbar\";","        a.dateFormats = b.categoryAxis.dateFormats;","        a.markPeriodChange = b.categoryAxis.markPeriodChange;","        a.boldPeriodBeginning = b.categoryAxis.boldPeriodBeginning;","        a.axisItemRenderer = AmCharts.RecItem;","        a.axisRenderer = AmCharts.RecAxis;","        a.guideFillRenderer = AmCharts.RecFill;","        a.inside = !0;","        a.fontSize =","            this.fontSize;","        a.tickLength = 0;","        a.axisAlpha = 0;","        AmCharts.isString(this.graph) && (this.graph = AmCharts.getObjById(b.graphs, this.graph));","        if (a = this.graph) {","            var c = this.valueAxis;","            c || (this.valueAxis = c = new AmCharts.ValueAxis, c.visible = !1, c.scrollbar = !0, c.axisItemRenderer = AmCharts.RecItem, c.axisRenderer = AmCharts.RecAxis, c.guideFillRenderer = AmCharts.RecFill, c.labelsEnabled = !1, c.chart = b);","            b = this.unselectedGraph;","            b || (b = new AmCharts.AmGraph, b.scrollbar = !0, this.unselectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers =","                a.noStepRisers);","            b = this.selectedGraph;","            b || (b = new AmCharts.AmGraph, b.scrollbar = !0, this.selectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers)","        }","        this.scrollbarCreated = !0","    },","    draw: function() {","        var a = this;","        AmCharts.ChartScrollbar.base.draw.call(a);","        a.scrollbarCreated || a.init();","        var b = a.chart,","            c = b.chartData,","            d = a.categoryAxis,","            e = a.rotate,","            f = a.x,","            g = a.y,","            h = a.width,","            k = a.height,","            l = b.categoryAxis,","            m = a.set;","        d.setOrientation(!e);","        d.parseDates = l.parseDates;","        d.rotate = e;","        d.equalSpacing = l.equalSpacing;","        d.minPeriod = l.minPeriod;","        d.startOnAxis = l.startOnAxis;","        d.viW = h;","        d.viH = k;","        d.width = h;","        d.height = k;","        d.gridCount = a.gridCount;","        d.gridColor = a.gridColor;","        d.gridAlpha = a.gridAlpha;","        d.color = a.color;","        d.tickLength = 0;","        d.axisAlpha = 0;","        d.autoGridCount = a.autoGridCount;","        d.parseDates && !d.equalSpacing && d.timeZoom(b.firstTime, b.lastTime);","        d.zoom(0, c.length - 1);","        if (l = a.graph) {","            var n = a.valueAxis,","                p = l.valueAxis;","            n.id = p.id;","            n.rotate = e;","            n.setOrientation(e);","            n.width = h;","            n.height = k;","            n.viW = h;","            n.viH = k;","            n.dataProvider = c;","            n.reversed = p.reversed;","            n.logarithmic = p.logarithmic;","            n.gridAlpha =","                0;","            n.axisAlpha = 0;","            m.push(n.set);","            e ? (n.y = g, n.x = 0) : (n.x = f, n.y = 0);","            var f = Infinity,","                g = -Infinity,","                q;","            for (q = 0; q < c.length; q++) {","                var r = c[q].axes[p.id].graphs[l.id].values,","                    s;","                for (s in r)","                    if (r.hasOwnProperty(s) && \"percents\" != s && \"total\" != s) {","                        var w = r[s];","                        w < f && (f = w);","                        w > g && (g = w)","                    }","            }","            Infinity != f && (n.minimum = f); - Infinity != g && (n.maximum = g + .1 * (g - f));","            f == g && (n.minimum -= 1, n.maximum += 1);","            void 0 !== a.minimum && (n.minimum = a.minimum);","            void 0 !== a.maximum && (n.maximum = a.maximum);","            n.zoom(0, c.length - 1);","            s = a.unselectedGraph;","            s.id = l.id;","            s.rotate = e;","            s.chart =","                b;","            s.data = c;","            s.valueAxis = n;","            s.chart = l.chart;","            s.categoryAxis = a.categoryAxis;","            s.periodSpan = l.periodSpan;","            s.valueField = l.valueField;","            s.openField = l.openField;","            s.closeField = l.closeField;","            s.highField = l.highField;","            s.lowField = l.lowField;","            s.lineAlpha = a.graphLineAlpha;","            s.lineColorR = a.graphLineColor;","            s.fillAlphas = a.graphFillAlpha;","            s.fillColorsR = a.graphFillColor;","            s.connect = l.connect;","            s.hidden = l.hidden;","            s.width = h;","            s.height = k;","            s.pointPosition = l.pointPosition;","            s.stepDirection = l.stepDirection;","            s.periodSpan = l.periodSpan;","            p = a.selectedGraph;","            p.id = l.id;","            p.rotate = e;","            p.chart = b;","            p.data = c;","            p.valueAxis = n;","            p.chart = l.chart;","            p.categoryAxis = d;","            p.periodSpan = l.periodSpan;","            p.valueField = l.valueField;","            p.openField = l.openField;","            p.closeField = l.closeField;","            p.highField = l.highField;","            p.lowField = l.lowField;","            p.lineAlpha = a.selectedGraphLineAlpha;","            p.lineColorR = a.selectedGraphLineColor;","            p.fillAlphas = a.selectedGraphFillAlpha;","            p.fillColorsR = a.selectedGraphFillColor;","            p.connect = l.connect;","            p.hidden = l.hidden;","            p.width = h;","            p.height = k;","            p.pointPosition = l.pointPosition;","            p.stepDirection = l.stepDirection;","            p.periodSpan = l.periodSpan;","            b = a.graphType;","            b || (b = l.type);","            s.type = b;","            p.type = b;","            c = c.length - 1;","            s.zoom(0, c);","            p.zoom(0, c);","            p.set.click(function() {","                a.handleBackgroundClick()","            }).mouseover(function() {","                a.handleMouseOver()","            }).mouseout(function() {","                a.handleMouseOut()","            });","            s.set.click(function() {","                a.handleBackgroundClick()","            }).mouseover(function() {","                a.handleMouseOver()","            }).mouseout(function() {","                a.handleMouseOut()","            });","            m.push(s.set);","            m.push(p.set)","        }","        m.push(d.set);","        m.push(d.labelsSet);","        a.bg.toBack();","        a.invisibleBg.toFront();","        a.dragger.toFront();","        a.iconLeft.toFront();","        a.iconRight.toFront()","    },","    timeZoom: function(a, b, c) {","        this.startTime = a;","        this.endTime = b;","        this.timeDifference = b - a;","        this.skipEvent = !AmCharts.toBoolean(c);","        this.zoomScrollbar();","        this.skipEvent || this.dispatchScrollbarEvent()","    },","    zoom: function(a, b) {","        this.start = a;","        this.end = b;","        this.skipEvent = !0;","        this.zoomScrollbar()","    },","    dispatchScrollbarEvent: function() {","        if (this.skipEvent) this.skipEvent = !1;","        else {","            var a = this.chart.chartData,","                b, c, d = this.dragger.getBBox();","            b = d.x;","            var e = d.y,","                f = d.width,","                d = d.height,","                g = this.chart;","            this.rotate ? (b = e, c = d) : c = f;","            f = {","                type: \"zoomed\",","                target: this","            };","            f.chart = g;","            var h = this.categoryAxis,","                k = this.stepWidth,","                e = g.minSelectedTime,","                d = !1;","            if (h.parseDates && !h.equalSpacing) {","                if (a = g.lastTime, g = g.firstTime, h.minDuration(), h = Math.round(b / k) + g, b = this.dragging ? h + this.timeDifference : Math.round((b + c) / k) + g, h > b && (h = b), 0 < e && b - h < e && (b = Math.round(h + (b - h) / 2), d = Math.round(e / 2), h = b - d, b += d, d = !0), b > a && (b = a), b - e < h && (h = b - e), h < g && (h = g), h + e > b && (b = h + e), h != this.startTime || b != this.endTime) this.startTime = h, this.endTime = b, f.start = h, f.end = b, f.startDate = new Date(h),","                    f.endDate = new Date(b), this.fire(f.type, f)","            }","            else if (h.startOnAxis || (b += k / 2), c -= this.stepWidth / 2, e = h.xToIndex(b), b = h.xToIndex(b + c), e != this.start || this.end != b) h.startOnAxis && (this.resizingRight && e == b && b++, this.resizingLeft && e == b && (0 < e ? e-- : b = 1)), this.start = e, this.end = this.dragging ? this.start + this.difference : b, f.start = this.start, f.end = this.end, h.parseDates && (a[this.start] && (f.startDate = new Date(a[this.start].time)), a[this.end] && (f.endDate = new Date(a[this.end].time))), this.fire(f.type, f);","            d && this.zoomScrollbar()","        }","    },","    zoomScrollbar: function() {","        var a, b;","        a = this.chart;","        var c = a.chartData,","            d = this.categoryAxis;","        d.parseDates && !d.equalSpacing ? (c = d.stepWidth, d = a.firstTime, a = c * (this.startTime - d), b = c * (this.endTime - d)) : (a = c[this.start].x[d.id], b = c[this.end].x[d.id], c = d.stepWidth, d.startOnAxis || (d = c / 2, a -= d, b += d));","        this.stepWidth = c;","        this.updateScrollbarSize(a, b)","    },","    maskGraphs: function(a, b, c, d) {","        var e = this.selectedGraph;","        e && e.set.clipRect(a, b, c, d)","    },","    handleDragStart: function() {","        AmCharts.ChartScrollbar.base.handleDragStart.call(this);","        this.difference =","            this.end - this.start;","        this.timeDifference = this.endTime - this.startTime;","        0 > this.timeDifference && (this.timeDifference = 0)","    },","    handleBackgroundClick: function() {","        AmCharts.ChartScrollbar.base.handleBackgroundClick.call(this);","        this.dragging || (this.difference = this.end - this.start, this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0))","    }","});","AmCharts.AmBalloon = AmCharts.Class({","    construct: function(a) {","        this.cname = \"AmBalloon\";","        this.enabled = !0;","        this.fillColor = \"#FFFFFF\";","        this.fillAlpha = .8;","        this.borderThickness = 2;","        this.borderColor = \"#FFFFFF\";","        this.borderAlpha = 1;","        this.cornerRadius = 0;","        this.maximumWidth = 220;","        this.horizontalPadding = 8;","        this.verticalPadding = 4;","        this.pointerWidth = 6;","        this.pointerOrientation = \"V\";","        this.color = \"#000000\";","        this.adjustBorderColor = !0;","        this.show = this.follow = this.showBullet = !1;","        this.bulletSize = 3;","        this.shadowAlpha = .4;","        this.shadowColor = \"#000000\";","        this.fadeOutDuration =","            this.animationDuration = .3;","        this.fixedPosition = !1;","        this.offsetY = 6;","        this.offsetX = 1;","        this.textAlign = \"center\";","        AmCharts.isModern || (this.offsetY *= 1.5);","        AmCharts.applyTheme(this, a, this.cname)","    },","    draw: function() {","        var a = this.pointToX,","            b = this.pointToY;","        this.deltaSignX = this.deltaSignY = 1;","        var c = this.chart;","        AmCharts.VML && (this.fadeOutDuration = 0);","        this.xAnim && c.stopAnim(this.xAnim);","        this.yAnim && c.stopAnim(this.yAnim);","        if (!isNaN(a)) {","            var d = this.follow,","                e = c.container,","                f = this.set;","            AmCharts.remove(f);","            this.removeDiv();","            f = e.set();","            f.node.style.pointerEvents =","                \"none\";","            this.set = f;","            c.balloonsSet.push(f);","            if (this.show) {","                var g = this.l,","                    h = this.t,","                    k = this.r,","                    l = this.b,","                    m = this.balloonColor,","                    n = this.fillColor,","                    p = this.borderColor,","                    q = n;","                void 0 != m && (this.adjustBorderColor ? q = p = m : n = m);","                var r = this.horizontalPadding,","                    s = this.verticalPadding,","                    w = this.pointerWidth,","                    v = this.pointerOrientation,","                    t = this.cornerRadius,","                    u = c.fontFamily,","                    x = this.fontSize;","                void 0 == x && (x = c.fontSize);","                var m = document.createElement(\"div\"),","                    E = m.style;","                E.pointerEvents = \"none\";","                E.position = \"absolute\";","                var A = this.minWidth,","                    z = \"\";","                isNaN(A) ||","                    (z = \"min-width:\" + (A - 2 * r) + \"px; \");","                m.innerHTML = '<div style=\"text-align:' + this.textAlign + \"; \" + z + \"max-width:\" + this.maxWidth + \"px; font-size:\" + x + \"px; color:\" + this.color + \"; font-family:\" + u + '\">' + this.text + \"</div>\";","                c.chartDiv.appendChild(m);","                this.textDiv = m;","                x = m.offsetWidth;","                u = m.offsetHeight;","                m.clientHeight && (x = m.clientWidth, u = m.clientHeight);","                u += 2 * s;","                z = x + 2 * r;","                !isNaN(A) && z < A && (z = A);","                window.opera && (u += 2);","                var H = !1,","                    x = this.offsetY;","                c.handDrawn && (x += c.handDrawScatter + 2);","                \"H\" != v ? (A = a - z / 2, b < h + u + 10 && \"down\" != v ? (H = !0, d && (b += x),","                    x = b + w, this.deltaSignY = -1) : (d && (b -= x), x = b - u - w, this.deltaSignY = 1)) : (2 * w > u && (w = u / 2), x = b - u / 2, a < g + (k - g) / 2 ? (A = a + w, this.deltaSignX = -1) : (A = a - z - w, this.deltaSignX = 1));","                x + u >= l && (x = l - u);","                x < h && (x = h);","                A < g && (A = g);","                A + z > k && (A = k - z);","                var h = x + s,","                    l = A + r,","                    s = this.shadowAlpha,","                    F = this.shadowColor,","                    r = this.borderThickness,","                    G = this.bulletSize,","                    V;","                0 < t || 0 === w ? (0 < s && (a = AmCharts.rect(e, z, u, n, 0, r + 1, F, s, this.cornerRadius), AmCharts.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), n = AmCharts.rect(e, z, u, n, this.fillAlpha, r, p, this.borderAlpha,","                    this.cornerRadius), this.showBullet && (V = AmCharts.circle(e, G, q, this.fillAlpha), f.push(V))) : (q = [], t = [], \"H\" != v ? (g = a - A, g > z - w && (g = z - w), g < w && (g = w), q = [0, g - w, a - A, g + w, z, z, 0, 0], t = H ? [0, 0, b - x, 0, 0, u, u, 0] : [u, u, b - x, u, u, 0, 0, u]) : (q = b - x, q > u - w && (q = u - w), q < w && (q = w), t = [0, q - w, b - x, q + w, u, u, 0, 0], q = a < g + (k - g) / 2 ? [0, 0, A < a ? 0 : a - A, 0, 0, z, z, 0] : [z, z, A + z > a ? z : a - A, z, z, 0, 0, z]), 0 < s && (a = AmCharts.polygon(e, q, t, n, 0, r, F, s), a.translate(1, 1), f.push(a)), n = AmCharts.polygon(e, q, t, n, this.fillAlpha, r, p, this.borderAlpha));","                this.bg = n;","                f.push(n);","                n.toFront();","                e = 1 * this.deltaSignX;","                E.left = l + \"px\";","                E.top = h + \"px\";","                f.translate(A - e, x);","                n = n.getBBox();","                this.bottom = x + u + 1;","                this.yPos = n.y + x;","                V && V.translate(this.pointToX - A + e, b - x);","                b = this.animationDuration;","                0 < this.animationDuration && !d && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY), f.animate({","                    translate: A - e + \",\" + x","                }, b, \"easeOutSine\"), m && (E.left = this.prevTX + \"px\", E.top = this.prevTY + \"px\", this.xAnim = c.animate({","                    node: m","                }, \"left\", this.prevTX, l, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({","                        node: m","                    }, \"top\", this.prevTY, h, b, \"easeOutSine\",","                    \"px\")));","                this.prevX = A - e;","                this.prevY = x;","                this.prevTX = l;","                this.prevTY = h","            }","        }","    },","    followMouse: function() {","        if (this.follow && this.show) {","            var a = this.chart.mouseX - this.offsetX * this.deltaSignX,","                b = this.chart.mouseY;","            this.pointToX = a;","            this.pointToY = b;","            if (a != this.previousX || b != this.previousY)","                if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();","                else {","                    var c = this.set;","                    if (c) {","                        var d = c.getBBox(),","                            a = a - d.width / 2,","                            e = b - d.height - 10;","                        a < this.l && (a = this.l);","                        a > this.r - d.width && (a = this.r - d.width);","                        e < this.t && (e = b + 10);","                        c.translate(a, e);","                        b = this.textDiv.style;","                        b.left = a + this.horizontalPadding + \"px\";","                        b.top = e + this.verticalPadding + \"px\"","                    }","                }","        }","    },","    changeColor: function(a) {","        this.balloonColor = a","    },","    setBounds: function(a, b, c, d) {","        this.l = a;","        this.t = b;","        this.r = c;","        this.b = d;","        this.destroyTO && clearTimeout(this.destroyTO)","    },","    showBalloon: function(a) {","        this.text = a;","        this.show = !0;","        this.destroyTO && clearTimeout(this.destroyTO);","        a = this.chart;","        this.fadeAnim1 && a.stopAnim(this.fadeAnim1);","        this.fadeAnim2 && a.stopAnim(this.fadeAnim2);","        this.draw()","    },","    hide: function() {","        var a = this,","            b = a.fadeOutDuration,","            c = a.chart;","        if (0 < b) {","            a.destroyTO = setTimeout(function() {","                a.destroy.call(a)","            }, 1E3 * b);","            a.follow = !1;","            a.show = !1;","            var d = a.set;","            d && (d.setAttr(\"opacity\", a.fillAlpha), a.fadeAnim1 = d.animate({","                opacity: 0","            }, b, \"easeInSine\"));","            a.textDiv && (a.fadeAnim2 = c.animate({","                node: a.textDiv","            }, \"opacity\", 1, 0, b, \"easeInSine\", \"\"))","        }","        else a.show = !1, a.follow = !1, a.destroy()","    },","    setPosition: function(a, b, c) {","        this.pointToX = a;","        this.pointToY = b;","        c && (a == this.previousX && b == this.previousY || this.draw());","        this.previousX = a;","        this.previousY = b","    },","    followCursor: function(a) {","        var b =","            this;","        (b.follow = a) ? (b.pShowBullet = b.showBullet, b.showBullet = !1) : void 0 !== b.pShowBullet && (b.showBullet = b.pShowBullet);","        clearInterval(b.interval);","        var c = b.chart.mouseX,","            d = b.chart.mouseY;","        !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = d, b.followMouse(), b.interval = setInterval(function() {","            b.followMouse.call(b)","        }, 40))","    },","    removeDiv: function() {","        if (this.textDiv) {","            var a = this.textDiv.parentNode;","            a && a.removeChild(this.textDiv)","        }","    },","    destroy: function() {","        clearInterval(this.interval);","        AmCharts.remove(this.set);","        this.removeDiv();","        this.set = null","    }","});","AmCharts.AmCoordinateChart = AmCharts.Class({","    inherits: AmCharts.AmChart,","    construct: function(a) {","        AmCharts.AmCoordinateChart.base.construct.call(this, a);","        this.theme = a;","        this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\");","        this.startAlpha = 1;","        this.startDuration = 0;","        this.startEffect = \"elastic\";","        this.sequencedAnimation = !0;","        this.colors = \"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");","        this.balloonDateFormat = \"MMM DD, YYYY\";","        this.valueAxes = [];","        this.graphs = [];","        this.guides = [];","        this.gridAboveGraphs = !1;","        AmCharts.applyTheme(this, a, \"AmCoordinateChart\")","    },","    initChart: function() {","        AmCharts.AmCoordinateChart.base.initChart.call(this);","        var a = this.categoryAxis;","        a && (this.categoryAxis = AmCharts.processObject(a, AmCharts.CategoryAxis, this.theme));","        this.processValueAxes();","        this.createValueAxes();","        this.processGraphs();","        this.processGuides();","        AmCharts.VML && (this.startAlpha = 1);","        this.setLegendData(this.graphs);","        this.gridAboveGraphs &&","            this.gridSet.toFront()","    },","    createValueAxes: function() {","        if (0 === this.valueAxes.length) {","            var a = new AmCharts.ValueAxis;","            this.addValueAxis(a)","        }","    },","    parseData: function() {","        this.processValueAxes();","        this.processGraphs()","    },","    parseSerialData: function() {","        var a = this.graphs,","            b, c = {},","            d = this.seriesIdField;","        d || (d = this.categoryField);","        this.chartData = [];","        var e = this.dataProvider;","        if (e) {","            var f = !1,","                g, h = this.categoryAxis,","                k, l;","            h && (f = h.parseDates, k = h.forceShowField, l = h.labelColorField, g = h.categoryFunction);","            var m, n, p = {},","                q;","            f && (b = AmCharts.extractPeriod(h.minPeriod),","                m = b.period, n = b.count, q = AmCharts.getPeriodDuration(m, n));","            var r = {};","            this.lookupTable = r;","            var s, w = this.dataDateFormat,","                v = {};","            for (s = 0; s < e.length; s++) {","                var t = {},","                    u = e[s];","                b = u[this.categoryField];","                t.dataContext = u;","                t.category = g ? g(b, u, h) : String(b);","                k && (t.forceShow = u[k]);","                l && (t.labelColor = u[l]);","                r[u[d]] = t;","                if (f && (b = h.categoryFunction ? h.categoryFunction(b, u, h) : b instanceof Date ? AmCharts.newDate(b, h.minPeriod) : w ? AmCharts.stringToDate(b, w) : new Date(b), b = AmCharts.resetDateToMin(b, m, n, h.firstDayOfWeek), t.category = b, t.time = b.getTime(),","                    isNaN(t.time))) continue;","                var x = this.valueAxes;","                t.axes = {};","                t.x = {};","                var E;","                for (E = 0; E < x.length; E++) {","                    var A = x[E].id;","                    t.axes[A] = {};","                    t.axes[A].graphs = {};","                    var z;","                    for (z = 0; z < a.length; z++) {","                        b = a[z];","                        var H = b.id,","                            F = b.periodValue;","                        if (b.valueAxis.id == A) {","                            t.axes[A].graphs[H] = {};","                            var G = {};","                            G.index = s;","                            var V = u;","                            b.dataProvider && (V = c);","                            G.values = this.processValues(V, b, F);","                            !b.connect && v && v[H] && t.time - p[H] > 1.1 * q && (v[H].gap = !0);","                            this.processFields(b, G, V);","                            G.category = t.category;","                            G.serialDataItem = t;","                            G.graph = b;","                            t.axes[A].graphs[H] = G;","                            p[H] = t.time;","                            v[H] =","                                G","                        }","                    }","                }","                this.chartData[s] = t","            }","        }","        for (c = 0; c < a.length; c++) b = a[c], b.dataProvider && this.parseGraphData(b)","    },","    processValues: function(a, b, c) {","        var d = {},","            e, f = !1;","        \"candlestick\" != b.type && \"ohlc\" != b.type || \"\" === c || (f = !0);","        e = Number(a[b.valueField + c]);","        isNaN(e) || (d.value = e);","        e = Number(a[b.errorField + c]);","        isNaN(e) || (d.error = e);","        f && (c = \"Open\");","        e = Number(a[b.openField + c]);","        isNaN(e) || (d.open = e);","        f && (c = \"Close\");","        e = Number(a[b.closeField + c]);","        isNaN(e) || (d.close = e);","        f && (c = \"Low\");","        e = Number(a[b.lowField + c]);","        isNaN(e) || (d.low = e);","        f && (c = \"High\");","        e = Number(a[b.highField +","            c]);","        isNaN(e) || (d.high = e);","        return d","    },","    parseGraphData: function(a) {","        var b = a.dataProvider,","            c = a.seriesIdField;","        c || (c = this.seriesIdField);","        c || (c = this.categoryField);","        var d;","        for (d = 0; d < b.length; d++) {","            var e = b[d],","                f = this.lookupTable[String(e[c])],","                g = a.valueAxis.id;","            f && (g = f.axes[g].graphs[a.id], g.serialDataItem = f, g.values = this.processValues(e, a, a.periodValue), this.processFields(a, g, e))","        }","    },","    addValueAxis: function(a) {","        a.chart = this;","        this.valueAxes.push(a);","        this.validateData()","    },","    removeValueAxesAndGraphs: function() {","        var a = this.valueAxes,","            b;","        for (b = a.length - 1; - 1 < b; b--) this.removeValueAxis(a[b])","    },","    removeValueAxis: function(a) {","        var b = this.graphs,","            c;","        for (c = b.length - 1; 0 <= c; c--) {","            var d = b[c];","            d && d.valueAxis == a && this.removeGraph(d)","        }","        b = this.valueAxes;","        for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);","        this.validateData()","    },","    addGraph: function(a) {","        this.graphs.push(a);","        this.chooseGraphColor(a, this.graphs.length - 1);","        this.validateData()","    },","    removeGraph: function(a) {","        var b = this.graphs,","            c;","        for (c = b.length - 1; 0 <= c; c--) b[c] == a && (b.splice(c, 1), a.destroy());","        this.validateData()","    },","    processValueAxes: function() {","        var a = this.valueAxes,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b],","                c = AmCharts.processObject(c, AmCharts.ValueAxis, this.theme);","            a[b] = c;","            c.chart = this;","            c.id || (c.id = \"valueAxisAuto\" + b + \"_\" + (new Date).getTime());","            void 0 === c.usePrefixes && (c.usePrefixes = this.usePrefixes)","        }","    },","    processGuides: function() {","        var a = this.guides,","            b = this.categoryAxis;","        if (a)","            for (var c = 0; c < a.length; c++) {","                var d = a[c];","                (void 0 !== d.category || void 0 !== d.date) && b && b.addGuide(d);","                var e = d.valueAxis;","                e ? (AmCharts.isString(e) && (e = this.getValueAxisById(e)),","                    e ? e.addGuide(d) : this.valueAxes[0].addGuide(d)) : isNaN(d.value) || this.valueAxes[0].addGuide(d)","            }","    },","    processGraphs: function() {","        var a = this.graphs,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b],","                c = AmCharts.processObject(c, AmCharts.AmGraph, this.theme);","            a[b] = c;","            this.chooseGraphColor(c, b);","            c.chart = this;","            AmCharts.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis));","            c.valueAxis || (c.valueAxis = this.valueAxes[0]);","            c.id || (c.id = \"graphAuto\" + b + \"_\" + (new Date).getTime())","        }","    },","    formatString: function(a, b, c) {","        var d = b.graph,","            e = d.valueAxis;","        e.duration && b.values.value && (e = AmCharts.formatDuration(b.values.value, e.duration, \"\", e.durationUnits, e.maxInterval, e.numberFormatter), a = a.split(\"[[value]]\").join(e));","        a = AmCharts.massReplace(a, {","            \"[[title]]\": d.title,","            \"[[description]]\": b.description","        });","        a = c ? AmCharts.fixNewLines(a) : AmCharts.fixBrakes(a);","        return a = AmCharts.cleanFromEmpty(a)","    },","    getBalloonColor: function(a, b, c) {","        var d = a.lineColor,","            e = a.balloonColor;","        c && (e = d);","        c = a.fillColorsR;","        \"object\" == typeof c ? d = c[0] : void 0 !== c && (d = c);","        b.isNegative && (c = a.negativeLineColor,","            a = a.negativeFillColors, \"object\" == typeof a ? c = a[0] : void 0 !== a && (c = a), void 0 !== c && (d = c));","        void 0 !== b.color && (d = b.color);","        void 0 === e && (e = d);","        return e","    },","    getGraphById: function(a) {","        return AmCharts.getObjById(this.graphs, a)","    },","    getValueAxisById: function(a) {","        return AmCharts.getObjById(this.valueAxes, a)","    },","    processFields: function(a, b, c) {","        if (a.itemColors) {","            var d = a.itemColors,","                e = b.index;","            b.color = e < d.length ? d[e] : AmCharts.randomColor()","        }","        d = \"lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern\".split(\" \");","        for (e = 0; e < d.length; e++) {","            var f = d[e],","                g = a[f + \"Field\"];","            g && (g = c[g], AmCharts.isDefined(g) && (b[f] = g))","        }","        b.dataContext = c","    },","    chooseGraphColor: function(a, b) {","        if (a.lineColor) a.lineColorR = a.lineColor;","        else {","            var c;","            c = this.colors.length > b ? this.colors[b] : AmCharts.randomColor();","            a.lineColorR = c","        }","        a.fillColorsR = a.fillColors ? a.fillColors : a.lineColorR;","        a.bulletBorderColorR = a.bulletBorderColor ? a.bulletBorderColor : a.useLineColorForBulletBorder ? a.lineColorR : a.bulletColor;","        a.bulletColorR = a.bulletColor ? a.bulletColor : a.lineColorR;","        if (c =","            this.patterns) a.pattern = c[b]","    },","    handleLegendEvent: function(a) {","        var b = a.type;","        a = a.dataItem;","        if (!this.legend.data && a) {","            var c = a.hidden,","                d = a.showBalloon;","            switch (b) {","                case \"clickMarker\":","                    this.textClickEnabled && (d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a));","                    break;","                case \"clickLabel\":","                    d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a);","                    break;","                case \"rollOverItem\":","                    c || this.highlightGraph(a);","                    break;","                case \"rollOutItem\":","                    c || this.unhighlightGraph();","                    break;","                case \"hideItem\":","                    this.hideGraph(a);","                    break;","                case \"showItem\":","                    this.showGraph(a)","            }","        }","    },","    highlightGraph: function(a) {","        var b = this.graphs,","            c, d = .2;","        this.legend && (d = this.legend.rollOverGraphAlpha);","        if (1 != d)","            for (c = 0; c < b.length; c++) {","                var e = b[c];","                e != a && e.changeOpacity(d)","            }","    },","    unhighlightGraph: function() {","        var a;","        this.legend && (a = this.legend.rollOverGraphAlpha);","        if (1 != a) {","            a = this.graphs;","            var b;","            for (b = 0; b < a.length; b++) a[b].changeOpacity(1)","        }","    },","    showGraph: function(a) {","        a.switchable && (a.hidden = !1, this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), this.chartCreated && this.initChart())","    },","    hideGraph: function(a) {","        a.switchable &&","            (this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), a.hidden = !0, this.chartCreated && this.initChart())","    },","    hideGraphsBalloon: function(a) {","        a.showBalloon = !1;","        this.updateLegend()","    },","    showGraphsBalloon: function(a) {","        a.showBalloon = !0;","        this.updateLegend()","    },","    updateLegend: function() {","        this.legend && this.legend.invalidateSize()","    },","    resetAnimation: function() {","        var a = this.graphs;","        if (a) {","            var b;","            for (b = 0; b < a.length; b++) a[b].animationPlayed = !1","        }","    },","    animateAgain: function() {","        this.resetAnimation();","        this.validateNow()","    }","});","AmCharts.AmSlicedChart = AmCharts.Class({","    inherits: AmCharts.AmChart,","    construct: function(a) {","        this.createEvents(\"rollOverSlice\", \"rollOutSlice\", \"clickSlice\", \"pullOutSlice\", \"pullInSlice\", \"rightClickSlice\");","        AmCharts.AmSlicedChart.base.construct.call(this, a);","        this.colors = \"#FF0F00 #FF6600 #FF9E01 #FCD202 #F8FF01 #B0DE09 #04D215 #0D8ECF #0D52D1 #2A0CD0 #8A0CCF #CD0D74 #754DEB #DDDDDD #999999 #333333 #000000 #57032A #CA9726 #990000 #4B0C25\".split(\" \");","        this.alpha = 1;","        this.groupPercent = 0;","        this.groupedTitle = \"Other\";","        this.groupedPulled = !1;","        this.groupedAlpha = 1;","        this.marginLeft = 0;","        this.marginBottom = this.marginTop = 10;","        this.marginRight = 0;","        this.hoverAlpha = 1;","        this.outlineColor = \"#FFFFFF\";","        this.outlineAlpha = 0;","        this.outlineThickness = 1;","        this.startAlpha = 0;","        this.startDuration = 1;","        this.startEffect = \"bounce\";","        this.sequencedAnimation = !0;","        this.pullOutDuration = 1;","        this.pullOutEffect = \"bounce\";","        this.pullOnHover = this.pullOutOnlyOne = !1;","        this.labelsEnabled = !0;","        this.labelTickColor = \"#000000\";","        this.labelTickAlpha = .2;","        this.hideLabelsPercent = 0;","        this.urlTarget = \"_self\";","        this.autoMarginOffset =","            10;","        this.gradientRatio = [];","        this.maxLabelWidth = 200;","        AmCharts.applyTheme(this, a, \"AmSlicedChart\")","    },","    initChart: function() {","        AmCharts.AmSlicedChart.base.initChart.call(this);","        this.dataChanged && (this.parseData(), this.dispatchDataUpdated = !0, this.dataChanged = !1, this.setLegendData(this.chartData));","        this.drawChart()","    },","    handleLegendEvent: function(a) {","        var b = a.type,","            c = a.dataItem,","            d = this.legend;","        if (!d.data && c) {","            var e = c.hidden;","            a = a.event;","            switch (b) {","                case \"clickMarker\":","                    e || d.switchable || this.clickSlice(c, a);","                    break;","                case \"clickLabel\":","                    e ||","                        this.clickSlice(c, a, !1);","                    break;","                case \"rollOverItem\":","                    e || this.rollOverSlice(c, !1, a);","                    break;","                case \"rollOutItem\":","                    e || this.rollOutSlice(c, a);","                    break;","                case \"hideItem\":","                    this.hideSlice(c, a);","                    break;","                case \"showItem\":","                    this.showSlice(c, a)","            }","        }","    },","    invalidateVisibility: function() {","        this.recalculatePercents();","        this.initChart();","        var a = this.legend;","        a && a.invalidateSize()","    },","    addEventListeners: function(a, b) {","        var c = this;","        a.mouseover(function(a) {","            c.rollOverSlice(b, !0, a)","        }).mouseout(function(a) {","            c.rollOutSlice(b, a)","        }).touchend(function(a) {","            c.rollOverSlice(b,","                a);","            c.panEventsEnabled && c.clickSlice(b, a)","        }).touchstart(function(a) {","            c.rollOverSlice(b, a)","        }).click(function(a) {","            c.clickSlice(b, a)","        }).contextmenu(function(a) {","            c.handleRightClick(b, a)","        })","    },","    formatString: function(a, b, c) {","        a = AmCharts.formatValue(a, b, [\"value\"], this.nf, \"\", this.usePrefixes, this.prefixesOfSmallNumbers, this.prefixesOfBigNumbers);","        a = AmCharts.formatValue(a, b, [\"percents\"], this.pf);","        a = AmCharts.massReplace(a, {","            \"[[title]]\": b.title,","            \"[[description]]\": b.description","        }); - 1 != a.indexOf(\"[[\") && (a = AmCharts.formatDataContextValue(a,","            b.dataContext));","        a = c ? AmCharts.fixNewLines(a) : AmCharts.fixBrakes(a);","        return a = AmCharts.cleanFromEmpty(a)","    },","    startSlices: function() {","        var a;","        for (a = 0; a < this.chartData.length; a++) 0 < this.startDuration && this.sequencedAnimation ? this.setStartTO(a) : this.startSlice(this.chartData[a])","    },","    setStartTO: function(a) {","        var b = this;","        a = setTimeout(function() {","            b.startSequenced.call(b)","        }, b.startDuration / b.chartData.length * 500 * a);","        b.timeOuts.push(a)","    },","    pullSlices: function(a) {","        var b = this.chartData,","            c;","        for (c = 0; c < b.length; c++) {","            var d = b[c];","            d.pulled &&","                this.pullSlice(d, 1, a)","        }","    },","    startSequenced: function() {","        var a = this.chartData,","            b;","        for (b = 0; b < a.length; b++)","            if (!a[b].started) {","                this.startSlice(this.chartData[b]);","                break","            }","    },","    startSlice: function(a) {","        a.started = !0;","        var b = a.wedge,","            c = this.startDuration;","        b && 0 < c && (0 < a.alpha && b.show(), b.translate(a.startX, a.startY), b.animate({","            opacity: 1,","            translate: \"0,0\"","        }, c, this.startEffect))","    },","    showLabels: function() {","        var a = this.chartData,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b];","            if (0 < c.alpha) {","                var d = c.label;","                d && d.show();","                (c = c.tick) && c.show()","            }","        }","    },","    showSlice: function(a) {","        isNaN(a) ?","            a.hidden = !1 : this.chartData[a].hidden = !1;","        this.invalidateVisibility()","    },","    hideSlice: function(a) {","        isNaN(a) ? a.hidden = !0 : this.chartData[a].hidden = !0;","        this.hideBalloon();","        this.invalidateVisibility()","    },","    rollOverSlice: function(a, b, c) {","        isNaN(a) || (a = this.chartData[a]);","        clearTimeout(this.hoverInt);","        if (!a.hidden) {","            this.pullOnHover && this.pullSlice(a, 1);","            1 > this.hoverAlpha && a.wedge && a.wedge.attr({","                opacity: this.hoverAlpha","            });","            var d = a.balloonX,","                e = a.balloonY;","            a.pulled && (d += a.pullX, e += a.pullY);","            var f = this.formatString(this.balloonText,","                    a, !0),","                g = this.balloonFunction;","            g && (f = g(a, f));","            g = AmCharts.adjustLuminosity(a.color, -.15);","            this.showBalloon(f, g, b, d, e);","            a = {","                type: \"rollOverSlice\",","                dataItem: a,","                chart: this,","                event: c","            };","            this.fire(a.type, a)","        }","    },","    rollOutSlice: function(a, b) {","        isNaN(a) || (a = this.chartData[a]);","        a.wedge && a.wedge.attr({","            opacity: 1","        });","        this.hideBalloon();","        var c = {","            type: \"rollOutSlice\",","            dataItem: a,","            chart: this,","            event: b","        };","        this.fire(c.type, c)","    },","    clickSlice: function(a, b, c) {","        isNaN(a) || (a = this.chartData[a]);","        a.pulled ? this.pullSlice(a, 0) : this.pullSlice(a, 1);","        AmCharts.getURL(a.url,","            this.urlTarget);","        c || (a = {","            type: \"clickSlice\",","            dataItem: a,","            chart: this,","            event: b","        }, this.fire(a.type, a))","    },","    handleRightClick: function(a, b) {","        isNaN(a) || (a = this.chartData[a]);","        var c = {","            type: \"rightClickSlice\",","            dataItem: a,","            chart: this,","            event: b","        };","        this.fire(c.type, c)","    },","    drawTicks: function() {","        var a = this.chartData,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b];","            if (c.label) {","                var d = c.ty,","                    d = AmCharts.line(this.container, [c.tx0, c.tx, c.tx2], [c.ty0, d, d], this.labelTickColor, this.labelTickAlpha);","                c.tick = d;","                c.wedge.push(d)","            }","        }","    },","    initialStart: function() {","        var a =","            this,","            b = a.startDuration,","            c = setTimeout(function() {","                a.showLabels.call(a)","            }, 1E3 * b);","        a.timeOuts.push(c);","        a.chartCreated ? a.pullSlices(!0) : (a.startSlices(), 0 < b ? (b = setTimeout(function() {","            a.pullSlices.call(a)","        }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices(!0))","    },","    pullSlice: function(a, b, c) {","        var d = this.pullOutDuration;","        !0 === c && (d = 0);","        (c = a.wedge) && (0 < d ? c.animate({","            translate: b * a.pullX + \",\" + b * a.pullY","        }, d, this.pullOutEffect) : c.translate(b * a.pullX, b * a.pullY));","        1 == b ? (a.pulled = !0, this.pullOutOnlyOne && this.pullInAll(a.index), a = {","            type: \"pullOutSlice\",","            dataItem: a,","            chart: this","        }) : (a.pulled = !1, a = {","            type: \"pullInSlice\",","            dataItem: a,","            chart: this","        });","        this.fire(a.type, a)","    },","    pullInAll: function(a) {","        var b = this.chartData,","            c;","        for (c = 0; c < this.chartData.length; c++) c != a && b[c].pulled && this.pullSlice(b[c], 0)","    },","    pullOutAll: function(a) {","        a = this.chartData;","        var b;","        for (b = 0; b < a.length; b++) a[b].pulled || this.pullSlice(a[b], 1)","    },","    parseData: function() {","        var a = [];","        this.chartData = a;","        var b = this.dataProvider;","        isNaN(this.pieAlpha) || (this.alpha = this.pieAlpha);","        if (void 0 !== b) {","            var c = b.length,","                d = 0,","                e, f, g;","            for (e = 0; e <","                c; e++) {","                f = {};","                var h = b[e];","                f.dataContext = h;","                f.value = Number(h[this.valueField]);","                (g = h[this.titleField]) || (g = \"\");","                f.title = g;","                f.pulled = AmCharts.toBoolean(h[this.pulledField], !1);","                (g = h[this.descriptionField]) || (g = \"\");","                f.description = g;","                f.labelRadius = Number(h[this.labelRadiusField]);","                f.switchable = !0;","                f.url = h[this.urlField];","                g = h[this.patternField];","                !g && this.patterns && (g = this.patterns[e]);","                f.pattern = g;","                f.visibleInLegend = AmCharts.toBoolean(h[this.visibleInLegendField], !0);","                g = h[this.alphaField];","                f.alpha = void 0 !== g ? Number(g) :","                    this.alpha;","                g = h[this.colorField];","                void 0 !== g && (f.color = AmCharts.toColor(g));","                f.labelColor = AmCharts.toColor(h[this.labelColorField]);","                d += f.value;","                f.hidden = !1;","                a[e] = f","            }","            for (e = b = 0; e < c; e++) f = a[e], f.percents = f.value / d * 100, f.percents < this.groupPercent && b++;","            1 < b && (this.groupValue = 0, this.removeSmallSlices(), a.push({","                title: this.groupedTitle,","                value: this.groupValue,","                percents: this.groupValue / d * 100,","                pulled: this.groupedPulled,","                color: this.groupedColor,","                url: this.groupedUrl,","                description: this.groupedDescription,","                alpha: this.groupedAlpha,","                pattern: this.groupedPattern,","                dataContext: {}","            }));","            c = this.baseColor;","            c || (c = this.pieBaseColor);","            d = this.brightnessStep;","            d || (d = this.pieBrightnessStep);","            for (e = 0; e < a.length; e++) c ? g = AmCharts.adjustLuminosity(c, e * d / 100) : (g = this.colors[e], void 0 === g && (g = AmCharts.randomColor())), void 0 === a[e].color && (a[e].color = g);","            this.recalculatePercents()","        }","    },","    recalculatePercents: function() {","        var a = this.chartData,","            b = 0,","            c, d;","        for (c = 0; c < a.length; c++) d = a[c], !d.hidden && 0 < d.value && (b += d.value);","        for (c = 0; c < a.length; c++) d = this.chartData[c], d.percents = !d.hidden && 0 < d.value ? 100 * d.value / b : 0","    },","    removeSmallSlices: function() {","        var a = this.chartData,","            b;","        for (b = a.length - 1; 0 <= b; b--) a[b].percents < this.groupPercent && (this.groupValue += a[b].value, a.splice(b, 1))","    },","    animateAgain: function() {","        var a = this;","        a.startSlices();","        for (var b = 0; b < a.chartData.length; b++) {","            var c = a.chartData[b];","            c.started = !1;","            var d = c.wedge;","            d && d.translate(c.startX, c.startY)","        }","        b = a.startDuration;","        0 < b ? (b = setTimeout(function() {","            a.pullSlices.call(a)","        }, 1200 * b), a.timeOuts.push(b)) : a.pullSlices()","    },","    measureMaxLabel: function() {","        var a =","            this.chartData,","            b = 0,","            c;","        for (c = 0; c < a.length; c++) {","            var d = a[c],","                e = this.formatString(this.labelText, d),","                f = this.labelFunction;","            f && (e = f(d, e));","            d = AmCharts.text(this.container, e, this.color, this.fontFamily, this.fontSize);","            e = d.getBBox().width;","            e > b && (b = e);","            d.remove()","        }","        return b","    }","});","AmCharts.AmRectangularChart = AmCharts.Class({","    inherits: AmCharts.AmCoordinateChart,","    construct: function(a) {","        AmCharts.AmRectangularChart.base.construct.call(this, a);","        this.theme = a;","        this.createEvents(\"zoomed\");","        this.marginRight = this.marginBottom = this.marginTop = this.marginLeft = 20;","        this.verticalPosition = this.horizontalPosition = this.depth3D = this.angle = 0;","        this.heightMultiplier = this.widthMultiplier = 1;","        this.plotAreaFillColors = \"#FFFFFF\";","        this.plotAreaFillAlphas = 0;","        this.plotAreaBorderColor = \"#000000\";","        this.plotAreaBorderAlpha =","            0;","        this.zoomOutButtonImageSize = 17;","        this.zoomOutButtonImage = \"lens.png\";","        this.zoomOutText = \"Show all\";","        this.zoomOutButtonColor = \"#e5e5e5\";","        this.zoomOutButtonAlpha = 0;","        this.zoomOutButtonRollOverAlpha = 1;","        this.zoomOutButtonPadding = 8;","        this.trendLines = [];","        this.autoMargins = !0;","        this.marginsUpdated = !1;","        this.autoMarginOffset = 10;","        AmCharts.applyTheme(this, a, \"AmRectangularChart\")","    },","    initChart: function() {","        AmCharts.AmRectangularChart.base.initChart.call(this);","        this.updateDxy();","        var a = !0;","        !this.marginsUpdated && this.autoMargins && (this.resetMargins(),","            a = !1);","        this.processScrollbars();","        this.updateMargins();","        this.updatePlotArea();","        this.updateScrollbars();","        this.updateTrendLines();","        this.updateChartCursor();","        this.updateValueAxes();","        a && (this.scrollbarOnly || this.updateGraphs())","    },","    drawChart: function() {","        AmCharts.AmRectangularChart.base.drawChart.call(this);","        this.drawPlotArea();","        if (AmCharts.ifArray(this.chartData)) {","            var a = this.chartCursor;","            a && a.draw();","            a = this.zoomOutText;","            \"\" !== a && a && this.drawZoomOutButton()","        }","    },","    resetMargins: function() {","        var a = {},","            b;","        if (\"serial\" == this.type) {","            var c =","                this.valueAxes;","            for (b = 0; b < c.length; b++) {","                var d = c[b];","                d.ignoreAxisWidth || (d.setOrientation(this.rotate), d.fixAxisPosition(), a[d.position] = !0)","            }(b = this.categoryAxis) && !b.ignoreAxisWidth && (b.setOrientation(!this.rotate), b.fixAxisPosition(), b.fixAxisPosition(), a[b.position] = !0)","        }","        else {","            d = this.xAxes;","            c = this.yAxes;","            for (b = 0; b < d.length; b++) {","                var e = d[b];","                e.ignoreAxisWidth || (e.setOrientation(!0), e.fixAxisPosition(), a[e.position] = !0)","            }","            for (b = 0; b < c.length; b++) d = c[b], d.ignoreAxisWidth || (d.setOrientation(!1), d.fixAxisPosition(),","                a[d.position] = !0)","        }","        a.left && (this.marginLeft = 0);","        a.right && (this.marginRight = 0);","        a.top && (this.marginTop = 0);","        a.bottom && (this.marginBottom = 0);","        this.fixMargins = a","    },","    measureMargins: function() {","        var a = this.valueAxes,","            b, c = this.autoMarginOffset,","            d = this.fixMargins,","            e = this.realWidth,","            f = this.realHeight,","            g = c,","            h = c,","            k = e;","        b = f;","        var l;","        for (l = 0; l < a.length; l++) b = this.getAxisBounds(a[l], g, k, h, b), g = Math.round(b.l), k = Math.round(b.r), h = Math.round(b.t), b = Math.round(b.b);","        if (a = this.categoryAxis) b = this.getAxisBounds(a, g, k, h, b), g = Math.round(b.l),","            k = Math.round(b.r), h = Math.round(b.t), b = Math.round(b.b);","        d.left && g < c && (this.marginLeft = Math.round(-g + c));","        d.right && k >= e - c && (this.marginRight = Math.round(k - e + c));","        d.top && h < c + this.titleHeight && (this.marginTop = Math.round(this.marginTop - h + c + this.titleHeight));","        d.bottom && b > f - c && (this.marginBottom = Math.round(this.marginBottom + b - f + c));","        this.initChart()","    },","    getAxisBounds: function(a, b, c, d, e) {","        if (!a.ignoreAxisWidth) {","            var f = a.labelsSet,","                g = a.tickLength;","            a.inside && (g = 0);","            if (f) switch (f = a.getBBox(), a.position) {","                case \"top\":","                    a = f.y;","                    d > a && (d = a);","                    break;","                case \"bottom\":","                    a = f.y + f.height;","                    e < a && (e = a);","                    break;","                case \"right\":","                    a = f.x + f.width + g + 3;","                    c < a && (c = a);","                    break;","                case \"left\":","                    a = f.x - g, b > a && (b = a)","            }","        }","        return {","            l: b,","            t: d,","            r: c,","            b: e","        }","    },","    drawZoomOutButton: function() {","        var a = this,","            b = a.container.set();","        a.zoomButtonSet.push(b);","        var c = a.color,","            d = a.fontSize,","            e = a.zoomOutButtonImageSize,","            f = a.zoomOutButtonImage,","            g = AmCharts.lang.zoomOutText || a.zoomOutText,","            h = a.zoomOutButtonColor,","            k = a.zoomOutButtonAlpha,","            l = a.zoomOutButtonFontSize,","            m = a.zoomOutButtonPadding;","        isNaN(l) || (d = l);","        (l = a.zoomOutButtonFontColor) &&","        (c = l);","        var l = a.zoomOutButton,","            n;","        l && (l.fontSize && (d = l.fontSize), l.color && (c = l.color), l.backgroundColor && (h = l.backgroundColor), isNaN(l.backgroundAlpha) || (a.zoomOutButtonRollOverAlpha = l.backgroundAlpha));","        var p = l = 0;","        void 0 !== a.pathToImages && f && (n = a.container.image(a.pathToImages + f, 0, 0, e, e), b.push(n), n = n.getBBox(), l = n.width + 5);","        void 0 !== g && (c = AmCharts.text(a.container, g, c, a.fontFamily, d, \"start\"), d = c.getBBox(), p = n ? n.height / 2 - 3 : d.height / 2, c.translate(l, p), b.push(c));","        n = b.getBBox();","        c = 1;","        AmCharts.isModern || (c = 0);","        h = AmCharts.rect(a.container, n.width + 2 * m + 5, n.height + 2 * m - 2, h, 1, 1, h, c);","        h.setAttr(\"opacity\", k);","        h.translate(-m, -m);","        b.push(h);","        h.toBack();","        a.zbBG = h;","        n = h.getBBox();","        b.translate(a.marginLeftReal + a.plotAreaWidth - n.width + m, a.marginTopReal + m);","        b.hide();","        b.mouseover(function() {","            a.rollOverZB()","        }).mouseout(function() {","            a.rollOutZB()","        }).click(function() {","            a.clickZB()","        }).touchstart(function() {","            a.rollOverZB()","        }).touchend(function() {","            a.rollOutZB();","            a.clickZB()","        });","        for (k = 0; k < b.length; k++) b[k].attr({","            cursor: \"pointer\"","        });","        a.zbSet = b","    },","    rollOverZB: function() {","        this.zbBG.setAttr(\"opacity\",","            this.zoomOutButtonRollOverAlpha)","    },","    rollOutZB: function() {","        this.zbBG.setAttr(\"opacity\", this.zoomOutButtonAlpha)","    },","    clickZB: function() {","        this.zoomOut()","    },","    zoomOut: function() {","        this.updateScrollbar = !0;","        this.zoom()","    },","    drawPlotArea: function() {","        var a = this.dx,","            b = this.dy,","            c = this.marginLeftReal,","            d = this.marginTopReal,","            e = this.plotAreaWidth - 1,","            f = this.plotAreaHeight - 1,","            g = this.plotAreaFillColors,","            h = this.plotAreaFillAlphas,","            k = this.plotAreaBorderColor,","            l = this.plotAreaBorderAlpha;","        this.trendLinesSet.clipRect(c, d, e, f);","        \"object\" == typeof h &&","            (h = h[0]);","        g = AmCharts.polygon(this.container, [0, e, e, 0, 0], [0, 0, f, f, 0], g, h, 1, k, l, this.plotAreaGradientAngle);","        g.translate(c + a, d + b);","        this.set.push(g);","        0 !== a && 0 !== b && (g = this.plotAreaFillColors, \"object\" == typeof g && (g = g[0]), g = AmCharts.adjustLuminosity(g, -.15), e = AmCharts.polygon(this.container, [0, a, e + a, e, 0], [0, b, b, 0, 0], g, h, 1, k, l), e.translate(c, d + f), this.set.push(e), a = AmCharts.polygon(this.container, [0, 0, a, a, 0], [0, f, f + b, b, 0], g, h, 1, k, l), a.translate(c, d), this.set.push(a));","        (c = this.bbset) && this.scrollbarOnly && c.remove()","    },","    updatePlotArea: function() {","        var a = this.updateWidth(),","            b = this.updateHeight(),","            c = this.container;","        this.realWidth = a;","        this.realWidth = b;","        c && this.container.setSize(a, b);","        a = a - this.marginLeftReal - this.marginRightReal - this.dx;","        b = b - this.marginTopReal - this.marginBottomReal;","        1 > a && (a = 1);","        1 > b && (b = 1);","        this.plotAreaWidth = Math.round(a);","        this.plotAreaHeight = Math.round(b)","    },","    updateDxy: function() {","        this.dx = Math.round(this.depth3D * Math.cos(this.angle * Math.PI / 180));","        this.dy = Math.round(-this.depth3D * Math.sin(this.angle * Math.PI / 180));","        this.d3x =","            Math.round(this.columnSpacing3D * Math.cos(this.angle * Math.PI / 180));","        this.d3y = Math.round(-this.columnSpacing3D * Math.sin(this.angle * Math.PI / 180))","    },","    updateMargins: function() {","        var a = this.getTitleHeight();","        this.titleHeight = a;","        this.marginTopReal = this.marginTop - this.dy + a;","        this.marginBottomReal = this.marginBottom;","        this.marginLeftReal = this.marginLeft;","        this.marginRightReal = this.marginRight","    },","    updateValueAxes: function() {","        var a = this.valueAxes,","            b = this.marginLeftReal,","            c = this.marginTopReal,","            d = this.plotAreaHeight,","            e = this.plotAreaWidth,","            f;","        for (f = 0; f < a.length; f++) {","            var g = a[f];","            g.axisRenderer = AmCharts.RecAxis;","            g.guideFillRenderer = AmCharts.RecFill;","            g.axisItemRenderer = AmCharts.RecItem;","            g.dx = this.dx;","            g.dy = this.dy;","            g.viW = e - 1;","            g.viH = d - 1;","            g.marginsChanged = !0;","            g.viX = b;","            g.viY = c;","            this.updateObjectSize(g)","        }","    },","    updateObjectSize: function(a) {","        a.width = (this.plotAreaWidth - 1) * this.widthMultiplier;","        a.height = (this.plotAreaHeight - 1) * this.heightMultiplier;","        a.x = this.marginLeftReal + this.horizontalPosition;","        a.y = this.marginTopReal + this.verticalPosition","    },","    updateGraphs: function() {","        var a =","            this.graphs,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b];","            c.x = this.marginLeftReal + this.horizontalPosition;","            c.y = this.marginTopReal + this.verticalPosition;","            c.width = this.plotAreaWidth * this.widthMultiplier;","            c.height = this.plotAreaHeight * this.heightMultiplier;","            c.index = b;","            c.dx = this.dx;","            c.dy = this.dy;","            c.rotate = this.rotate","        }","    },","    updateChartCursor: function() {","        var a = this.chartCursor;","        a && (a = AmCharts.processObject(a, AmCharts.ChartCursor, this.theme), this.addChartCursor(a), a.x = this.marginLeftReal, a.y = this.marginTopReal, a.width = this.plotAreaWidth -","            1, a.height = this.plotAreaHeight - 1, a.chart = this)","    },","    processScrollbars: function() {","        var a = this.chartScrollbar;","        a && (a = AmCharts.processObject(a, AmCharts.ChartScrollbar, this.theme), this.addChartScrollbar(a))","    },","    updateScrollbars: function() {},","    addChartCursor: function(a) {","        AmCharts.callMethod(\"destroy\", [this.chartCursor]);","        a && (this.listenTo(a, \"changed\", this.handleCursorChange), this.listenTo(a, \"zoomed\", this.handleCursorZoom));","        this.chartCursor = a","    },","    removeChartCursor: function() {","        AmCharts.callMethod(\"destroy\", [this.chartCursor]);","        this.chartCursor = null","    },","    zoomTrendLines: function() {","        var a = this.trendLines,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b];","            c.valueAxis.recalculateToPercents ? c.set && c.set.hide() : (c.x = this.marginLeftReal + this.horizontalPosition, c.y = this.marginTopReal + this.verticalPosition, c.draw())","        }","    },","    addTrendLine: function(a) {","        this.trendLines.push(a)","    },","    removeTrendLine: function(a) {","        var b = this.trendLines,","            c;","        for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1)","    },","    adjustMargins: function(a, b) {","        var c = a.scrollbarHeight + a.offset;","        \"top\" == a.position ? b ?","            this.marginLeftReal += c : this.marginTopReal += c : b ? this.marginRightReal += c : this.marginBottomReal += c","    },","    getScrollbarPosition: function(a, b, c) {","        a.position = b ? \"bottom\" == c || \"left\" == c ? \"bottom\" : \"top\" : \"top\" == c || \"right\" == c ? \"bottom\" : \"top\"","    },","    updateChartScrollbar: function(a, b) {","        if (a) {","            a.rotate = b;","            var c = this.marginTopReal,","                d = this.marginLeftReal,","                e = a.scrollbarHeight,","                f = this.dx,","                g = this.dy,","                h = a.offset;","            \"top\" == a.position ? b ? (a.y = c, a.x = d - e - h) : (a.y = c - e + g - 1 - h, a.x = d + f) : b ? (a.y = c + g, a.x = d + this.plotAreaWidth + f + h) : (a.y = c + this.plotAreaHeight +","                h, a.x = this.marginLeftReal)","        }","    },","    showZB: function(a) {","        var b = this.zbSet;","        b && (a ? b.show() : b.hide(), this.rollOutZB())","    },","    handleReleaseOutside: function(a) {","        AmCharts.AmRectangularChart.base.handleReleaseOutside.call(this, a);","        (a = this.chartCursor) && a.handleReleaseOutside()","    },","    handleMouseDown: function(a) {","        AmCharts.AmRectangularChart.base.handleMouseDown.call(this, a);","        var b = this.chartCursor;","        b && b.handleMouseDown(a)","    },","    handleCursorChange: function(a) {}","});","AmCharts.TrendLine = AmCharts.Class({","    construct: function(a) {","        this.cname = \"TrendLine\";","        this.createEvents(\"click\");","        this.isProtected = !1;","        this.dashLength = 0;","        this.lineColor = \"#00CC00\";","        this.lineThickness = this.lineAlpha = 1;","        AmCharts.applyTheme(this, a, this.cname)","    },","    draw: function() {","        var a = this;","        a.destroy();","        var b = a.chart,","            c = b.container,","            d, e, f, g, h = a.categoryAxis,","            k = a.initialDate,","            l = a.initialCategory,","            m = a.finalDate,","            n = a.finalCategory,","            p = a.valueAxis,","            q = a.valueAxisX,","            r = a.initialXValue,","            s = a.finalXValue,","            w = a.initialValue,","            v = a.finalValue,","            t = p.recalculateToPercents,","            u = b.dataDateFormat;","        h && (k && (k instanceof Date || (k = u ? AmCharts.stringToDate(k, u) : new Date(k)), a.initialDate = k, d = h.dateToCoordinate(k)), l && (d = h.categoryToCoordinate(l)), m && (m instanceof Date || (m = u ? AmCharts.stringToDate(m, u) : new Date(m)), a.finalDate = m, e = h.dateToCoordinate(m)), n && (e = h.categoryToCoordinate(n)));","        q && !t && (isNaN(r) || (d = q.getCoordinate(r)), isNaN(s) || (e = q.getCoordinate(s)));","        p && !t && (isNaN(w) || (f = p.getCoordinate(w)), isNaN(v) || (g = p.getCoordinate(v)));","        isNaN(d) || isNaN(e) ||","            isNaN(f) || isNaN(f) || (b.rotate ? (h = [f, g], e = [d, e]) : (h = [d, e], e = [f, g]), f = a.lineColor, d = AmCharts.line(c, h, e, f, a.lineAlpha, a.lineThickness, a.dashLength), g = h, k = e, n = h[1] - h[0], p = e[1] - e[0], 0 === n && (n = .01), 0 === p && (p = .01), l = n / Math.abs(n), m = p / Math.abs(p), p = n * p / Math.abs(n * p) * Math.sqrt(Math.pow(n, 2) + Math.pow(p, 2)), n = Math.asin(n / p), p = 90 * Math.PI / 180 - n, n = Math.abs(5 * Math.cos(p)), p = Math.abs(5 * Math.sin(p)), g.push(h[1] - l * p, h[0] - l * p), k.push(e[1] + m * n, e[0] + m * n), h = AmCharts.polygon(c, g, k, f, .005, 0), c = c.set([h, d]), c.translate(b.marginLeftReal,","                b.marginTopReal), b.trendLinesSet.push(c), a.line = d, a.set = c, h.mouseup(function() {","                a.handleLineClick()","            }).mouseover(function() {","                a.handleLineOver()","            }).mouseout(function() {","                a.handleLineOut()","            }), h.touchend && h.touchend(function() {","                a.handleLineClick()","            }))","    },","    handleLineClick: function() {","        var a = {","            type: \"click\",","            trendLine: this,","            chart: this.chart","        };","        this.fire(a.type, a)","    },","    handleLineOver: function() {","        var a = this.rollOverColor;","        void 0 !== a && this.line.attr({","            stroke: a","        })","    },","    handleLineOut: function() {","        this.line.attr({","            stroke: this.lineColor","        })","    },","    destroy: function() {","        AmCharts.remove(this.set)","    }","});","AmCharts.circle = function(a, b, c, d, e, f, g, h, k) {","    if (void 0 == e || 0 === e) e = .01;","    void 0 === f && (f = \"#000000\");","    void 0 === g && (g = 0);","    d = {","        fill: c,","        stroke: f,","        \"fill-opacity\": d,","        \"stroke-width\": e,","        \"stroke-opacity\": g","    };","    a = isNaN(k) ? a.circle(0, 0, b).attr(d) : a.ellipse(0, 0, b, k).attr(d);","    h && a.gradient(\"radialGradient\", [c, AmCharts.adjustLuminosity(c, -.6)]);","    return a","};","AmCharts.text = function(a, b, c, d, e, f, g, h) {","    f || (f = \"middle\");","    \"right\" == f && (f = \"end\");","    isNaN(h) && (h = 1);","    void 0 !== b && (b = String(b), AmCharts.isIE && !AmCharts.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\")));","    c = {","        fill: c,","        \"font-family\": d,","        \"font-size\": e,","        opacity: h","    };","    !0 === g && (c[\"font-weight\"] = \"bold\");","    c[\"text-anchor\"] = f;","    return a.text(b, c)","};","AmCharts.polygon = function(a, b, c, d, e, f, g, h, k, l, m) {","    isNaN(f) && (f = .01);","    isNaN(h) && (h = e);","    var n = d,","        p = !1;","    \"object\" == typeof n && 1 < n.length && (p = !0, n = n[0]);","    void 0 === g && (g = n);","    e = {","        fill: n,","        stroke: g,","        \"fill-opacity\": e,","        \"stroke-width\": f,","        \"stroke-opacity\": h","    };","    void 0 !== m && 0 < m && (e[\"stroke-dasharray\"] = m);","    m = AmCharts.dx;","    f = AmCharts.dy;","    a.handDrawn && (c = AmCharts.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]);","    g = Math.round;","    l && (g = AmCharts.doNothing);","    l = \"M\" + (g(b[0]) + m) + \",\" + (g(c[0]) + f);","    for (h = 1; h < b.length; h++) l += \" L\" + (g(b[h]) + m) + \",\" + (g(c[h]) +","        f);","    a = a.path(l + \" Z\").attr(e);","    p && a.gradient(\"linearGradient\", d, k);","    return a","};","AmCharts.rect = function(a, b, c, d, e, f, g, h, k, l, m) {","    isNaN(f) && (f = 0);","    void 0 === k && (k = 0);","    void 0 === l && (l = 270);","    isNaN(e) && (e = 0);","    var n = d,","        p = !1;","    \"object\" == typeof n && (n = n[0], p = !0);","    void 0 === g && (g = n);","    void 0 === h && (h = e);","    b = Math.round(b);","    c = Math.round(c);","    var q = 0,","        r = 0;","    0 > b && (b = Math.abs(b), q = -b);","    0 > c && (c = Math.abs(c), r = -c);","    q += AmCharts.dx;","    r += AmCharts.dy;","    e = {","        fill: n,","        stroke: g,","        \"fill-opacity\": e,","        \"stroke-opacity\": h","    };","    void 0 !== m && 0 < m && (e[\"stroke-dasharray\"] = m);","    a = a.rect(q, r, b, c, k, f).attr(e);","    p && a.gradient(\"linearGradient\", d, l);","    return a","};","AmCharts.bullet = function(a, b, c, d, e, f, g, h, k, l, m) {","    var n;","    \"circle\" == b && (b = \"round\");","    switch (b) {","        case \"round\":","            n = AmCharts.circle(a, c / 2, d, e, f, g, h);","            break;","        case \"square\":","            n = AmCharts.polygon(a, [-c / 2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], d, e, f, g, h, l - 180);","            break;","        case \"rectangle\":","            n = AmCharts.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], d, e, f, g, h, l - 180);","            break;","        case \"diamond\":","            n = AmCharts.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], d, e, f, g, h);","            break;","        case \"triangleUp\":","            n = AmCharts.triangle(a, c, 0, d, e, f, g, h);","            break;","        case \"triangleDown\":","            n = AmCharts.triangle(a,","                c, 180, d, e, f, g, h);","            break;","        case \"triangleLeft\":","            n = AmCharts.triangle(a, c, 270, d, e, f, g, h);","            break;","        case \"triangleRight\":","            n = AmCharts.triangle(a, c, 90, d, e, f, g, h);","            break;","        case \"bubble\":","            n = AmCharts.circle(a, c / 2, d, e, f, g, h, !0);","            break;","        case \"line\":","            n = AmCharts.line(a, [-c / 2, c / 2], [0, 0], d, e, f, g, h);","            break;","        case \"yError\":","            n = a.set();","            n.push(AmCharts.line(a, [0, 0], [-c / 2, c / 2], d, e, f));","            n.push(AmCharts.line(a, [-k, k], [-c / 2, -c / 2], d, e, f));","            n.push(AmCharts.line(a, [-k, k], [c / 2, c / 2], d, e, f));","            break;","        case \"xError\":","            n = a.set(), n.push(AmCharts.line(a, [-c /","                2, c / 2","            ], [0, 0], d, e, f)), n.push(AmCharts.line(a, [-c / 2, -c / 2], [-k, k], d, e, f)), n.push(AmCharts.line(a, [c / 2, c / 2], [-k, k], d, e, f))","    }","    n && n.pattern(m);","    return n","};","AmCharts.triangle = function(a, b, c, d, e, f, g, h) {","    if (void 0 === f || 0 === f) f = 1;","    void 0 === g && (g = \"#000\");","    void 0 === h && (h = 0);","    d = {","        fill: d,","        stroke: g,","        \"fill-opacity\": e,","        \"stroke-width\": f,","        \"stroke-opacity\": h","    };","    b /= 2;","    var k;","    0 === c && (k = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\");","    180 == c && (k = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\");","    90 == c && (k = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\");","    270 == c && (k = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\");","    return a.path(k).attr(d)","};","AmCharts.line = function(a, b, c, d, e, f, g, h, k, l, m) {","    if (a.handDrawn && !m) return AmCharts.handDrawnLine(a, b, c, d, e, f, g, h, k, l, m);","    f = {","        fill: \"none\",","        \"stroke-width\": f","    };","    void 0 !== g && 0 < g && (f[\"stroke-dasharray\"] = g);","    isNaN(e) || (f[\"stroke-opacity\"] = e);","    d && (f.stroke = d);","    d = Math.round;","    l && (d = AmCharts.doNothing);","    l = AmCharts.dx;","    e = AmCharts.dy;","    g = \"M\" + (d(b[0]) + l) + \",\" + (d(c[0]) + e);","    for (h = 1; h < b.length; h++) g += \" L\" + (d(b[h]) + l) + \",\" + (d(c[h]) + e);","    if (AmCharts.VML) return a.path(g, void 0, !0).attr(f);","    k && (g += \" M0,0 L0,0\");","    return a.path(g).attr(f)","};","AmCharts.makeHD = function(a, b, c) {","    for (var d = [], e = [], f = 1; f < a.length; f++)","        for (var g = Number(a[f - 1]), h = Number(b[f - 1]), k = Number(a[f]), l = Number(b[f]), m = Math.sqrt(Math.pow(k - g, 2) + Math.pow(l - h, 2)), m = Math.round(m / 50) + 1, k = (k - g) / m, l = (l - h) / m, n = 0; n <= m; n++) {","            var p = g + n * k + Math.random() * c,","                q = h + n * l + Math.random() * c;","            d.push(p);","            e.push(q)","        }","    return [d, e]","};","AmCharts.handDrawnLine = function(a, b, c, d, e, f, g, h, k, l, m) {","    var n = a.set();","    for (m = 1; m < b.length; m++)","        for (var p = [b[m - 1], b[m]], q = [c[m - 1], c[m]], q = AmCharts.makeHD(p, q, a.handDrawScatter), p = q[0], q = q[1], r = 1; r < p.length; r++) n.push(AmCharts.line(a, [p[r - 1], p[r]], [q[r - 1], q[r]], d, e, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, h, k, l, !0));","    return n","};","AmCharts.doNothing = function(a) {","    return a","};","AmCharts.wedge = function(a, b, c, d, e, f, g, h, k, l, m, n) {","    var p = Math.round;","    f = p(f);","    g = p(g);","    h = p(h);","    var q = p(g / f * h),","        r = AmCharts.VML,","        s = 359.5 + f / 100;","    359.94 < s && (s = 359.94);","    e >= s && (e = s);","    var w = 1 / 180 * Math.PI,","        s = b + Math.sin(d * w) * h,","        v = c - Math.cos(d * w) * q,","        t = b + Math.sin(d * w) * f,","        u = c - Math.cos(d * w) * g,","        x = b + Math.sin((d + e) * w) * f,","        E = c - Math.cos((d + e) * w) * g,","        A = b + Math.sin((d + e) * w) * h,","        w = c - Math.cos((d + e) * w) * q,","        z = {","            fill: AmCharts.adjustLuminosity(l.fill, -.2),","            \"stroke-opacity\": 0,","            \"fill-opacity\": l[\"fill-opacity\"]","        },","        H = 0;","    180 < Math.abs(e) && (H = 1);","    d = a.set();","    var F;","    r && (s = p(10 * s), t = p(10 * t), x = p(10 * x), A = p(10 * A), v = p(10 * v), u = p(10 * u), E = p(10 * E), w = p(10 * w), b = p(10 * b), k = p(10 * k), c = p(10 * c), f *= 10, g *= 10, h *= 10, q *= 10, 1 > Math.abs(e) && 1 >= Math.abs(x - t) && 1 >= Math.abs(E - u) && (F = !0));","    e = \"\";","    var G;","    n && (z[\"fill-opacity\"] = 0, z[\"stroke-opacity\"] = l[\"stroke-opacity\"] / 2, z.stroke = l.stroke);","    0 < k && (G = \" M\" + s + \",\" + (v + k) + \" L\" + t + \",\" + (u + k), r ? (F || (G += \" A\" + (b - f) + \",\" + (k + c - g) + \",\" + (b + f) + \",\" + (k + c + g) + \",\" + t + \",\" + (u + k) + \",\" + x + \",\" + (E + k)), G += \" L\" + A + \",\" + (w + k), 0 < h && (F || (G += \" B\" + (b - h) + \",\" + (k + c - q) + \",\" + (b + h) + \",\" + (k + c + q) +","        \",\" + A + \",\" + (k + w) + \",\" + s + \",\" + (k + v)))) : (G += \" A\" + f + \",\" + g + \",0,\" + H + \",1,\" + x + \",\" + (E + k) + \" L\" + A + \",\" + (w + k), 0 < h && (G += \" A\" + h + \",\" + q + \",0,\" + H + \",0,\" + s + \",\" + (v + k))), G = a.path(G + \" Z\", void 0, void 0, \"1000,1000\").attr(z), d.push(G), G = a.path(\" M\" + s + \",\" + v + \" L\" + s + \",\" + (v + k) + \" L\" + t + \",\" + (u + k) + \" L\" + t + \",\" + u + \" L\" + s + \",\" + v + \" Z\", void 0, void 0, \"1000,1000\").attr(z), k = a.path(\" M\" + x + \",\" + E + \" L\" + x + \",\" + (E + k) + \" L\" + A + \",\" + (w + k) + \" L\" + A + \",\" + w + \" L\" + x + \",\" + E + \" Z\", void 0, void 0, \"1000,1000\").attr(z), d.push(G), d.push(k));","    r ? (F || (e = \" A\" + p(b - f) + \",\" + p(c - g) +","        \",\" + p(b + f) + \",\" + p(c + g) + \",\" + p(t) + \",\" + p(u) + \",\" + p(x) + \",\" + p(E)), f = \" M\" + p(s) + \",\" + p(v) + \" L\" + p(t) + \",\" + p(u) + e + \" L\" + p(A) + \",\" + p(w)) : f = \" M\" + s + \",\" + v + \" L\" + t + \",\" + u + (\" A\" + f + \",\" + g + \",0,\" + H + \",1,\" + x + \",\" + E) + \" L\" + A + \",\" + w;","    0 < h && (r ? F || (f += \" B\" + (b - h) + \",\" + (c - q) + \",\" + (b + h) + \",\" + (c + q) + \",\" + A + \",\" + w + \",\" + s + \",\" + v) : f += \" A\" + h + \",\" + q + \",0,\" + H + \",0,\" + s + \",\" + v);","    a.handDrawn && (b = AmCharts.line(a, [s, t], [v, u], l.stroke, l.thickness * Math.random() * a.handDrawThickness, l[\"stroke-opacity\"]), d.push(b));","    a = a.path(f + \" Z\", void 0, void 0, \"1000,1000\").attr(l);","    if (m) {","        b = [];","        for (c = 0; c < m.length; c++) b.push(AmCharts.adjustLuminosity(l.fill, m[c]));","        0 < b.length && a.gradient(\"linearGradient\", b)","    }","    a.pattern(n);","    d.push(a);","    return d","};","AmCharts.adjustLuminosity = function(a, b) {","    a = String(a).replace(/[^0-9a-f]/gi, \"\");","    6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));","    b = b || 0;","    var c = \"#\",","        d, e;","    for (e = 0; 3 > e; e++) d = parseInt(a.substr(2 * e, 2), 16), d = Math.round(Math.min(Math.max(0, d + d * b), 255)).toString(16), c += (\"00\" + d).substr(d.length);","    return c","};","AmCharts.Bezier = AmCharts.Class({","    construct: function(a, b, c, d, e, f, g, h, k, l) {","        \"object\" == typeof g && (g = g[0]);","        \"object\" == typeof h && (h = h[0]);","        f = {","            fill: g,","            \"fill-opacity\": h,","            \"stroke-width\": f","        };","        void 0 !== k && 0 < k && (f[\"stroke-dasharray\"] = k);","        isNaN(e) || (f[\"stroke-opacity\"] = e);","        d && (f.stroke = d);","        d = \"M\" + Math.round(b[0]) + \",\" + Math.round(c[0]);","        e = [];","        for (k = 0; k < b.length; k++) e.push({","            x: Number(b[k]),","            y: Number(c[k])","        });","        1 < e.length && (b = this.interpolate(e), d += this.drawBeziers(b));","        l ? d += l : AmCharts.VML || (d += \"M0,0 L0,0\");","        this.path = a.path(d).attr(f)","    },","    interpolate: function(a) {","        var b = [];","        b.push({","            x: a[0].x,","            y: a[0].y","        });","        var c = a[1].x - a[0].x,","            d = a[1].y - a[0].y,","            e = AmCharts.bezierX,","            f = AmCharts.bezierY;","        b.push({","            x: a[0].x + c / e,","            y: a[0].y + d / f","        });","        var g;","        for (g = 1; g < a.length - 1; g++) {","            var h = a[g - 1],","                k = a[g],","                d = a[g + 1];","            isNaN(d.x) && (d = k);","            isNaN(k.x) && (k = h);","            isNaN(h.x) && (h = k);","            c = d.x - k.x;","            d = d.y - h.y;","            h = k.x - h.x;","            h > c && (h = c);","            b.push({","                x: k.x - h / e,","                y: k.y - d / f","            });","            b.push({","                x: k.x,","                y: k.y","            });","            b.push({","                x: k.x + h / e,","                y: k.y + d / f","            })","        }","        d = a[a.length - 1].y - a[a.length - 2].y;","        c = a[a.length - 1].x - a[a.length - 2].x;","        b.push({","            x: a[a.length - 1].x -","                c / e,","            y: a[a.length - 1].y - d / f","        });","        b.push({","            x: a[a.length - 1].x,","            y: a[a.length - 1].y","        });","        return b","    },","    drawBeziers: function(a) {","        var b = \"\",","            c;","        for (c = 0; c < (a.length - 1) / 3; c++) b += this.drawBezierMidpoint(a[3 * c], a[3 * c + 1], a[3 * c + 2], a[3 * c + 3]);","        return b","    },","    drawBezierMidpoint: function(a, b, c, d) {","        var e = Math.round,","            f = this.getPointOnSegment(a, b, .75),","            g = this.getPointOnSegment(d, c, .75),","            h = (d.x - a.x) / 16,","            k = (d.y - a.y) / 16,","            l = this.getPointOnSegment(a, b, .375);","        a = this.getPointOnSegment(f, g, .375);","        a.x -= h;","        a.y -= k;","        b = this.getPointOnSegment(g, f, .375);","        b.x += h;","        b.y +=","            k;","        c = this.getPointOnSegment(d, c, .375);","        h = this.getMiddle(l, a);","        f = this.getMiddle(f, g);","        g = this.getMiddle(b, c);","        l = \" Q\" + e(l.x) + \",\" + e(l.y) + \",\" + e(h.x) + \",\" + e(h.y);","        l += \" Q\" + e(a.x) + \",\" + e(a.y) + \",\" + e(f.x) + \",\" + e(f.y);","        l += \" Q\" + e(b.x) + \",\" + e(b.y) + \",\" + e(g.x) + \",\" + e(g.y);","        return l += \" Q\" + e(c.x) + \",\" + e(c.y) + \",\" + e(d.x) + \",\" + e(d.y)","    },","    getMiddle: function(a, b) {","        return {","            x: (a.x + b.x) / 2,","            y: (a.y + b.y) / 2","        }","    },","    getPointOnSegment: function(a, b, c) {","        return {","            x: a.x + (b.x - a.x) * c,","            y: a.y + (b.y - a.y) * c","        }","    }","});","AmCharts.AmDraw = AmCharts.Class({","    construct: function(a, b, c, d) {","        AmCharts.SVG_NS = \"http://www.w3.org/2000/svg\";","        AmCharts.SVG_XLINK = \"http://www.w3.org/1999/xlink\";","        AmCharts.hasSVG = !!document.createElementNS && !!document.createElementNS(AmCharts.SVG_NS, \"svg\").createSVGRect;","        1 > b && (b = 10);","        1 > c && (c = 10);","        this.div = a;","        this.width = b;","        this.height = c;","        this.rBin = document.createElement(\"div\");","        if (AmCharts.hasSVG) {","            AmCharts.SVG = !0;","            var e = this.createSvgElement(\"svg\");","            e.style.position = \"absolute\";","            e.style.width = b + \"px\";","            e.style.height = c +","                \"px\";","            b = this.createSvgElement(\"desc\");","            b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + d.version));","            e.appendChild(b);","            AmCharts.rtl && (e.setAttribute(\"direction\", \"rtl\"), e.style.left = \"auto\", e.style.right = \"0px\");","            e.setAttribute(\"version\", \"1.1\");","            a.appendChild(e);","            this.container = e;","            this.R = new AmCharts.SVGRenderer(this)","        }","        else AmCharts.isIE && AmCharts.VMLRenderer && (AmCharts.VML = !0, AmCharts.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ?","            (e = document.createStyleSheet(), e.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), AmCharts.vmlStyleSheet = e) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new AmCharts.VMLRenderer(this, d), this.R.disableSelection(a))","    },","    createSvgElement: function(a) {","        return document.createElementNS(AmCharts.SVG_NS, a)","    },","    circle: function(a, b, c, d) {","        var e = new AmCharts.AmDObject(\"circle\", this);","        e.attr({","            r: c,","            cx: a,","            cy: b","        });","        this.addToContainer(e.node, d);","        return e","    },","    ellipse: function(a, b, c, d, e) {","        var f = new AmCharts.AmDObject(\"ellipse\", this);","        f.attr({","            rx: c,","            ry: d,","            cx: a,","            cy: b","        });","        this.addToContainer(f.node, e);","        return f","    },","    setSize: function(a, b) {","        0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\")","    },","    rect: function(a, b, c, d, e, f, g) {","        var h = new AmCharts.AmDObject(\"rect\", this);","        AmCharts.VML && (e = Math.round(100 * e / Math.min(c, d)), c += 2 * f, d += 2 * f, h.bw = f, h.node.style.marginLeft = -f, h.node.style.marginTop = -f);","        1 > c && (c =","            1);","        1 > d && (d = 1);","        h.attr({","            x: a,","            y: b,","            width: c,","            height: d,","            rx: e,","            ry: e,","            \"stroke-width\": f","        });","        this.addToContainer(h.node, g);","        return h","    },","    image: function(a, b, c, d, e, f) {","        var g = new AmCharts.AmDObject(\"image\", this);","        g.attr({","            x: b,","            y: c,","            width: d,","            height: e","        });","        this.R.path(g, a);","        this.addToContainer(g.node, f);","        return g","    },","    addToContainer: function(a, b) {","        b || (b = this.container);","        b.appendChild(a)","    },","    text: function(a, b, c) {","        return this.R.text(a, b, c)","    },","    path: function(a, b, c, d) {","        var e = new AmCharts.AmDObject(\"path\", this);","        d || (d = \"100,100\");","        e.attr({","            cs: d","        });","        c ? e.attr({","                dd: a","            }) :","            e.attr({","                d: a","            });","        this.addToContainer(e.node, b);","        return e","    },","    set: function(a) {","        return this.R.set(a)","    },","    remove: function(a) {","        if (a) {","            var b = this.rBin;","            b.appendChild(a);","            b.innerHTML = \"\"","        }","    },","    renderFix: function() {","        var a = this.container,","            b = a.style,","            c;","        try {","            c = a.getScreenCTM() || a.createSVGMatrix()","        }","        catch (d) {","            c = a.createSVGMatrix()","        }","        a = 1 - c.e % 1;","        c = 1 - c.f % 1;.5 < a && (a -= 1);.5 < c && (c -= 1);","        a && (b.left = a + \"px\");","        c && (b.top = c + \"px\")","    },","    update: function() {","        this.R.update()","    }","});","AmCharts.AmDObject = AmCharts.Class({","    construct: function(a, b) {","        this.D = b;","        this.R = b.R;","        this.node = this.R.create(this, a);","        this.y = this.x = 0;","        this.scale = 1","    },","    attr: function(a) {","        this.R.attr(this, a);","        return this","    },","    getAttr: function(a) {","        return this.node.getAttribute(a)","    },","    setAttr: function(a, b) {","        this.R.setAttr(this, a, b);","        return this","    },","    clipRect: function(a, b, c, d) {","        this.R.clipRect(this, a, b, c, d)","    },","    translate: function(a, b, c, d) {","        d || (a = Math.round(a), b = Math.round(b));","        this.R.move(this, a, b, c);","        this.x = a;","        this.y = b;","        this.scale = c;","        this.angle && this.rotate(this.angle)","    },","    rotate: function(a, b) {","        this.R.rotate(this, a, b);","        this.angle = a","    },","    animate: function(a, b, c) {","        for (var d in a)","            if (a.hasOwnProperty(d)) {","                var e = d,","                    f = a[d];","                c = AmCharts.getEffect(c);","                this.R.animate(this, e, f, b, c)","            }","    },","    push: function(a) {","        if (a) {","            var b = this.node;","            b.appendChild(a.node);","            var c = a.clipPath;","            c && b.appendChild(c);","            (a = a.grad) && b.appendChild(a)","        }","    },","    text: function(a) {","        this.R.setText(this, a)","    },","    remove: function() {","        this.R.remove(this)","    },","    clear: function() {","        var a = this.node;","        if (a.hasChildNodes())","            for (; 1 <= a.childNodes.length;) a.removeChild(a.firstChild)","    },","    hide: function() {","        this.setAttr(\"visibility\", \"hidden\")","    },","    show: function() {","        this.setAttr(\"visibility\", \"visible\")","    },","    getBBox: function() {","        return this.R.getBBox(this)","    },","    toFront: function() {","        var a = this.node;","        if (a) {","            this.prevNextNode = a.nextSibling;","            var b = a.parentNode;","            b && b.appendChild(a)","        }","    },","    toPrevious: function() {","        var a = this.node;","        a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null)","    },","    toBack: function() {","        var a = this.node;","        if (a) {","            this.prevNextNode = a.nextSibling;","            var b = a.parentNode;","            if (b) {","                var c = b.firstChild;","                c && b.insertBefore(a, c)","            }","        }","    },","    mouseover: function(a) {","        this.R.addListener(this, \"mouseover\", a);","        return this","    },","    mouseout: function(a) {","        this.R.addListener(this, \"mouseout\", a);","        return this","    },","    click: function(a) {","        this.R.addListener(this, \"click\", a);","        return this","    },","    dblclick: function(a) {","        this.R.addListener(this, \"dblclick\", a);","        return this","    },","    mousedown: function(a) {","        this.R.addListener(this, \"mousedown\", a);","        return this","    },","    mouseup: function(a) {","        this.R.addListener(this, \"mouseup\", a);","        return this","    },","    touchstart: function(a) {","        this.R.addListener(this,","            \"touchstart\", a);","        return this","    },","    touchend: function(a) {","        this.R.addListener(this, \"touchend\", a);","        return this","    },","    contextmenu: function(a) {","        this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a);","        return this","    },","    stop: function(a) {","        (a = this.animationX) && AmCharts.removeFromArray(this.R.animations, a);","        (a = this.animationY) && AmCharts.removeFromArray(this.R.animations, a)","    },","    length: function() {","        return this.node.childNodes.length","    },","    gradient: function(a, b, c) {","        this.R.gradient(this,","            a, b, c)","    },","    pattern: function(a, b) {","        a && this.R.pattern(this, a, b)","    }","});","AmCharts.VMLRenderer = AmCharts.Class({","    construct: function(a, b) {","        this.chart = b;","        this.D = a;","        this.cNames = {","            circle: \"oval\",","            ellipse: \"oval\",","            rect: \"roundrect\",","            path: \"shape\"","        };","        this.styleMap = {","            x: \"left\",","            y: \"top\",","            width: \"width\",","            height: \"height\",","            \"font-family\": \"fontFamily\",","            \"font-size\": \"fontSize\",","            visibility: \"visibility\"","        }","    },","    create: function(a, b) {","        var c;","        if (\"group\" == b) c = document.createElement(\"div\"), a.type = \"div\";","        else if (\"text\" == b) c = document.createElement(\"div\"), a.type = \"text\";","        else if (\"image\" == b) c = document.createElement(\"img\"), a.type =","            \"image\";","        else {","            a.type = \"shape\";","            a.shapeType = this.cNames[b];","            c = document.createElement(\"amvml:\" + this.cNames[b]);","            var d = document.createElement(\"amvml:stroke\");","            c.appendChild(d);","            a.stroke = d;","            var e = document.createElement(\"amvml:fill\");","            c.appendChild(e);","            a.fill = e;","            e.className = \"amvml\";","            d.className = \"amvml\";","            c.className = \"amvml\"","        }","        c.style.position = \"absolute\";","        c.style.top = 0;","        c.style.left = 0;","        return c","    },","    path: function(a, b) {","        a.node.setAttribute(\"src\", b)","    },","    setAttr: function(a, b, c) {","        if (void 0 !== c) {","            var d;","            8 === document.documentMode && (d = !0);","            var e = a.node,","                f = a.type,","                g = e.style;","            \"r\" == b && (g.width = 2 * c, g.height = 2 * c);","            \"oval\" == a.shapeType && (\"rx\" == b && (g.width = 2 * c), \"ry\" == b && (g.height = 2 * c));","            \"roundrect\" != a.shapeType || \"width\" != b && \"height\" != b || (c -= 1);","            \"cursor\" == b && (g.cursor = c);","            \"cx\" == b && (g.left = c - AmCharts.removePx(g.width) / 2);","            \"cy\" == b && (g.top = c - AmCharts.removePx(g.height) / 2);","            var h = this.styleMap[b];","            void 0 !== h && (g[h] = c);","            \"text\" == f && (\"text-anchor\" == b && (a.anchor = c, h = e.clientWidth, \"end\" == c && (g.marginLeft = -h + \"px\"), \"middle\" == c && (g.marginLeft = -(h / 2) + \"px\", g.textAlign =","                \"center\"), \"start\" == c && (g.marginLeft = \"0px\")), \"fill\" == b && (g.color = c), \"font-weight\" == b && (g.fontWeight = c));","            if (g = a.children)","                for (h = 0; h < g.length; h++) g[h].setAttr(b, c);","            if (\"shape\" == f) {","                \"cs\" == b && (e.style.width = \"100px\", e.style.height = \"100px\", e.setAttribute(\"coordsize\", c));","                \"d\" == b && e.setAttribute(\"path\", this.svgPathToVml(c));","                \"dd\" == b && e.setAttribute(\"path\", c);","                f = a.stroke;","                a = a.fill;","                \"stroke\" == b && (d ? f.color = c : f.setAttribute(\"color\", c));","                \"stroke-width\" == b && (d ? f.weight = c : f.setAttribute(\"weight\", c));","                \"stroke-opacity\" == b &&","                    (d ? f.opacity = c : f.setAttribute(\"opacity\", c));","                \"stroke-dasharray\" == b && (g = \"solid\", 0 < c && 3 > c && (g = \"dot\"), 3 <= c && 6 >= c && (g = \"dash\"), 6 < c && (g = \"longdash\"), d ? f.dashstyle = g : f.setAttribute(\"dashstyle\", g));","                if (\"fill-opacity\" == b || \"opacity\" == b) 0 === c ? d ? a.on = !1 : a.setAttribute(\"on\", !1) : d ? a.opacity = c : a.setAttribute(\"opacity\", c);","                \"fill\" == b && (d ? a.color = c : a.setAttribute(\"color\", c));","                \"rx\" == b && (d ? e.arcSize = c + \"%\" : e.setAttribute(\"arcsize\", c + \"%\"))","            }","        }","    },","    attr: function(a, b) {","        for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c])","    },","    text: function(a,","        b, c) {","        var d = new AmCharts.AmDObject(\"text\", this.D),","            e = d.node;","        e.style.whiteSpace = \"pre\";","        e.innerHTML = a;","        this.D.addToContainer(e, c);","        this.attr(d, b);","        return d","    },","    getBBox: function(a) {","        return this.getBox(a.node)","    },","    getBox: function(a) {","        var b = a.offsetLeft,","            c = a.offsetTop,","            d = a.offsetWidth,","            e = a.offsetHeight,","            f;","        if (a.hasChildNodes()) {","            var g, h, k;","            for (k = 0; k < a.childNodes.length; k++) {","                f = this.getBox(a.childNodes[k]);","                var l = f.x;","                isNaN(l) || (isNaN(g) ? g = l : l < g && (g = l));","                var m = f.y;","                isNaN(m) || (isNaN(h) ? h = m : m < h && (h = m));","                l = f.width + l;","                isNaN(l) || (d = Math.max(d,","                    l));","                f = f.height + m;","                isNaN(f) || (e = Math.max(e, f))","            }","            0 > g && (b += g);","            0 > h && (c += h)","        }","        return {","            x: b,","            y: c,","            width: d,","            height: e","        }","    },","    setText: function(a, b) {","        var c = a.node;","        c && (c.innerHTML = b);","        this.setAttr(a, \"text-anchor\", a.anchor)","    },","    addListener: function(a, b, c) {","        a.node[\"on\" + b] = c","    },","    move: function(a, b, c) {","        var d = a.node,","            e = d.style;","        \"text\" == a.type && (c -= AmCharts.removePx(e.fontSize) / 2 - 1);","        \"oval\" == a.shapeType && (b -= AmCharts.removePx(e.width) / 2, c -= AmCharts.removePx(e.height) / 2);","        a = a.bw;","        isNaN(a) || (b -= a, c -= a);","        isNaN(b) || isNaN(c) || (d.style.left = b + \"px\", d.style.top =","            c + \"px\")","    },","    svgPathToVml: function(a) {","        var b = a.split(\" \");","        a = \"\";","        var c, d = Math.round,","            e;","        for (e = 0; e < b.length; e++) {","            var f = b[e],","                g = f.substring(0, 1),","                f = f.substring(1),","                h = f.split(\",\"),","                k = d(h[0]) + \",\" + d(h[1]);","            \"M\" == g && (a += \" m \" + k);","            \"L\" == g && (a += \" l \" + k);","            \"Z\" == g && (a += \" x e\");","            if (\"Q\" == g) {","                var l = c.length,","                    m = c[l - 1],","                    n = h[0],","                    p = h[1],","                    k = h[2],","                    q = h[3];","                c = d(c[l - 2] / 3 + 2 / 3 * n);","                m = d(m / 3 + 2 / 3 * p);","                n = d(2 / 3 * n + k / 3);","                p = d(2 / 3 * p + q / 3);","                a += \" c \" + c + \",\" + m + \",\" + n + \",\" + p + \",\" + k + \",\" + q","            }","            \"A\" == g && (a += \" wa \" + f);","            \"B\" == g && (a += \" at \" + f);","            c = h","        }","        return a","    },","    animate: function(a, b, c, d,","        e) {","        var f = a.node,","            g = this.chart;","        if (\"translate\" == b) {","            b = c.split(\",\");","            c = b[1];","            var h = f.offsetTop;","            g.animate(a, \"left\", f.offsetLeft, b[0], d, e, \"px\");","            g.animate(a, \"top\", h, c, d, e, \"px\")","        }","    },","    clipRect: function(a, b, c, d, e) {","        a = a.node;","        0 === b && 0 === c ? (a.style.width = d + \"px\", a.style.height = e + \"px\", a.style.overflow = \"hidden\") : a.style.clip = \"rect(\" + c + \"px \" + (b + d) + \"px \" + (c + e) + \"px \" + b + \"px)\"","    },","    rotate: function(a, b, c) {","        if (0 !== Number(b)) {","            var d = a.node;","            a = d.style;","            c || (c = this.getBGColor(d.parentNode));","            a.backgroundColor = c;","            a.paddingLeft = 1;","            c = b * Math.PI /","                180;","            var e = Math.cos(c),","                f = Math.sin(c),","                g = AmCharts.removePx(a.left),","                h = AmCharts.removePx(a.top),","                k = d.offsetWidth,","                d = d.offsetHeight;","            b /= Math.abs(b);","            a.left = g + k / 2 - k / 2 * Math.cos(c) - b * d / 2 * Math.sin(c) + 3;","            a.top = h - b * k / 2 * Math.sin(c) + b * d / 2 * Math.sin(c);","            a.cssText = a.cssText + \"; filter:progid:DXImageTransform.Microsoft.Matrix(M11='\" + e + \"', M12='\" + -f + \"', M21='\" + f + \"', M22='\" + e + \"', sizingmethod='auto expand');\"","        }","    },","    getBGColor: function(a) {","        var b = \"#FFFFFF\";","        if (a.style) {","            var c = a.style.backgroundColor;","            \"\" !== c ? b = c : a.parentNode && (b = this.getBGColor(a.parentNode))","        }","        return b","    },","    set: function(a) {","        var b = new AmCharts.AmDObject(\"group\", this.D);","        this.D.container.appendChild(b.node);","        if (a) {","            var c;","            for (c = 0; c < a.length; c++) b.push(a[c])","        }","        return b","    },","    gradient: function(a, b, c, d) {","        var e = \"\";","        \"radialGradient\" == b && (b = \"gradientradial\", c.reverse());","        \"linearGradient\" == b && (b = \"gradient\");","        var f;","        for (f = 0; f < c.length; f++) {","            var g = Math.round(100 * f / (c.length - 1)),","                e = e + (g + \"% \" + c[f]);","            f < c.length - 1 && (e += \",\")","        }","        a = a.fill;","        90 == d ? d = 0 : 270 == d ? d = 180 : 180 == d ? d = 90 : 0 === d && (d = 270);","        8 === document.documentMode ? (a.type = b, a.angle = d) : (a.setAttribute(\"type\",","            b), a.setAttribute(\"angle\", d));","        e && (a.colors.value = e)","    },","    remove: function(a) {","        a.clipPath && this.D.remove(a.clipPath);","        this.D.remove(a.node)","    },","    disableSelection: function(a) {","        void 0 !== typeof a.onselectstart && (a.onselectstart = function() {","            return !1","        });","        a.style.cursor = \"default\"","    },","    pattern: function(a, b) {","        var c = a.node,","            d = a.fill,","            e = \"none\";","        b.color && (e = b.color);","        c.fillColor = e;","        8 === document.documentMode ? (d.type = \"tile\", d.src = b.url) : (d.setAttribute(\"type\", \"tile\"), d.setAttribute(\"src\", b.url))","    },","    update: function() {}","});","AmCharts.SVGRenderer = AmCharts.Class({","    construct: function(a) {","        this.D = a;","        this.animations = []","    },","    create: function(a, b) {","        return document.createElementNS(AmCharts.SVG_NS, b)","    },","    attr: function(a, b) {","        for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c])","    },","    setAttr: function(a, b, c) {","        void 0 !== c && a.node.setAttribute(b, c)","    },","    animate: function(a, b, c, d, e) {","        var f = a.node;","        a[\"an_\" + b] && AmCharts.removeFromArray(this.animations, a[\"an_\" + b]);","        \"translate\" == b ? (f = (f = f.getAttribute(\"transform\")) ? String(f).substring(10, f.length - 1) : \"0,0\", f =","            f.split(\", \").join(\" \"), f = f.split(\" \").join(\",\"), 0 === f && (f = \"0,0\")) : f = Number(f.getAttribute(b));","        c = {","            obj: a,","            frame: 0,","            attribute: b,","            from: f,","            to: c,","            time: d,","            effect: e","        };","        this.animations.push(c);","        a[\"an_\" + b] = c","    },","    update: function() {","        var a, b = this.animations;","        for (a = b.length - 1; 0 <= a; a--) {","            var c = b[a],","                d = 1E3 * c.time / AmCharts.updateRate,","                e = c.frame + 1,","                f = c.obj,","                g = c.attribute,","                h, k, l;","            e <= d ? (c.frame++, \"translate\" == g ? (h = c.from.split(\",\"), g = Number(h[0]), h = Number(h[1]), isNaN(h) && (h = 0), k = c.to.split(\",\"), l = Number(k[0]), k = Number(k[1]), l = 0 === l - g ? l :","                Math.round(AmCharts[c.effect](0, e, g, l - g, d)), c = 0 === k - h ? k : Math.round(AmCharts[c.effect](0, e, h, k - h, d)), g = \"transform\", c = \"translate(\" + l + \",\" + c + \")\") : (k = Number(c.from), h = Number(c.to), l = h - k, c = AmCharts[c.effect](0, e, k, l, d), isNaN(c) && (c = h), 0 === l && this.animations.splice(a, 1)), this.setAttr(f, g, c)) : (\"translate\" == g ? (k = c.to.split(\",\"), l = Number(k[0]), k = Number(k[1]), f.translate(l, k)) : (h = Number(c.to), this.setAttr(f, g, h)), this.animations.splice(a, 1))","        }","    },","    getBBox: function(a) {","        if (a = a.node) try {","            return a.getBBox()","        }","        catch (b) {}","        return {","            width: 0,","            height: 0,","            x: 0,","            y: 0","        }","    },","    path: function(a, b) {","        a.node.setAttributeNS(AmCharts.SVG_XLINK, \"xlink:href\", b)","    },","    clipRect: function(a, b, c, d, e) {","        var f = a.node,","            g = a.clipPath;","        g && this.D.remove(g);","        var h = f.parentNode;","        h && (f = document.createElementNS(AmCharts.SVG_NS, \"clipPath\"), g = AmCharts.getUniqueId(), f.setAttribute(\"id\", g), this.D.rect(b, c, d, e, 0, 0, f), h.appendChild(f), b = \"#\", AmCharts.baseHref && !AmCharts.isIE && (b = window.location.href + b), this.setAttr(a, \"clip-path\", \"url(\" + b + g + \")\"), this.clipPathC++, a.clipPath = f)","    },","    text: function(a, b,","        c) {","        var d = new AmCharts.AmDObject(\"text\", this.D);","        a = String(a).split(\"\\n\");","        var e = b[\"font-size\"],","            f;","        for (f = 0; f < a.length; f++) {","            var g = this.create(null, \"tspan\");","            g.appendChild(document.createTextNode(a[f]));","            g.setAttribute(\"y\", (e + 2) * f + Math.round(e / 2));","            g.setAttribute(\"x\", 0);","            d.node.appendChild(g)","        }","        d.node.setAttribute(\"y\", Math.round(e / 2));","        this.attr(d, b);","        this.D.addToContainer(d.node, c);","        return d","    },","    setText: function(a, b) {","        var c = a.node;","        c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)))","    },","    move: function(a,","        b, c, d) {","        b = \"translate(\" + b + \",\" + c + \")\";","        d && (b = b + \" scale(\" + d + \")\");","        this.setAttr(a, \"transform\", b)","    },","    rotate: function(a, b) {","        var c = a.node.getAttribute(\"transform\"),","            d = \"rotate(\" + b + \")\";","        c && (d = c + \" \" + d);","        this.setAttr(a, \"transform\", d)","    },","    set: function(a) {","        var b = new AmCharts.AmDObject(\"g\", this.D);","        this.D.container.appendChild(b.node);","        if (a) {","            var c;","            for (c = 0; c < a.length; c++) b.push(a[c])","        }","        return b","    },","    addListener: function(a, b, c) {","        a.node[\"on\" + b] = c","    },","    gradient: function(a, b, c, d) {","        var e = a.node,","            f = a.grad;","        f && this.D.remove(f);","        b = document.createElementNS(AmCharts.SVG_NS,","            b);","        f = AmCharts.getUniqueId();","        b.setAttribute(\"id\", f);","        if (!isNaN(d)) {","            var g = 0,","                h = 0,","                k = 0,","                l = 0;","            90 == d ? k = 100 : 270 == d ? l = 100 : 180 == d ? g = 100 : 0 === d && (h = 100);","            b.setAttribute(\"x1\", g + \"%\");","            b.setAttribute(\"x2\", h + \"%\");","            b.setAttribute(\"y1\", k + \"%\");","            b.setAttribute(\"y2\", l + \"%\")","        }","        for (d = 0; d < c.length; d++) g = document.createElementNS(AmCharts.SVG_NS, \"stop\"), h = 100 * d / (c.length - 1), 0 === d && (h = 0), g.setAttribute(\"offset\", h + \"%\"), g.setAttribute(\"stop-color\", c[d]), b.appendChild(g);","        e.parentNode.appendChild(b);","        c = \"#\";","        AmCharts.baseHref && !AmCharts.isIE &&","            (c = window.location.href + c);","        e.setAttribute(\"fill\", \"url(\" + c + f + \")\");","        a.grad = b","    },","    pattern: function(a, b, c) {","        var d = a.node;","        isNaN(c) && (c = 1);","        var e = a.patternNode;","        e && this.D.remove(e);","        var e = document.createElementNS(AmCharts.SVG_NS, \"pattern\"),","            f = AmCharts.getUniqueId(),","            g = b;","        b.url && (g = b.url);","        var h = Number(b.width);","        isNaN(h) && (h = 4);","        var k = Number(b.height);","        isNaN(k) && (k = 4);","        h /= c;","        k /= c;","        c = b.x;","        isNaN(c) && (c = 0);","        var l = -Math.random() * Number(b.randomX);","        isNaN(l) || (c = l);","        l = b.y;","        isNaN(l) && (l = 0);","        var m = -Math.random() * Number(b.randomY);","        isNaN(m) ||","            (l = m);","        e.setAttribute(\"id\", f);","        e.setAttribute(\"width\", h);","        e.setAttribute(\"height\", k);","        e.setAttribute(\"patternUnits\", \"userSpaceOnUse\");","        e.setAttribute(\"xlink:href\", g);","        b.color && (m = document.createElementNS(AmCharts.SVG_NS, \"rect\"), m.setAttributeNS(null, \"height\", h), m.setAttributeNS(null, \"width\", k), m.setAttributeNS(null, \"fill\", b.color), e.appendChild(m));","        this.D.image(g, 0, 0, h, k, e).translate(c, l);","        g = \"#\";","        AmCharts.baseHref && !AmCharts.isIE && (g = window.location.href + g);","        d.setAttribute(\"fill\", \"url(\" + g + f + \")\");","        a.patternNode =","            e;","        d.parentNode.appendChild(e)","    },","    remove: function(a) {","        a.clipPath && this.D.remove(a.clipPath);","        a.grad && this.D.remove(a.grad);","        a.patternNode && this.D.remove(a.patternNode);","        this.D.remove(a.node)","    }","});","AmCharts.AmDSet = AmCharts.Class({","    construct: function(a) {","        this.create(\"g\")","    },","    attr: function(a) {","        this.R.attr(this.node, a)","    },","    move: function(a, b) {","        this.R.move(this.node, a, b)","    }","});","AmCharts.AmLegend = AmCharts.Class({","    construct: function(a) {","        this.cname = \"AmLegend\";","        this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"rollOverItem\", \"rollOutItem\", \"clickLabel\");","        this.position = \"bottom\";","        this.borderColor = this.color = \"#000000\";","        this.borderAlpha = 0;","        this.markerLabelGap = 5;","        this.verticalGap = 10;","        this.align = \"left\";","        this.horizontalGap = 0;","        this.spacing = 10;","        this.markerDisabledColor = \"#AAB3B3\";","        this.markerType = \"square\";","        this.markerSize = 16;","        this.markerBorderThickness =","            this.markerBorderAlpha = 1;","        this.marginBottom = this.marginTop = 0;","        this.marginLeft = this.marginRight = 20;","        this.autoMargins = !0;","        this.valueWidth = 50;","        this.switchable = !0;","        this.switchType = \"x\";","        this.switchColor = \"#FFFFFF\";","        this.rollOverColor = \"#CC0000\";","        this.reversedOrder = !1;","        this.labelText = \"[[title]]\";","        this.valueText = \"[[value]]\";","        this.useMarkerColorForLabels = !1;","        this.rollOverGraphAlpha = 1;","        this.textClickEnabled = !1;","        this.equalWidths = !0;","        this.dateFormat = \"DD-MM-YYYY\";","        this.backgroundColor = \"#FFFFFF\";","        this.backgroundAlpha = 0;","        this.useGraphSettings = !1;","        this.showEntries = !0;","        AmCharts.applyTheme(this, a, this.cname)","    },","    setData: function(a) {","        this.legendData = a;","        this.invalidateSize()","    },","    invalidateSize: function() {","        this.destroy();","        this.entries = [];","        this.valueLabels = [];","        (AmCharts.ifArray(this.legendData) || AmCharts.ifArray(this.data)) && this.drawLegend()","    },","    drawLegend: function() {","        var a = this.chart,","            b = this.position,","            c = this.width,","            d = a.divRealWidth,","            e = a.divRealHeight,","            f = this.div,","            g = this.legendData;","        this.data && (g = this.data);","        isNaN(this.fontSize) && (this.fontSize = a.fontSize);","        if (\"right\" ==","            b || \"left\" == b) this.maxColumns = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);","        else if (this.autoMargins) {","            this.marginRight = a.marginRight;","            this.marginLeft = a.marginLeft;","            var h = a.autoMarginOffset;","            \"bottom\" == b ? (this.marginBottom = h, this.marginTop = 0) : (this.marginTop = h, this.marginBottom = 0)","        }","        var k;","        void 0 !== c ? k = AmCharts.toCoordinate(c, d) : \"right\" != b && \"left\" != b && (k = a.realWidth);","        \"outside\" == b ? (k = f.offsetWidth, e = f.offsetHeight, f.clientHeight && (k = f.clientWidth, e = f.clientHeight)) : (isNaN(k) || (f.style.width = k + \"px\"),","            f.className = \"amChartsLegend\");","        this.divWidth = k;","        (b = this.container) ? (b.container.innerHTML = \"\", f.appendChild(b.container), b.setSize(k, e)) : b = new AmCharts.AmDraw(f, k, e, a);","        this.container = b;","        this.lx = 0;","        this.ly = 8;","        e = this.markerSize;","        e > this.fontSize && (this.ly = e / 2 - 1);","        0 < e && (this.lx += e + this.markerLabelGap);","        this.titleWidth = 0;","        if (e = this.title) a = AmCharts.text(this.container, e, this.color, a.fontFamily, this.fontSize, \"start\", !0), a.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = a.getBBox(), this.titleWidth =","            a.width + 15, this.titleHeight = a.height + 6;","        this.index = this.maxLabelWidth = 0;","        if (this.showEntries) {","            for (a = 0; a < g.length; a++) this.createEntry(g[a]);","            for (a = this.index = 0; a < g.length; a++) this.createValue(g[a])","        }","        this.arrangeEntries();","        this.updateValues()","    },","    arrangeEntries: function() {","        var a = this.position,","            b = this.marginLeft + this.titleWidth,","            c = this.marginRight,","            d = this.marginTop,","            e = this.marginBottom,","            f = this.horizontalGap,","            g = this.div,","            h = this.divWidth,","            k = this.maxColumns,","            l = this.verticalGap,","            m = this.spacing,","            n = h - c - b,","            p = 0,","            q = 0,","            r = this.container;","        this.set && this.set.remove();","        var s = r.set();","        this.set = s;","        r = r.set();","        s.push(r);","        var w = this.entries,","            v, t;","        for (t = 0; t < w.length; t++) {","            v = w[t].getBBox();","            var u = v.width;","            u > p && (p = u);","            v = v.height;","            v > q && (q = v)","        }","        var u = q = 0,","            x = f,","            E = 0,","            A = 0;","        for (t = 0; t < w.length; t++) {","            var z = w[t];","            this.reversedOrder && (z = w[w.length - t - 1]);","            v = z.getBBox();","            var H;","            this.equalWidths ? H = f + u * (p + m + this.markerLabelGap) : (H = x, x = x + v.width + f + m);","            v.height > A && (A = v.height);","            H + v.width > n && 0 < t && 0 !== u && (q++, u = 0, H = f, x = H + v.width + f + m, E = E + A + l, A = 0);","            z.translate(H, E);","            u++;","            !isNaN(k) && u >= k &&","                (u = 0, q++, E = E + A + l, A = 0);","            r.push(z)","        }","        v = r.getBBox();","        k = v.height + 2 * l - 1;","        \"left\" == a || \"right\" == a ? (h = v.width + 2 * f, g.style.width = h + b + c + \"px\") : h = h - b - c - 1;","        c = AmCharts.polygon(this.container, [0, h, h, 0], [0, 0, k, k], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);","        s.push(c);","        s.translate(b, d);","        c.toBack();","        b = f;","        if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a) \"center\" == this.align ? b = f + (h - v.width) / 2 : \"right\" == this.align && (b = f + h - v.width);","        r.translate(b, l + 1);","        this.titleHeight > k && (k = this.titleHeight);","        a = k + d + e + 1;","        0 > a && (a = 0);","        g.style.height = Math.round(a) + \"px\"","    },","    createEntry: function(a) {","        if (!1 !== a.visibleInLegend) {","            var b = this.chart,","                c = a.markerType;","            c || (c = this.markerType);","            var d = a.color,","                e = a.alpha;","            a.legendKeyColor && (d = a.legendKeyColor());","            a.legendKeyAlpha && (e = a.legendKeyAlpha());","            var f;","            !0 === a.hidden && (f = d = this.markerDisabledColor);","            var g = a.pattern,","                h = a.customMarker;","            h || (h = this.customMarker);","            var k = this.container,","                l = this.markerSize,","                m = 0,","                n = 0,","                p = l / 2;","            if (this.useGraphSettings)","                if (m = a.type, this.switchType = void 0, \"line\" == m ||","                    \"step\" == m || \"smoothedLine\" == m || \"ohlc\" == m) g = k.set(), a.hidden || (d = a.lineColorR, f = a.bulletBorderColorR), n = AmCharts.line(k, [0, 2 * l], [l / 2, l / 2], d, a.lineAlpha, a.lineThickness, a.dashLength), g.push(n), a.bullet && (a.hidden || (d = a.bulletColorR), n = AmCharts.bullet(k, a.bullet, a.bulletSize, d, a.bulletAlpha, a.bulletBorderThickness, f, a.bulletBorderAlpha)) && (n.translate(l + 1, l / 2), g.push(n)), p = 0, m = l, n = l / 3;","                else {","                    var q;","                    a.getGradRotation && (q = a.getGradRotation());","                    m = a.fillColorsR;","                    !0 === a.hidden && (m = d);","                    if (g = this.createMarker(\"rectangle\",","                        m, a.fillAlphas, a.lineThickness, d, a.lineAlpha, q, g)) p = l, g.translate(p, l / 2);","                    m = l","                }","            else h ? (b.path && (h = b.path + h), g = k.image(h, 0, 0, l, l)) : (g = this.createMarker(c, d, e, void 0, void 0, void 0, void 0, g)) && g.translate(l / 2, l / 2);","            this.addListeners(g, a);","            k = k.set([g]);","            this.switchable && a.switchable && k.setAttr(\"cursor\", \"pointer\");","            (f = this.switchType) && \"none\" != f && (\"x\" == f ? (q = this.createX(), q.translate(l / 2, l / 2)) : q = this.createV(), q.dItem = a, !0 !== a.hidden ? \"x\" == f ? q.hide() : q.show() : \"x\" != f && q.hide(), this.switchable || q.hide(), this.addListeners(q,","                a), a.legendSwitch = q, k.push(q));","            f = this.color;","            a.showBalloon && this.textClickEnabled && void 0 !== this.selectedColor && (f = this.selectedColor);","            this.useMarkerColorForLabels && (f = d);","            !0 === a.hidden && (f = this.markerDisabledColor);","            d = AmCharts.massReplace(this.labelText, {","                \"[[title]]\": a.title","            });","            q = this.fontSize;","            g && l <= q && g.translate(p, l / 2 + this.ly - q / 2 + (q + 2 - l) / 2 - n);","            var r;","            d && (d = AmCharts.fixBrakes(d), a.legendTextReal = d, r = this.labelWidth, r = isNaN(r) ? AmCharts.text(this.container, d, f, b.fontFamily, q, \"start\") : AmCharts.wrappedText(this.container,","                d, f, b.fontFamily, q, \"start\", !1, r, 0), r.translate(this.lx + m, this.ly), k.push(r), b = r.getBBox().width, this.maxLabelWidth < b && (this.maxLabelWidth = b));","            this.entries[this.index] = k;","            a.legendEntry = this.entries[this.index];","            a.legendLabel = r;","            this.index++","        }","    },","    addListeners: function(a, b) {","        var c = this;","        a && a.mouseover(function(a) {","            c.rollOverMarker(b, a)","        }).mouseout(function(a) {","            c.rollOutMarker(b, a)","        }).click(function(a) {","            c.clickMarker(b, a)","        })","    },","    rollOverMarker: function(a, b) {","        this.switchable && this.dispatch(\"rollOverMarker\", a, b);","        this.dispatch(\"rollOverItem\",","            a, b)","    },","    rollOutMarker: function(a, b) {","        this.switchable && this.dispatch(\"rollOutMarker\", a, b);","        this.dispatch(\"rollOutItem\", a, b)","    },","    clickMarker: function(a, b) {","        this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));","        this.dispatch(\"clickMarker\", a, b)","    },","    rollOverLabel: function(a, b) {","        a.hidden || (this.textClickEnabled && a.legendLabel && a.legendLabel.attr({","            fill: this.rollOverColor","        }), this.dispatch(\"rollOverItem\", a, b))","    },","    rollOutLabel: function(a, b) {","        if (!a.hidden) {","            if (this.textClickEnabled && a.legendLabel) {","                var c =","                    this.color;","                void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);","                this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));","                a.legendLabel.attr({","                    fill: c","                })","            }","            this.dispatch(\"rollOutItem\", a, b)","        }","    },","    clickLabel: function(a, b) {","        this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b))","    },","    dispatch: function(a, b, c) {","        this.fire(a, {","            type: a,","            dataItem: b,","            target: this,","            event: c,","            chart: this.chart","        })","    },","    createValue: function(a) {","        var b =","            this,","            c = b.fontSize;","        if (!1 !== a.visibleInLegend) {","            var d = b.maxLabelWidth;","            b.equalWidths || (b.valueAlign = \"left\");","            \"left\" == b.valueAlign && (d = a.legendEntry.getBBox().width);","            var e = d;","            if (b.valueText && 0 < b.valueWidth) {","                var f = b.color;","                b.useMarkerColorForValues && (f = a.color, a.legendKeyColor && (f = a.legendKeyColor()));","                !0 === a.hidden && (f = b.markerDisabledColor);","                var g = b.valueText,","                    d = d + b.lx + b.markerLabelGap + b.valueWidth,","                    h = \"end\";","                \"left\" == b.valueAlign && (d -= b.valueWidth, h = \"start\");","                f = AmCharts.text(b.container, g, f, b.chart.fontFamily,","                    c, h);","                f.translate(d, b.ly);","                b.entries[b.index].push(f);","                e += b.valueWidth + 2 * b.markerLabelGap;","                f.dItem = a;","                b.valueLabels.push(f)","            }","            b.index++;","            f = b.markerSize;","            f < c + 7 && (f = c + 7, AmCharts.VML && (f += 3));","            c = b.container.rect(b.markerSize, 0, e, f, 0, 0).attr({","                stroke: \"none\",","                fill: \"#ffffff\",","                \"fill-opacity\": .005","            });","            c.dItem = a;","            b.entries[b.index - 1].push(c);","            c.mouseover(function(c) {","                b.rollOverLabel(a, c)","            }).mouseout(function(c) {","                b.rollOutLabel(a, c)","            }).click(function(c) {","                b.clickLabel(a, c)","            })","        }","    },","    createV: function() {","        var a = this.markerSize;","        return AmCharts.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor)","    },","    createX: function() {","        var a = (this.markerSize - 4) / 2,","            b = {","                stroke: this.switchColor,","                \"stroke-width\": 3","            },","            c = this.container,","            d = AmCharts.line(c, [-a, a], [-a, a]).attr(b),","            a = AmCharts.line(c, [-a, a], [a, -a]).attr(b);","        return this.container.set([d, a])","    },","    createMarker: function(a, b, c, d, e, f, g, h) {","        var k = this.markerSize,","            l = this.container;","        e || (e = this.markerBorderColor);","        e || (e = b);","        isNaN(d) && (d = this.markerBorderThickness);","        isNaN(f) && (f = this.markerBorderAlpha);","        return AmCharts.bullet(l,","            a, k, b, c, d, e, f, k, g, h)","    },","    validateNow: function() {","        this.invalidateSize()","    },","    updateValues: function() {","        var a = this.valueLabels,","            b = this.chart,","            c, d = this.data;","        for (c = 0; c < a.length; c++) {","            var e = a[c],","                f = e.dItem,","                g = \" \";","            if (d) f.value ? e.text(f.value) : e.text(\"\");","            else {","                if (void 0 !== f.type) {","                    var h = f.currentDataItem,","                        k = this.periodValueText;","                    f.legendPeriodValueText && (k = f.legendPeriodValueText);","                    h ? (g = this.valueText, f.legendValueText && (g = f.legendValueText), g = b.formatString(g, h)) : k && (g = b.formatPeriodString(k, f))","                }","                else g = b.formatString(this.valueText,","                    f); if (k = this.valueFunction) h && (f = h), g = k(f, g);","                e.text(g)","            }","        }","    },","    renderFix: function() {","        if (!AmCharts.VML) {","            var a = this.container;","            a && a.renderFix()","        }","    },","    destroy: function() {","        this.div.innerHTML = \"\";","        AmCharts.remove(this.set)","    }","});","AmCharts.formatMilliseconds = function(a, b) {","    if (-1 != a.indexOf(\"fff\")) {","        var c = b.getMilliseconds(),","            d = String(c);","        10 > c && (d = \"00\" + c);","        10 <= c && 100 > c && (d = \"0\" + c);","        a = a.replace(/fff/g, d)","    }","    return a","};","AmCharts.extractPeriod = function(a) {","    var b = AmCharts.stripNumbers(a),","        c = 1;","    b != a && (c = Number(a.slice(0, a.indexOf(b))));","    return {","        period: b,","        count: c","    }","};","AmCharts.newDate = function(a, b) {","    return date = \"fff\" == b ? AmCharts.useUTC ? new Date(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate(), a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds(), a.getUTCMilliseconds()) : new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : new Date(a)","};","AmCharts.resetDateToMin = function(a, b, c, d) {","    void 0 === d && (d = 1);","    var e, f, g, h, k, l, m;","    AmCharts.useUTC ? (e = a.getUTCFullYear(), f = a.getUTCMonth(), g = a.getUTCDate(), h = a.getUTCHours(), k = a.getUTCMinutes(), l = a.getUTCSeconds(), m = a.getUTCMilliseconds(), a = a.getUTCDay()) : (e = a.getFullYear(), f = a.getMonth(), g = a.getDate(), h = a.getHours(), k = a.getMinutes(), l = a.getSeconds(), m = a.getMilliseconds(), a = a.getDay());","    switch (b) {","        case \"YYYY\":","            e = Math.floor(e / c) * c;","            f = 0;","            g = 1;","            m = l = k = h = 0;","            break;","        case \"MM\":","            f = Math.floor(f / c) * c;","            g = 1;","            m = l = k = h = 0;","            break;","        case \"WW\":","            0 ===","                a && 0 < d && (a = 7);","            g = g - a + d;","            m = l = k = h = 0;","            break;","        case \"DD\":","            m = l = k = h = 0;","            break;","        case \"hh\":","            h = Math.floor(h / c) * c;","            m = l = k = 0;","            break;","        case \"mm\":","            k = Math.floor(k / c) * c;","            m = l = 0;","            break;","        case \"ss\":","            l = Math.floor(l / c) * c;","            m = 0;","            break;","        case \"fff\":","            m = Math.floor(m / c) * c","    }","    AmCharts.useUTC ? (a = new Date, a.setUTCFullYear(e, f, g), a.setUTCHours(h, k, l, m)) : a = new Date(e, f, g, h, k, l, m);","    return a","};","AmCharts.getPeriodDuration = function(a, b) {","    void 0 === b && (b = 1);","    var c;","    switch (a) {","        case \"YYYY\":","            c = 316224E5;","            break;","        case \"MM\":","            c = 26784E5;","            break;","        case \"WW\":","            c = 6048E5;","            break;","        case \"DD\":","            c = 864E5;","            break;","        case \"hh\":","            c = 36E5;","            break;","        case \"mm\":","            c = 6E4;","            break;","        case \"ss\":","            c = 1E3;","            break;","        case \"fff\":","            c = 1","    }","    return c * b","};","AmCharts.intervals = {","    s: {","        nextInterval: \"ss\",","        contains: 1E3","    },","    ss: {","        nextInterval: \"mm\",","        contains: 60,","        count: 0","    },","    mm: {","        nextInterval: \"hh\",","        contains: 60,","        count: 1","    },","    hh: {","        nextInterval: \"DD\",","        contains: 24,","        count: 2","    },","    DD: {","        nextInterval: \"\",","        contains: Infinity,","        count: 3","    }","};","AmCharts.getMaxInterval = function(a, b) {","    var c = AmCharts.intervals;","    return a >= c[b].contains ? (a = Math.round(a / c[b].contains), b = c[b].nextInterval, AmCharts.getMaxInterval(a, b)) : \"ss\" == b ? c[b].nextInterval : b","};","AmCharts.dayNames = \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \");","AmCharts.shortDayNames = \"Sun Mon Tue Wed Thu Fri Sat\".split(\" \");","AmCharts.monthNames = \"January February March April May June July August September October November December\".split(\" \");","AmCharts.shortMonthNames = \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \");","AmCharts.getWeekNumber = function(a) {","    a = new Date(a);","    a.setHours(0, 0, 0);","    a.setDate(a.getDate() + 4 - (a.getDay() || 7));","    var b = new Date(a.getFullYear(), 0, 1);","    return Math.ceil(((a - b) / 864E5 + 1) / 7)","};","AmCharts.stringToDate = function(a, b) {","    var c = {},","        d = [{","            pattern: \"YYYY\",","            period: \"year\"","        }, {","            pattern: \"YY\",","            period: \"year\"","        }, {","            pattern: \"MM\",","            period: \"month\"","        }, {","            pattern: \"M\",","            period: \"month\"","        }, {","            pattern: \"DD\",","            period: \"date\"","        }, {","            pattern: \"D\",","            period: \"date\"","        }, {","            pattern: \"JJ\",","            period: \"hours\"","        }, {","            pattern: \"J\",","            period: \"hours\"","        }, {","            pattern: \"HH\",","            period: \"hours\"","        }, {","            pattern: \"H\",","            period: \"hours\"","        }, {","            pattern: \"KK\",","            period: \"hours\"","        }, {","            pattern: \"K\",","            period: \"hours\"","        }, {","            pattern: \"LL\",","            period: \"hours\"","        }, {","            pattern: \"L\",","            period: \"hours\"","        }, {","            pattern: \"NN\",","            period: \"minutes\"","        }, {","            pattern: \"N\",","            period: \"minutes\"","        }, {","            pattern: \"SS\",","            period: \"seconds\"","        }, {","            pattern: \"S\",","            period: \"seconds\"","        }, {","            pattern: \"QQQ\",","            period: \"milliseconds\"","        }, {","            pattern: \"QQ\",","            period: \"milliseconds\"","        }, {","            pattern: \"Q\",","            period: \"milliseconds\"","        }],","        e = !0,","        f = b.indexOf(\"AA\"); - 1 != f && (a.substr(f, 2), \"pm\" == a.toLowerCase && (e = !1));","    var f = b,","        g, h, k;","    for (k = 0; k < d.length; k++) h = d[k].period, c[h] = 0, \"date\" == h && (c[h] = 1);","    for (k = 0; k < d.length; k++)","        if (g = d[k].pattern, h = d[k].period, -1 != b.indexOf(g)) {","            var l = AmCharts.getFromDateString(g, a, f);","            b = b.replace(g, \"\");","            if (\"KK\" == g || \"K\" == g || \"LL\" ==","                g || \"L\" == g) e || (l += 12);","            c[h] = l","        }","    AmCharts.useUTC ? (d = new Date, d.setUTCFullYear(c.year, c.month, c.date), d.setUTCHours(c.hours, c.minutes, c.seconds, c.milliseconds)) : d = new Date(c.year, c.month, c.date, c.hours, c.minutes, c.seconds, c.milliseconds);","    return d","};","AmCharts.getFromDateString = function(a, b, c) {","    if (void 0 !== b) return c = c.indexOf(a), b = b.substr(c, a.length), \"0\" == b.charAt(0) && (b = b.substr(1, b.length - 1)), b = Number(b), isNaN(b) && (b = 0), -1 != a.indexOf(\"M\") && b--, b","};","AmCharts.formatDate = function(a, b, c) {","    c || (c = AmCharts);","    var d, e, f, g, h, k, l, m = AmCharts.getWeekNumber(a);","    AmCharts.useUTC ? (d = a.getUTCFullYear(), e = a.getUTCMonth(), f = a.getUTCDate(), g = a.getUTCDay(), h = a.getUTCHours(), k = a.getUTCMinutes(), l = a.getUTCSeconds(), a = a.getUTCMilliseconds()) : (d = a.getFullYear(), e = a.getMonth(), f = a.getDate(), g = a.getDay(), h = a.getHours(), k = a.getMinutes(), l = a.getSeconds(), a = a.getMilliseconds());","    var n = String(d).substr(2, 2),","        p = e + 1;","    9 > e && (p = \"0\" + p);","    var q = \"0\" + g;","    b = b.replace(/W/g, m);","    m = h;","    24 == m && (m = 0);","    var r = m;","    10 > r && (r = \"0\" + r);","    b = b.replace(/JJ/g, r);","    b = b.replace(/J/g, m);","    r = h;","    0 === r && (r = 24, -1 != b.indexOf(\"H\") && f--);","    m = f;","    10 > f && (m = \"0\" + f);","    var s = r;","    10 > s && (s = \"0\" + s);","    b = b.replace(/HH/g, s);","    b = b.replace(/H/g, r);","    r = h;","    11 < r && (r -= 12);","    s = r;","    10 > s && (s = \"0\" + s);","    b = b.replace(/KK/g, s);","    b = b.replace(/K/g, r);","    r = h;","    0 === r && (r = 12);","    12 < r && (r -= 12);","    s = r;","    10 > s && (s = \"0\" + s);","    b = b.replace(/LL/g, s);","    b = b.replace(/L/g, r);","    r = k;","    10 > r && (r = \"0\" + r);","    b = b.replace(/NN/g, r);","    b = b.replace(/N/g, k);","    k = l;","    10 > k && (k = \"0\" + k);","    b = b.replace(/SS/g, k);","    b = b.replace(/S/g, l);","    l = a;","    10 > l && (l = \"00\" +","        l);","    100 > l && (l = \"0\" + l);","    k = a;","    10 > k && (k = \"00\" + k);","    b = b.replace(/QQQ/g, l);","    b = b.replace(/QQ/g, k);","    b = b.replace(/Q/g, a);","    b = 12 > h ? b.replace(/A/g, \"am\") : b.replace(/A/g, \"pm\");","    b = b.replace(/YYYY/g, \"@IIII@\");","    b = b.replace(/YY/g, \"@II@\");","    b = b.replace(/MMMM/g, \"@XXXX@\");","    b = b.replace(/MMM/g, \"@XXX@\");","    b = b.replace(/MM/g, \"@XX@\");","    b = b.replace(/M/g, \"@X@\");","    b = b.replace(/DD/g, \"@RR@\");","    b = b.replace(/D/g, \"@R@\");","    b = b.replace(/EEEE/g, \"@PPPP@\");","    b = b.replace(/EEE/g, \"@PPP@\");","    b = b.replace(/EE/g, \"@PP@\");","    b = b.replace(/E/g, \"@P@\");","    b = b.replace(/@IIII@/g, d);","    b =","        b.replace(/@II@/g, n);","    b = b.replace(/@XXXX@/g, c.monthNames[e]);","    b = b.replace(/@XXX@/g, c.shortMonthNames[e]);","    b = b.replace(/@XX@/g, p);","    b = b.replace(/@X@/g, e + 1);","    b = b.replace(/@RR@/g, m);","    b = b.replace(/@R@/g, f);","    b = b.replace(/@PPPP@/g, c.dayNames[g]);","    b = b.replace(/@PPP@/g, c.shortDayNames[g]);","    b = b.replace(/@PP@/g, q);","    return b = b.replace(/@P@/g, g)","};","AmCharts.changeDate = function(a, b, c, d, e) {","    var f = -1;","    void 0 === d && (d = !0);","    void 0 === e && (e = !1);","    !0 === d && (f = 1);","    switch (b) {","        case \"YYYY\":","            a.setFullYear(a.getFullYear() + c * f);","            d || e || a.setDate(a.getDate() + 1);","            break;","        case \"MM\":","            b = a.getMonth();","            a.setMonth(a.getMonth() + c * f);","            a.getMonth() > b + c * f && a.setDate(a.getDate() - 1);","            d || e || a.setDate(a.getDate() + 1);","            break;","        case \"DD\":","            a.setDate(a.getDate() + c * f);","            break;","        case \"WW\":","            a.setDate(a.getDate() + c * f * 7);","            break;","        case \"hh\":","            a.setHours(a.getHours() + c * f);","            break;","        case \"mm\":","            a.setMinutes(a.getMinutes() +","                c * f);","            break;","        case \"ss\":","            a.setSeconds(a.getSeconds() + c * f);","            break;","        case \"fff\":","            a.setMilliseconds(a.getMilliseconds() + c * f)","    }","    return a"]}]}]]},"ace":{"folds":[],"scrolltop":7728,"scrollleft":0,"selection":{"start":{"row":11,"column":24},"end":{"row":11,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":453,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1413128372956}