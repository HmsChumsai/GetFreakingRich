{"changed":true,"filter":false,"title":"amstock.js","tooltip":"/amcharts/amstock.js","value":"AmCharts.AmStockChart = AmCharts.Class({\n    construct: function(a) {\n        this.type = \"stock\";\n        this.cname = \"AmStockChart\";\n        this.version = \"3.11.1\";\n        this.theme = a;\n        this.createEvents(\"zoomed\", \"rollOverStockEvent\", \"rollOutStockEvent\", \"clickStockEvent\", \"panelRemoved\", \"dataUpdated\", \"init\", \"rendered\", \"drawn\");\n        this.colors = \"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");\n        this.firstDayOfWeek = 1;\n        this.glueToTheEnd = !1;\n        this.dataSetCounter = -1;\n        this.zoomOutOnDataSetChange = !1;\n        this.panels = [];\n        this.dataSets = [];\n        this.chartCursors = [];\n        this.comparedDataSets = [];\n        this.categoryAxesSettings = new AmCharts.CategoryAxesSettings(a);\n        this.valueAxesSettings = new AmCharts.ValueAxesSettings(a);\n        this.panelsSettings = new AmCharts.PanelsSettings(a);\n        this.chartScrollbarSettings = new AmCharts.ChartScrollbarSettings(a);\n        this.chartCursorSettings = new AmCharts.ChartCursorSettings(a);\n        this.stockEventsSettings = new AmCharts.StockEventsSettings(a);\n        this.legendSettings = new AmCharts.LegendSettings(a);\n        this.balloon =\n            new AmCharts.AmBalloon(a);\n        this.previousEndDate = new Date(0);\n        this.previousStartDate = new Date(0);\n        this.dataSetCount = this.graphCount = 0;\n        this.chartCreated = !1;\n        this.extendToFullPeriod = !0;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    write: function(a) {\n        var b = this.theme;\n        AmCharts.callInitHandler(this);\n        AmCharts.applyLang(this.language, this);\n        var c = this.exportConfig;\n        c && AmCharts.AmExport && !this.AmExport && (this.AmExport = new AmCharts.AmExport(this, c));\n        this.amExport && AmCharts.AmExport && (this.AmExport = AmCharts.extend(this.amExport,\n            new AmCharts.AmExport(this), !0));\n        this.AmExport && this.AmExport.init();\n        this.chartRendered = !1;\n        a = \"object\" != typeof a ? document.getElementById(a) : a;\n        this.zoomOutOnDataSetChange && (this.endDate = this.startDate = void 0);\n        this.categoryAxesSettings = AmCharts.processObject(this.categoryAxesSettings, AmCharts.CategoryAxesSettings, b);\n        this.valueAxesSettings = AmCharts.processObject(this.valueAxesSettings, AmCharts.ValueAxesSettings, b);\n        this.chartCursorSettings = AmCharts.processObject(this.chartCursorSettings, AmCharts.ChartCursorSettings,\n            b);\n        this.chartScrollbarSettings = AmCharts.processObject(this.chartScrollbarSettings, AmCharts.ChartScrollbarSettings, b);\n        this.legendSettings = AmCharts.processObject(this.legendSettings, AmCharts.LegendSettings, b);\n        this.panelsSettings = AmCharts.processObject(this.panelsSettings, AmCharts.PanelsSettings, b);\n        this.stockEventsSettings = AmCharts.processObject(this.stockEventsSettings, AmCharts.StockEventsSettings, b);\n        this.dataSetSelector && (this.dataSetSelector = AmCharts.processObject(this.dataSetSelector, AmCharts.DataSetSelector,\n            b));\n        this.periodSelector && (this.periodSelector = AmCharts.processObject(this.periodSelector, AmCharts.PeriodSelector, b));\n        a.innerHTML = \"\";\n        this.div = a;\n        this.measure();\n        this.createLayout();\n        this.updateDataSets();\n        this.addDataSetSelector();\n        this.addPeriodSelector();\n        this.addPanels();\n        this.updatePanels();\n        this.addChartScrollbar();\n        this.updateData();\n        this.skipDefault || this.setDefaultPeriod()\n    },\n    setDefaultPeriod: function(a) {\n        var b = this.periodSelector;\n        b && (this.animationPlayed = !1, b.setDefaultPeriod(a))\n    },\n    validateSize: function() {\n        var a,\n            b = this.panels;\n        this.measurePanels();\n        for (a = 0; a < b.length; a++) panel = b[a], panel.invalidateSize()\n    },\n    updateDataSets: function() {\n        var a = this.mainDataSet,\n            b = this.dataSets,\n            c;\n        for (c = 0; c < b.length; c++) {\n            var d = b[c],\n                d = AmCharts.processObject(d, AmCharts.DataSet);\n            b[c] = d;\n            d.id || (this.dataSetCount++, d.id = \"ds\" + this.dataSetCount);\n            void 0 === d.color && (d.color = this.colors.length - 1 > c ? this.colors[c] : AmCharts.randomColor())\n        }!a && AmCharts.ifArray(b) && (this.mainDataSet = this.dataSets[0])\n    },\n    updateEvents: function(a) {\n        AmCharts.ifArray(a.stockEvents) &&\n            AmCharts.parseEvents(a, this.panels, this.stockEventsSettings, this.firstDayOfWeek, this, this.dataDateFormat)\n    },\n    getLastDate: function(a) {\n        var b = this.dataDateFormat;\n        a = a instanceof Date ? new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : b ? AmCharts.stringToDate(a, b) : new Date(a);\n        return new Date(AmCharts.changeDate(a, this.categoryAxesSettings.minPeriod, 1, !0).getTime() - 1)\n    },\n    getFirstDate: function(a) {\n        var b = this.dataDateFormat;\n        a = a instanceof Date ? new Date(a.getFullYear(),\n            a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : b ? AmCharts.stringToDate(a, b) : new Date(a);\n        return new Date(AmCharts.resetDateToMin(a, this.categoryAxesSettings.minPeriod, 1, this.firstDayOfWeek))\n    },\n    updateData: function() {\n        var a = this.mainDataSet;\n        if (a) {\n            var b = this.categoryAxesSettings; - 1 == AmCharts.getItemIndex(b.minPeriod, b.groupToPeriods) && b.groupToPeriods.unshift(b.minPeriod);\n            var c = a.dataProvider;\n            if (AmCharts.ifArray(c)) {\n                var d = a.categoryField;\n                this.firstDate = this.getFirstDate(c[0][d]);\n                this.lastDate = this.getLastDate(c[c.length - 1][d]);\n                this.periodSelector && this.periodSelector.setRanges(this.firstDate, this.lastDate);\n                a.dataParsed || (AmCharts.parseStockData(a, b.minPeriod, b.groupToPeriods, this.firstDayOfWeek, this.dataDateFormat), a.dataParsed = !0);\n                this.updateComparingData();\n                this.updateEvents(a)\n            }\n            else this.lastDate = this.firstDate = void 0;\n            this.glueToTheEnd && this.startDate && this.endDate && this.lastDate && (AmCharts.getPeriodDuration(b.minPeriod), this.startDate = new Date(this.startDate.getTime() +\n                (this.lastDate.getTime() - this.endDate.getTime())), this.endDate = this.lastDate, this.updateScrollbar = !0);\n            this.updatePanelsWithNewData()\n        }\n        a = {\n            type: \"dataUpdated\",\n            chart: this\n        };\n        this.fire(a.type, a)\n    },\n    updateComparingData: function() {\n        var a = this.comparedDataSets,\n            b = this.categoryAxesSettings,\n            c;\n        for (c = 0; c < a.length; c++) {\n            var d = a[c];\n            d.dataParsed || (AmCharts.parseStockData(d, b.minPeriod, b.groupToPeriods, this.firstDayOfWeek, this.dataDateFormat), d.dataParsed = !0);\n            this.updateEvents(d)\n        }\n    },\n    createLayout: function() {\n        var a = this.div,\n            b, c, d = document.createElement(\"div\");\n        d.style.position = \"relative\";\n        this.containerDiv = d;\n        a.appendChild(d);\n        if (a = this.periodSelector) b = a.position;\n        if (a = this.dataSetSelector) c = a.position;\n        if (\"left\" == b || \"left\" == c) a = document.createElement(\"div\"), a.style.cssFloat = \"left\", a.style.styleFloat = \"left\", a.style.width = \"0px\", a.style.position = \"absolute\", d.appendChild(a), this.leftContainer = a;\n        if (\"right\" == b || \"right\" == c) b = document.createElement(\"div\"), b.style.cssFloat = \"right\", b.style.styleFloat = \"right\", b.style.width = \"0px\", d.appendChild(b),\n            this.rightContainer = b;\n        b = document.createElement(\"div\");\n        d.appendChild(b);\n        this.centerContainer = b;\n        d = document.createElement(\"div\");\n        b.appendChild(d);\n        this.panelsContainer = d\n    },\n    addPanels: function() {\n        this.measurePanels();\n        for (var a = this.panels, b = 0; b < a.length; b++) {\n            var c = a[b],\n                c = AmCharts.processObject(c, AmCharts.StockPanel, this.theme);\n            a[b] = c;\n            this.addStockPanel(c, b)\n        }\n        this.panelsAdded = !0\n    },\n    measurePanels: function() {\n        this.measure();\n        var a = this.chartScrollbarSettings,\n            b = this.divRealHeight,\n            c = this.panelsSettings.panelSpacing;\n        a.enabled && (b -= a.height);\n        (a = this.periodSelector) && !a.vertical && (a = a.offsetHeight, b -= a + c);\n        (a = this.dataSetSelector) && !a.vertical && (a = a.offsetHeight, b -= a + c);\n        a = this.panels;\n        this.panelsContainer.style.height = b + \"px\";\n        this.chartCursors = [];\n        var d = 0,\n            e, k;\n        for (e = 0; e < a.length; e++) {\n            k = a[e];\n            var f = k.percentHeight;\n            isNaN(f) && (f = 100 / a.length, k.percentHeight = f);\n            d += f\n        }\n        this.panelsHeight = Math.max(b - c * (a.length - 1), 0);\n        for (e = 0; e < a.length; e++) k = a[e], k.percentHeight = k.percentHeight / d * 100, k.panelBox && (k.panelBox.style.height = Math.round(k.percentHeight *\n            this.panelsHeight / 100) + \"px\")\n    },\n    addStockPanel: function(a, b) {\n        var c = this.panelsSettings,\n            d = document.createElement(\"div\");\n        d.className = \"amChartsPanel\";\n        0 < b && !this.panels[b - 1].showCategoryAxis && (d.style.marginTop = c.panelSpacing + \"px\");\n        a.panelBox = d;\n        a.stockChart = this;\n        a.id || (a.id = \"stockPanel\" + b);\n        a.pathToImages = this.pathToImages;\n        d.style.height = Math.round(a.percentHeight * this.panelsHeight / 100) + \"px\";\n        d.style.width = \"100%\";\n        this.panelsContainer.appendChild(d);\n        0 < c.backgroundAlpha && (d.style.backgroundColor = c.backgroundColor);\n        if (d = a.stockLegend) d.container = void 0, d.title = a.title, d.marginLeft = c.marginLeft, d.marginRight = c.marginRight, d.verticalGap = 3, d.position = \"top\", AmCharts.copyProperties(this.legendSettings, d), a.addLegend(d, d.divId);\n        a.zoomOutText = \"\";\n        this.addCursor(a)\n    },\n    enableCursors: function(a) {\n        var b = this.chartCursors,\n            c;\n        for (c = 0; c < b.length; c++) b[c].enabled = a\n    },\n    updatePanels: function() {\n        var a = this.panels,\n            b;\n        for (b = 0; b < a.length; b++) this.updatePanel(a[b]);\n        this.mainDataSet && this.updateGraphs();\n        this.currentPeriod = void 0\n    },\n    updatePanel: function(a) {\n        a.seriesIdField =\n            \"amCategoryIdField\";\n        a.dataProvider = [];\n        a.chartData = [];\n        a.graphs = [];\n        var b = a.categoryAxis,\n            c = this.categoryAxesSettings;\n        AmCharts.copyProperties(this.panelsSettings, a);\n        AmCharts.copyProperties(c, b);\n        b.parseDates = !0;\n        a.zoomOutOnDataUpdate = !1;\n        a.mouseWheelScrollEnabled = this.mouseWheelScrollEnabled;\n        a.dataDateFormat = this.dataDateFormat;\n        a.language = this.language;\n        a.showCategoryAxis ? \"top\" == b.position ? a.marginTop = c.axisHeight : a.marginBottom = c.axisHeight : (a.categoryAxis.labelsEnabled = !1, a.chartCursor && (a.chartCursor.categoryBalloonEnabled = !1));\n        var c = a.valueAxes,\n            d = c.length,\n            e;\n        0 === d && (e = new AmCharts.ValueAxis(this.theme), a.addValueAxis(e));\n        b = new AmCharts.AmBalloon(this.theme);\n        AmCharts.copyProperties(this.balloon, b);\n        a.balloon = b;\n        c = a.valueAxes;\n        d = c.length;\n        for (b = 0; b < d; b++) e = c[b], AmCharts.copyProperties(this.valueAxesSettings, e);\n        a.listenersAdded = !1;\n        a.write(a.panelBox)\n    },\n    zoom: function(a, b) {\n        this.zoomChart(a, b)\n    },\n    zoomOut: function() {\n        this.zoomChart(this.firstDate, this.lastDate)\n    },\n    updatePanelsWithNewData: function() {\n        var a = this.mainDataSet,\n            b = this.scrollbarChart;\n        if (a) {\n            var c = this.panels;\n            this.currentPeriod = void 0;\n            var d;\n            for (d = 0; d < c.length; d++) {\n                var e = c[d];\n                e.categoryField = a.categoryField;\n                0 === a.dataProvider.length && (e.dataProvider = []);\n                e.scrollbarChart = b\n            }\n            b && (c = this.categoryAxesSettings, d = c.minPeriod, b.categoryField = a.categoryField, 0 < a.dataProvider.length ? (e = this.chartScrollbarSettings.usePeriod, b.dataProvider = e ? a.agregatedDataProviders[e] : a.agregatedDataProviders[d]) : b.dataProvider = [], e = b.categoryAxis, e.minPeriod = d, e.firstDayOfWeek = this.firstDayOfWeek, e.equalSpacing =\n                c.equalSpacing, e.axisAlpha = 0, e.markPeriodChange = c.markPeriodChange, b.bbsetr = !0, b.validateData(), c = this.panelsSettings, b.maxSelectedTime = c.maxSelectedTime, b.minSelectedTime = c.minSelectedTime);\n            0 < a.dataProvider.length && this.zoomChart(this.startDate, this.endDate)\n        }\n        this.panelDataInvalidated = !1\n    },\n    addChartScrollbar: function() {\n        var a = this.chartScrollbarSettings,\n            b = this.scrollbarChart;\n        b && (b.clear(), b.destroy());\n        if (a.enabled) {\n            var c = this.panelsSettings,\n                d = this.categoryAxesSettings,\n                b = new AmCharts.AmSerialChart(this.theme);\n            b.language = this.language;\n            b.pathToImages = this.pathToImages;\n            b.autoMargins = !1;\n            this.scrollbarChart = b;\n            b.id = \"scrollbarChart\";\n            b.scrollbarOnly = !0;\n            b.zoomOutText = \"\";\n            b.panEventsEnabled = this.panelsSettings.panEventsEnabled;\n            b.marginLeft = c.marginLeft;\n            b.marginRight = c.marginRight;\n            b.marginTop = 0;\n            b.marginBottom = 0;\n            var c = d.dateFormats,\n                e = b.categoryAxis;\n            e.boldPeriodBeginning = d.boldPeriodBeginning;\n            c && (e.dateFormats = d.dateFormats);\n            e.labelsEnabled = !1;\n            e.parseDates = !0;\n            d = a.graph;\n            if (AmCharts.isString(d)) {\n                c = this.panels;\n                for (e = 0; e <\n                    c.length; e++) {\n                    var k = AmCharts.getObjById(c[e].stockGraphs, a.graph);\n                    k && (d = k)\n                }\n                a.graph = d\n            }\n            var f;\n            d && (f = new AmCharts.AmGraph(this.theme), f.valueField = d.valueField, f.periodValue = d.periodValue, f.type = d.type, f.connect = d.connect, f.minDistance = a.minDistance, b.addGraph(f));\n            d = new AmCharts.ChartScrollbar(this.theme);\n            b.addChartScrollbar(d);\n            AmCharts.copyProperties(a, d);\n            d.scrollbarHeight = a.height;\n            d.graph = f;\n            this.listenTo(d, \"zoomed\", this.handleScrollbarZoom);\n            f = document.createElement(\"div\");\n            f.style.height = a.height + \"px\";\n            d = this.periodSelectorContainer;\n            c = this.periodSelector;\n            e = this.centerContainer;\n            \"bottom\" == a.position ? c ? \"bottom\" == c.position ? e.insertBefore(f, d) : e.appendChild(f) : e.appendChild(f) : c ? \"top\" == c.position ? e.insertBefore(f, d.nextSibling) : e.insertBefore(f, e.firstChild) : e.insertBefore(f, e.firstChild);\n            b.write(f)\n        }\n    },\n    handleScrollbarZoom: function(a) {\n        if (this.skipScrollbarEvent) this.skipScrollbarEvent = !1;\n        else {\n            var b = a.endDate,\n                c = {};\n            c.startDate = a.startDate;\n            c.endDate = b;\n            this.updateScrollbar = !1;\n            this.handleZoom(c)\n        }\n    },\n    addPeriodSelector: function() {\n        var a =\n            this.periodSelector;\n        if (a) {\n            var b = this.categoryAxesSettings.minPeriod;\n            a.minDuration = AmCharts.getPeriodDuration(b);\n            a.minPeriod = b;\n            a.chart = this;\n            var c = this.dataSetSelector,\n                d, b = this.dssContainer;\n            c && (d = c.position);\n            var c = this.panelsSettings.panelSpacing,\n                e = document.createElement(\"div\");\n            this.periodSelectorContainer = e;\n            var k = this.leftContainer,\n                f = this.rightContainer,\n                h = this.centerContainer,\n                g = this.panelsContainer,\n                n = a.width + 2 * c + \"px\";\n            switch (a.position) {\n                case \"left\":\n                    k.style.width = a.width + \"px\";\n                    k.appendChild(e);\n                    h.style.paddingLeft =\n                        n;\n                    break;\n                case \"right\":\n                    h.style.marginRight = n;\n                    f.appendChild(e);\n                    f.style.width = a.width + \"px\";\n                    break;\n                case \"top\":\n                    g.style.clear = \"both\";\n                    h.insertBefore(e, g);\n                    e.style.paddingBottom = c + \"px\";\n                    e.style.overflow = \"hidden\";\n                    break;\n                case \"bottom\":\n                    e.style.marginTop = c + \"px\", \"bottom\" == d ? h.insertBefore(e, b) : h.appendChild(e)\n            }\n            this.listenTo(a, \"changed\", this.handlePeriodSelectorZoom);\n            a.write(e)\n        }\n    },\n    addDataSetSelector: function() {\n        var a = this.dataSetSelector;\n        if (a) {\n            a.chart = this;\n            a.dataProvider = this.dataSets;\n            var b = a.position,\n                c = this.panelsSettings.panelSpacing,\n                d = document.createElement(\"div\");\n            this.dssContainer = d;\n            var e = this.leftContainer,\n                k = this.rightContainer,\n                f = this.centerContainer,\n                h = this.panelsContainer,\n                c = a.width + 2 * c + \"px\";\n            switch (b) {\n                case \"left\":\n                    e.style.width = a.width + \"px\";\n                    e.appendChild(d);\n                    f.style.paddingLeft = c;\n                    break;\n                case \"right\":\n                    f.style.marginRight = c;\n                    k.appendChild(d);\n                    k.style.width = a.width + \"px\";\n                    break;\n                case \"top\":\n                    h.style.clear = \"both\";\n                    f.insertBefore(d, h);\n                    d.style.overflow = \"hidden\";\n                    break;\n                case \"bottom\":\n                    f.appendChild(d)\n            }\n            a.write(d)\n        }\n    },\n    handlePeriodSelectorZoom: function(a) {\n        var b =\n            this.scrollbarChart;\n        b && (b.updateScrollbar = !0);\n        a.predefinedPeriod ? (this.predefinedStart = a.startDate, this.predefinedEnd = a.endDate) : this.predefinedEnd = this.predefinedStart = null;\n        this.zoomChart(a.startDate, a.endDate)\n    },\n    addCursor: function(a) {\n        var b = this.chartCursorSettings;\n        if (b.enabled) {\n            var c = new AmCharts.ChartCursor(this.theme);\n            AmCharts.copyProperties(b, c);\n            a.chartCursor && AmCharts.copyProperties(a.chartCursor, c);\n            a.removeChartCursor();\n            a.addChartCursor(c);\n            this.listenTo(c, \"changed\", this.handleCursorChange);\n            this.listenTo(c, \"onHideCursor\", this.hideChartCursor);\n            this.listenTo(c, \"zoomed\", this.handleCursorZoom);\n            this.chartCursors.push(c)\n        }\n    },\n    hideChartCursor: function() {\n        var a = this.chartCursors,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b];\n            c.hideCursor(!1);\n            (c = c.chart) && c.updateLegendValues()\n        }\n    },\n    handleCursorZoom: function(a) {\n        var b = this.scrollbarChart;\n        b && (b.updateScrollbar = !0);\n        var b = {},\n            c;\n        if (this.categoryAxesSettings.equalSpacing) {\n            var d = this.mainDataSet.categoryField,\n                e = this.mainDataSet.agregatedDataProviders[this.currentPeriod];\n            c = new Date(e[a.start][d]);\n            a = new Date(e[a.end][d])\n        }\n        else c = new Date(a.start), a = new Date(a.end);\n        b.startDate = c;\n        b.endDate = a;\n        this.handleZoom(b)\n    },\n    handleZoom: function(a) {\n        this.zoomChart(a.startDate, a.endDate)\n    },\n    zoomChart: function(a, b) {\n        var c = new Date(a),\n            d = this,\n            e = d.firstDate,\n            k = d.lastDate,\n            f = d.currentPeriod,\n            h = d.categoryAxesSettings,\n            g = h.minPeriod,\n            n = d.panelsSettings,\n            m = d.periodSelector,\n            t = d.panels,\n            r = d.comparedGraphs,\n            v = d.scrollbarChart,\n            w = d.firstDayOfWeek;\n        if (e && k) {\n            a || (a = e);\n            b || (b = k);\n            if (f) {\n                var l = AmCharts.extractPeriod(f);\n                a.getTime() == b.getTime() && l != g && (b = AmCharts.changeDate(b, l.period, l.count), b.setTime(b.getTime() - 1))\n            }\n            a.getTime() < e.getTime() && (a = e);\n            a.getTime() > k.getTime() && (a = k);\n            b.getTime() < e.getTime() && (b = e);\n            b.getTime() > k.getTime() && (b = k);\n            l = AmCharts.getItemIndex(g, h.groupToPeriods);\n            h = f;\n            f = d.choosePeriod(l, a, b);\n            d.currentPeriod = f;\n            var l = AmCharts.extractPeriod(f),\n                y = AmCharts.getPeriodDuration(l.period, l.count);\n            AmCharts.getPeriodDuration(g);\n            1 > b.getTime() - a.getTime() && (a = new Date(b.getTime() - 1));\n            g = AmCharts.newDate(a);\n            d.extendToFullPeriod && (g.getTime() - e.getTime() < .1 * y && (g = AmCharts.resetDateToMin(a, l.period, l.count, w)), k.getTime() - b.getTime() < .1 * y && (b = AmCharts.resetDateToMin(k, l.period, l.count, w), b = AmCharts.changeDate(b, l.period, l.count, !0)));\n            for (e = 0; e < t.length; e++) k = t[e], k.chartCursor && k.chartCursor.panning && (g = c);\n            for (e = 0; e < t.length; e++) {\n                k = t[e];\n                if (f != h) {\n                    for (c = 0; c < r.length; c++) y = r[c].graph, y.dataProvider = y.dataSet.agregatedDataProviders[f];\n                    c = k.categoryAxis;\n                    c.firstDayOfWeek = w;\n                    c.minPeriod = f;\n                    k.dataProvider = d.mainDataSet.agregatedDataProviders[f];\n                    if (c = k.chartCursor) c.categoryBalloonDateFormat = d.chartCursorSettings.categoryBalloonDateFormat(l.period), k.showCategoryAxis || (c.categoryBalloonEnabled = !1);\n                    k.startTime = g.getTime();\n                    k.endTime = b.getTime();\n                    k.validateData(!0)\n                }\n                c = !1;\n                k.chartCursor && k.chartCursor.panning && (c = !0);\n                c || (k.startTime = void 0, k.endTime = void 0, k.zoomToDates(g, b));\n                0 < n.startDuration && d.animationPlayed && !c ? (k.startDuration = 0, k.animateAgain()) : 0 < n.startDuration && !c && k.animateAgain()\n            }\n            d.animationPlayed = !0;\n            AmCharts.extractPeriod(f);\n            n = new Date(b);\n            v && d.updateScrollbar && (v.zoomToDates(a, n), d.skipScrollbarEvent = !0, setTimeout(function() {\n                d.resetSkip.call(d)\n            }, 100));\n            d.updateScrollbar = !0;\n            d.startDate = a;\n            d.endDate = b;\n            m && m.zoom(a, b);\n            if (a.getTime() != d.previousStartDate.getTime() || b.getTime() != d.previousEndDate.getTime()) m = {\n                type: \"zoomed\"\n            }, m.startDate = a, m.endDate = b, m.chart = d, m.period = f, d.fire(m.type, m), d.previousStartDate = new Date(a), d.previousEndDate = new Date(b)\n        }\n        d.eventsHidden && d.showHideEvents(!1);\n        d.chartCreated || (f = \"init\", d.fire(f, {\n            type: f,\n            chart: d\n        }));\n        d.chartRendered ||\n            (f = \"rendered\", d.fire(f, {\n                type: f,\n                chart: d\n            }), d.chartRendered = !0);\n        f = \"drawn\";\n        d.fire(f, {\n            type: f,\n            chart: d\n        });\n        d.chartCreated = !0;\n        d.animationPlayed = !0\n    },\n    resetSkip: function() {\n        this.skipScrollbarEvent = !1\n    },\n    updateGraphs: function() {\n        this.getSelections();\n        if (0 < this.dataSets.length) {\n            var a = this.panels;\n            this.comparedGraphs = [];\n            var b;\n            for (b = 0; b < a.length; b++) {\n                var c = a[b],\n                    d = c.valueAxes,\n                    e;\n                for (e = 0; e < d.length; e++) {\n                    var k = d[e];\n                    k.prevLog && (k.logarithmic = k.prevLog);\n                    k.recalculateToPercents = \"always\" == c.recalculateToPercents ? !0 : !1\n                }\n                d = this.mainDataSet;\n                e = this.comparedDataSets;\n                k = c.stockGraphs;\n                c.graphs = [];\n                var f;\n                for (f = 0; f < k.length; f++) {\n                    var h = k[f],\n                        h = AmCharts.processObject(h, AmCharts.StockGraph, this.theme);\n                    k[f] = h;\n                    if (!h.title || h.resetTitleOnDataSetChange) h.title = d.title, h.resetTitleOnDataSetChange = !0;\n                    h.useDataSetColors && (h.lineColor = d.color, h.fillColors = void 0, h.bulletColor = void 0);\n                    var g = !1,\n                        n = d.fieldMappings,\n                        m;\n                    for (m = 0; m < n.length; m++) {\n                        var t = n[m],\n                            r = h.valueField;\n                        r && t.toField == r && (g = !0);\n                        (r = h.openField) && t.toField == r && (g = !0);\n                        (r = h.closeField) && t.toField == r &&\n                            (g = !0);\n                        (r = h.lowField) && t.toField == r && (g = !0)\n                    }\n                    g && c.addGraph(h);\n                    r = !1;\n                    \"always\" == c.recalculateToPercents && (r = !0);\n                    var v = c.stockLegend,\n                        w, l, y, z;\n                    v && (v = AmCharts.processObject(v, AmCharts.StockLegend, this.theme), c.stockLegend = v, w = v.valueTextComparing, l = v.valueTextRegular, y = v.periodValueTextComparing, z = v.periodValueTextRegular);\n                    if (h.comparable) {\n                        var x = e.length;\n                        0 < x && h.valueAxis.logarithmic && \"never\" != c.recalculateToPercents && (h.valueAxis.logarithmic = !1, h.valueAxis.prevLog = !0);\n                        0 < x && \"whenComparing\" == c.recalculateToPercents &&\n                            (h.valueAxis.recalculateToPercents = !0);\n                        v && h.valueAxis && !0 === h.valueAxis.recalculateToPercents && (r = !0);\n                        var B;\n                        for (B = 0; B < x; B++) {\n                            var A = e[B],\n                                q = h.comparedGraphs[A.id];\n                            q || (q = new AmCharts.AmGraph(this.theme), q.id = \"comparedGraph\" + B + \"_\" + f + A.id);\n                            q.periodValue = h.periodValue;\n                            q.dataSet = A;\n                            q.behindColumns = h.behindColumns;\n                            h.comparedGraphs[A.id] = q;\n                            q.seriesIdField = \"amCategoryIdField\";\n                            q.connect = h.connect;\n                            var s = h.compareField;\n                            s || (s = h.valueField);\n                            g = !1;\n                            n = A.fieldMappings;\n                            m;\n                            for (m = 0; m < n.length; m++) t = n[m], t.toField == s && (g = !0);\n                            if (g) {\n                                q.valueField = s;\n                                q.title = A.title;\n                                q.lineColor = A.color;\n                                h.compareGraphType && (q.type = h.compareGraphType);\n                                g = h.compareGraphLineThickness;\n                                isNaN(g) || (q.lineThickness = g);\n                                g = h.compareGraphDashLength;\n                                isNaN(g) || (q.dashLength = g);\n                                g = h.compareGraphLineAlpha;\n                                isNaN(g) || (q.lineAlpha = g);\n                                g = h.compareGraphCornerRadiusTop;\n                                isNaN(g) || (q.cornerRadiusTop = g);\n                                g = h.compareGraphCornerRadiusBottom;\n                                isNaN(g) || (q.cornerRadiusBottom = g);\n                                g = h.compareGraphBalloonColor;\n                                isNaN(g) || (q.balloonColor = g);\n                                g = h.compareGraphBulletColor;\n                                isNaN(g) ||\n                                    (q.bulletColor = g);\n                                if (g = h.compareGraphFillColors) q.fillColors = g;\n                                if (g = h.compareGraphNegativeFillColors) q.negativeFillColors = g;\n                                if (g = h.compareGraphFillAlphas) q.fillAlphas = g;\n                                if (g = h.compareGraphNegativeFillAlphas) q.negativeFillAlphas = g;\n                                if (g = h.compareGraphBullet) q.bullet = g;\n                                if (g = h.compareGraphNumberFormatter) q.numberFormatter = g;\n                                g = h.compareGraphPrecision;\n                                isNaN(g) || (q.precision = g);\n                                if (g = h.compareGraphBalloonText) q.balloonText = g;\n                                g = h.compareGraphBulletSize;\n                                isNaN(g) || (q.bulletSize = g);\n                                g = h.compareGraphBulletAlpha;\n                                isNaN(g) || (q.bulletAlpha = g);\n                                g = h.compareGraphBulletBorderAlpha;\n                                isNaN(g) || (q.bulletBorderAlpha = g);\n                                if (g = h.compareGraphBulletBorderColor) q.bulletBorderColor = g;\n                                g = h.compareGraphBulletBorderThickness;\n                                isNaN(g) || (q.bulletBorderThickness = g);\n                                q.visibleInLegend = h.compareGraphVisibleInLegend;\n                                q.balloonFunction = h.compareGraphBalloonFunction;\n                                q.hideBulletsCount = h.hideBulletsCount;\n                                q.valueAxis = h.valueAxis;\n                                v && (r && w ? (q.legendValueText = w, q.legendPeriodValueText = y) : (l && (q.legendValueText = l), q.legendPeriodValueText = z));\n                                c.showComparedOnTop ?\n                                    c.graphs.push(q) : c.graphs.unshift(q);\n                                this.comparedGraphs.push({\n                                    graph: q,\n                                    dataSet: A\n                                })\n                            }\n                        }\n                    }\n                    v && (r && w ? (h.legendValueText = w, h.legendPeriodValueText = y) : (l && (h.legendValueText = l), h.legendPeriodValueText = z))\n                }\n            }\n        }\n    },\n    choosePeriod: function(a, b, c) {\n        var d = this.categoryAxesSettings,\n            e = d.groupToPeriods,\n            k = e[a],\n            e = e[a + 1],\n            f = AmCharts.extractPeriod(k),\n            f = AmCharts.getPeriodDuration(f.period, f.count),\n            h = b.getTime(),\n            g = c.getTime(),\n            d = d.maxSeries;\n        return (g - h) / f > d && 0 < d && e ? this.choosePeriod(a + 1, b, c) : k\n    },\n    handleCursorChange: function(a) {\n        var b =\n            a.target,\n            c = a.position,\n            d = a.zooming;\n        a = a.index;\n        var e = this.chartCursors,\n            k;\n        for (k = 0; k < e.length; k++) {\n            var f = e[k];\n            f != b && c && (f.isZooming(d), f.previousMousePosition = NaN, f.forceShow = !0, f.initialMouse = b.initialMouse, f.selectionPosX = b.selectionPosX, f.setPosition(c, !1, a))\n        }\n    },\n    getSelections: function() {\n        var a = [],\n            b = this.dataSets,\n            c;\n        for (c = 0; c < b.length; c++) {\n            var d = b[c];\n            d.compared && a.push(d)\n        }\n        this.comparedDataSets = a;\n        b = this.panels;\n        for (c = 0; c < b.length; c++) d = b[c], \"never\" != d.recalculateToPercents && 0 < a.length ? d.hideDrawingIcons(!0) :\n            d.drawingIconsEnabled && d.hideDrawingIcons(!1)\n    },\n    addPanel: function(a) {\n        this.panels.push(a);\n        AmCharts.removeChart(a);\n        AmCharts.addChart(a)\n    },\n    addPanelAt: function(a, b) {\n        this.panels.splice(b, 0, a);\n        AmCharts.removeChart(a);\n        AmCharts.addChart(a)\n    },\n    removePanel: function(a) {\n        var b = this.panels,\n            c;\n        for (c = b.length - 1; 0 <= c; c--)\n            if (b[c] == a) {\n                var d = {\n                    type: \"panelRemoved\",\n                    panel: a,\n                    chart: this\n                };\n                this.fire(d.type, d);\n                b.splice(c, 1);\n                a.destroy();\n                a.clear()\n            }\n    },\n    validateData: function() {\n        this.resetDataParsed();\n        this.updateDataSets();\n        this.mainDataSet.compared = !1;\n        this.updateGraphs();\n        this.updateData();\n        var a = this.dataSetSelector;\n        a && a.write(a.div)\n    },\n    resetDataParsed: function() {\n        var a = this.dataSets,\n            b;\n        for (b = 0; b < a.length; b++) a[b].dataParsed = !1\n    },\n    validateNow: function() {\n        this.skipDefault = !0;\n        this.chartRendered = !1;\n        this.clear(!0);\n        this.write(this.div)\n    },\n    hideStockEvents: function() {\n        this.showHideEvents(!1);\n        this.eventsHidden = !0\n    },\n    showStockEvents: function() {\n        this.showHideEvents(!0);\n        this.eventsHidden = !1\n    },\n    showHideEvents: function(a) {\n        var b = this.panels,\n            c;\n        for (c = 0; c < b.length; c++) {\n            var d =\n                b[c].graphs,\n                e;\n            for (e = 0; e < d.length; e++) {\n                var k = d[e];\n                !0 === a ? k.showBullets() : k.hideBullets()\n            }\n        }\n    },\n    invalidateSize: function() {\n        var a = this;\n        clearTimeout(a.validateTO);\n        var b = setTimeout(function() {\n            a.validateNow()\n        }, 5);\n        a.validateTO = b\n    },\n    measure: function() {\n        var a = this.div,\n            b = a.offsetWidth,\n            c = a.offsetHeight;\n        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);\n        this.divRealWidth = b;\n        this.divRealHeight = c\n    },\n    clear: function(a) {\n        var b = this.panels,\n            c;\n        if (b)\n            for (c = 0; c < b.length; c++) {\n                var d = b[c];\n                a || (d.cleanChart(), d.destroy());\n                d.clear(a)\n            }(b =\n                this.scrollbarChart) && b.clear();\n        if (b = this.div) b.innerHTML = \"\";\n        a || (this.div = null, AmCharts.deleteObject(this))\n    }\n});\nAmCharts.StockEvent = AmCharts.Class({\n    construct: function() {}\n});\nAmCharts.DataSet = AmCharts.Class({\n    construct: function() {\n        this.cname = \"DataSet\";\n        this.fieldMappings = [];\n        this.dataProvider = [];\n        this.agregatedDataProviders = [];\n        this.stockEvents = [];\n        this.compared = !1;\n        this.showInCompare = this.showInSelect = !0\n    }\n});\nAmCharts.PeriodSelector = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"PeriodSelector\";\n        this.theme = a;\n        this.createEvents(\"changed\");\n        this.inputFieldsEnabled = !0;\n        this.position = \"bottom\";\n        this.width = 180;\n        this.fromText = \"From: \";\n        this.toText = \"to: \";\n        this.periodsText = \"Zoom: \";\n        this.periods = [];\n        this.inputFieldWidth = 100;\n        this.dateFormat = \"DD-MM-YYYY\";\n        this.hideOutOfScopePeriods = !0;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    zoom: function(a, b) {\n        var c = this.chart;\n        this.inputFieldsEnabled && (this.startDateField.value = AmCharts.formatDate(a,\n            this.dateFormat, c), this.endDateField.value = AmCharts.formatDate(b, this.dateFormat, c));\n        this.markButtonAsSelected()\n    },\n    write: function(a) {\n        var b = this;\n        a.className = \"amChartsPeriodSelector\";\n        var c = b.width,\n            d = b.position;\n        b.width = void 0;\n        b.position = void 0;\n        AmCharts.applyStyles(a.style, b);\n        b.width = c;\n        b.position = d;\n        b.div = a;\n        a.innerHTML = \"\";\n        c = b.theme;\n        d = b.position;\n        d = \"top\" == d || \"bottom\" == d ? !1 : !0;\n        b.vertical = d;\n        var e = 0,\n            k = 0;\n        if (b.inputFieldsEnabled) {\n            var f = document.createElement(\"div\");\n            a.appendChild(f);\n            var h = document.createTextNode(AmCharts.lang.fromText ||\n                b.fromText);\n            f.appendChild(h);\n            d ? AmCharts.addBr(f) : (f.style.styleFloat = \"left\", f.style.display = \"inline\");\n            var g = document.createElement(\"input\");\n            g.className = \"amChartsInputField\";\n            c && AmCharts.applyStyles(g.style, c.PeriodInputField);\n            g.style.textAlign = \"center\";\n            g.onblur = function(a) {\n                b.handleCalChange(a)\n            };\n            AmCharts.isNN && g.addEventListener(\"keypress\", function(a) {\n                b.handleCalendarChange.call(b, a)\n            }, !0);\n            AmCharts.isIE && g.attachEvent(\"onkeypress\", function(a) {\n                b.handleCalendarChange.call(b, a)\n            });\n            f.appendChild(g);\n            b.startDateField =\n                g;\n            if (d) h = b.width - 6 + \"px\", AmCharts.addBr(f);\n            else {\n                var h = b.inputFieldWidth + \"px\",\n                    n = document.createTextNode(\" \");\n                f.appendChild(n)\n            }\n            g.style.width = h;\n            g = document.createTextNode(AmCharts.lang.toText || b.toText);\n            f.appendChild(g);\n            d && AmCharts.addBr(f);\n            g = document.createElement(\"input\");\n            g.className = \"amChartsInputField\";\n            c && AmCharts.applyStyles(g.style, c.PeriodInputField);\n            g.style.textAlign = \"center\";\n            g.onblur = function() {\n                b.handleCalChange()\n            };\n            AmCharts.isNN && g.addEventListener(\"keypress\", function(a) {\n                b.handleCalendarChange.call(b,\n                    a)\n            }, !0);\n            AmCharts.isIE && g.attachEvent(\"onkeypress\", function(a) {\n                b.handleCalendarChange.call(b, a)\n            });\n            f.appendChild(g);\n            b.endDateField = g;\n            d ? AmCharts.addBr(f) : e = g.offsetHeight + 2;\n            h && (g.style.width = h)\n        }\n        f = b.periods;\n        if (AmCharts.ifArray(f)) {\n            h = document.createElement(\"div\");\n            d || (h.style.cssFloat = \"right\", h.style.styleFloat = \"right\", h.style.display = \"inline\");\n            a.appendChild(h);\n            d && AmCharts.addBr(h);\n            a = document.createTextNode(AmCharts.lang.periodsText || b.periodsText);\n            h.appendChild(a);\n            b.periodContainer = h;\n            var m;\n            for (a = 0; a < f.length; a++) g =\n                f[a], m = document.createElement(\"input\"), m.type = \"button\", m.value = g.label, m.period = g.period, m.count = g.count, m.periodObj = g, m.className = \"amChartsButton\", c && AmCharts.applyStyles(m.style, c.PeriodButton), d && (m.style.width = b.width - 1 + \"px\"), m.style.boxSizing = \"border-box\", h.appendChild(m), b.addEventListeners(m), g.button = m;\n            !d && m && (k = m.offsetHeight);\n            b.offsetHeight = Math.max(e, k)\n        }\n    },\n    addEventListeners: function(a) {\n        var b = this;\n        AmCharts.isNN && a.addEventListener(\"click\", function(a) {\n            b.handlePeriodChange.call(b, a)\n        }, !0);\n        AmCharts.isIE &&\n            a.attachEvent(\"onclick\", function(a) {\n                b.handlePeriodChange.call(b, a)\n            })\n    },\n    getPeriodDates: function() {\n        var a = this.periods,\n            b;\n        for (b = 0; b < a.length; b++) this.selectPeriodButton(a[b], !0)\n    },\n    handleCalendarChange: function(a) {\n        13 == a.keyCode && this.handleCalChange(a)\n    },\n    handleCalChange: function(a) {\n        var b = this.dateFormat,\n            c = AmCharts.stringToDate(this.startDateField.value, b),\n            b = this.chart.getLastDate(AmCharts.stringToDate(this.endDateField.value, b));\n        try {\n            this.startDateField.blur(), this.endDateField.blur()\n        }\n        catch (d) {}\n        if (c && b) {\n            var e = {\n                type: \"changed\"\n            };\n            e.startDate = c;\n            e.endDate = b;\n            e.chart = this.chart;\n            e.event = a;\n            this.fire(e.type, e)\n        }\n    },\n    handlePeriodChange: function(a) {\n        this.selectPeriodButton((a.srcElement ? a.srcElement : a.target).periodObj, !1, a)\n    },\n    setRanges: function(a, b) {\n        this.firstDate = a;\n        this.lastDate = b;\n        this.getPeriodDates()\n    },\n    selectPeriodButton: function(a, b, c) {\n        var d = a.button,\n            e = d.count,\n            k = d.period,\n            f, h, g = this.firstDate,\n            n = this.lastDate,\n            m, t = this.theme;\n        g && n && (\"MAX\" == k ? (f = g, h = n) : \"YTD\" == k ? (f = new Date, f.setMonth(0, 1), f.setHours(0, 0, 0, 0), 0 === e && f.setDate(f.getDate() -\n            1), h = this.lastDate) : \"YYYY\" == k || \"MM\" == k ? this.selectFromStart ? (f = g, h = new Date(g), h.setMonth(h.getMonth() + e)) : (f = new Date(n), AmCharts.changeDate(f, k, e, !1), f.setDate(f.getDate() - 1), h = n) : (m = AmCharts.getPeriodDuration(k, e), this.selectFromStart ? (f = g, h = new Date(g.getTime() + m - 1)) : (f = new Date(n.getTime() - m + 1), h = n)), a.startTime = f.getTime(), this.hideOutOfScopePeriods && (b && a.startTime < g.getTime() ? d.style.display = \"none\" : d.style.display = \"inline\"), f.getTime() > n.getTime() && (m = AmCharts.getPeriodDuration(\"DD\", 1), f =\n            new Date(n.getTime() - m)), f.getTime() < g.getTime() && (f = g), \"YTD\" == k && (a.startTime = f.getTime()), a.endTime = h.getTime(), b || (this.skipMark = !0, this.unselectButtons(), d.className = \"amChartsButtonSelected\", t && AmCharts.applyStyles(d.style, t.PeriodButtonSelected), a = {\n            type: \"changed\"\n        }, a.startDate = f, a.endDate = h, a.predefinedPeriod = k, a.chart = this.chart, a.count = e, a.event = c, this.fire(a.type, a)))\n    },\n    markButtonAsSelected: function() {\n        if (!this.skipMark) {\n            var a = this.chart,\n                b = this.periods,\n                c = a.startDate.getTime(),\n                a = a.endDate.getTime(),\n                d = this.lastDate.getTime();\n            a > d && (a = d);\n            d = this.theme;\n            this.unselectButtons();\n            var e;\n            for (e = b.length - 1; 0 <= e; e--) {\n                var k = b[e],\n                    f = k.button;\n                k.startTime && k.endTime && c == k.startTime && a == k.endTime && (this.unselectButtons(), f.className = \"amChartsButtonSelected\", d && AmCharts.applyStyles(f.style, d.PeriodButtonSelected))\n            }\n        }\n        this.skipMark = !1\n    },\n    unselectButtons: function() {\n        var a = this.periods,\n            b, c = this.theme;\n        for (b = a.length - 1; 0 <= b; b--) {\n            var d = a[b].button;\n            d.className = \"amChartsButton\";\n            c && AmCharts.applyStyles(d.style, c.PeriodButton)\n        }\n    },\n    setDefaultPeriod: function() {\n        var a = this.periods,\n            b;\n        for (b = 0; b < a.length; b++) {\n            var c = a[b];\n            c.selected && this.selectPeriodButton(c)\n        }\n    }\n});\nAmCharts.StockGraph = AmCharts.Class({\n    inherits: AmCharts.AmGraph,\n    construct: function(a) {\n        AmCharts.StockGraph.base.construct.call(this, a);\n        this.cname = \"StockGraph\";\n        this.useDataSetColors = !0;\n        this.periodValue = \"Close\";\n        this.compareGraphType = \"line\";\n        this.compareGraphVisibleInLegend = !0;\n        this.comparable = this.resetTitleOnDataSetChange = !1;\n        this.comparedGraphs = {};\n        this.showEventsOnComparedGraphs = !1;\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.StockPanel = AmCharts.Class({\n    inherits: AmCharts.AmSerialChart,\n    construct: function(a) {\n        AmCharts.StockPanel.base.construct.call(this, a);\n        this.cname = \"StockPanel\";\n        this.theme = a;\n        this.showCategoryAxis = this.showComparedOnTop = !0;\n        this.recalculateToPercents = \"whenComparing\";\n        this.panelHeaderPaddingBottom = this.panelHeaderPaddingLeft = this.panelHeaderPaddingRight = this.panelHeaderPaddingTop = 0;\n        this.trendLineAlpha = 1;\n        this.trendLineColor = \"#00CC00\";\n        this.trendLineColorHover = \"#CC0000\";\n        this.trendLineThickness = 2;\n        this.trendLineDashLength =\n            0;\n        this.stockGraphs = [];\n        this.drawingIconsEnabled = !1;\n        this.iconSize = 18;\n        this.autoMargins = this.allowTurningOff = this.eraseAll = this.erasingEnabled = this.drawingEnabled = !1;\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    initChart: function(a) {\n        AmCharts.StockPanel.base.initChart.call(this, a);\n        this.drawingIconsEnabled && this.createDrawIcons();\n        (a = this.chartCursor) && this.listenTo(a, \"draw\", this.handleDraw)\n    },\n    addStockGraph: function(a) {\n        this.stockGraphs.push(a);\n        return a\n    },\n    handleCursorZoom: function(a) {\n        this.chartCursor && this.chartCursor.pan &&\n            AmCharts.StockPanel.base.handleCursorZoom.call(this, a)\n    },\n    removeStockGraph: function(a) {\n        var b = this.stockGraphs,\n            c;\n        for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1)\n    },\n    createDrawIcons: function() {\n        var a = this,\n            b = a.iconSize,\n            c = a.container,\n            d = a.pathToImages,\n            e = a.realWidth - 2 * b - 1 - a.marginRight,\n            k = AmCharts.rect(c, b, b, \"#000\", .005),\n            f = AmCharts.rect(c, b, b, \"#000\", .005);\n        f.translate(b + 1, 0);\n        var h = c.image(d + \"pencilIcon.gif\", 0, 0, b, b);\n        a.pencilButton = h;\n        f.setAttr(\"cursor\", \"pointer\");\n        k.setAttr(\"cursor\", \"pointer\");\n        k.mouseup(function() {\n            a.handlePencilClick()\n        });\n        var g = c.image(d + \"pencilIconH.gif\", 0, 0, b, b);\n        a.pencilButtonPushed = g;\n        a.drawingEnabled || g.hide();\n        var n = c.image(d + \"eraserIcon.gif\", b + 1, 0, b, b);\n        a.eraserButton = n;\n        f.mouseup(function() {\n            a.handleEraserClick()\n        });\n        k.touchend && (k.touchend(function() {\n            a.handlePencilClick()\n        }), f.touchend(function() {\n            a.handleEraserClick()\n        }));\n        b = c.image(d + \"eraserIconH.gif\", b + 1, 0, b, b);\n        a.eraserButtonPushed = b;\n        a.erasingEnabled || b.hide();\n        c = c.set([h, g, n, b, k, f]);\n        c.translate(e, 1);\n        this.hideIcons && c.hide()\n    },\n    handlePencilClick: function() {\n        var a = !this.drawingEnabled;\n        this.disableDrawing(!a);\n        this.erasingEnabled = !1;\n        var b = this.eraserButtonPushed;\n        b && b.hide();\n        b = this.pencilButtonPushed;\n        a ? b && b.show() : (b && b.hide(), this.setMouseCursor(\"auto\"))\n    },\n    disableDrawing: function(a) {\n        this.drawingEnabled = !a;\n        var b = this.chartCursor;\n        this.stockChart.enableCursors(a);\n        b && b.enableDrawing(!a)\n    },\n    handleEraserClick: function() {\n        this.disableDrawing(!0);\n        var a = this.pencilButtonPushed;\n        a && a.hide();\n        a = this.eraserButtonPushed;\n        if (this.eraseAll) {\n            var a = this.trendLines,\n                b;\n            for (b = a.length - 1; 0 <= b; b--) {\n                var c = a[b];\n                c.isProtected || this.removeTrendLine(c)\n            }\n            this.validateNow()\n        }\n        else(this.erasingEnabled = b = !this.erasingEnabled) ? (a && a.show(), this.setTrendColorHover(this.trendLineColorHover), this.setMouseCursor(\"auto\")) : (a && a.hide(), this.setTrendColorHover())\n    },\n    setTrendColorHover: function(a) {\n        var b = this.trendLines,\n            c;\n        for (c = b.length - 1; 0 <= c; c--) {\n            var d = b[c];\n            d.isProtected || (d.rollOverColor = a)\n        }\n    },\n    handleDraw: function(a) {\n        var b = this.drawOnAxis;\n        AmCharts.isString(b) && (b = this.getValueAxisById(b));\n        b || (b = this.valueAxes[0]);\n        this.drawOnAxis =\n            b;\n        var c = this.categoryAxis,\n            d = a.initialX,\n            e = a.finalX,\n            k = a.initialY;\n        a = a.finalY;\n        var f = new AmCharts.TrendLine(this.theme);\n        f.initialDate = c.coordinateToDate(d);\n        f.finalDate = c.coordinateToDate(e);\n        f.initialValue = b.coordinateToValue(k);\n        f.finalValue = b.coordinateToValue(a);\n        f.lineAlpha = this.trendLineAlpha;\n        f.lineColor = this.trendLineColor;\n        f.lineThickness = this.trendLineThickness;\n        f.dashLength = this.trendLineDashLength;\n        f.valueAxis = b;\n        f.categoryAxis = c;\n        this.addTrendLine(f);\n        this.listenTo(f, \"click\", this.handleTrendClick);\n        this.validateNow()\n    },\n    hideDrawingIcons: function(a) {\n        (this.hideIcons = a) && this.disableDrawing(a)\n    },\n    handleTrendClick: function(a) {\n        this.erasingEnabled && (a = a.trendLine, this.eraseAll || a.isProtected || this.removeTrendLine(a), this.validateNow())\n    },\n    handleWheelReal: function(a, b) {\n        var c = this.scrollbarChart;\n        if (!this.wheelBusy && c) {\n            var d = 1;\n            b && (d = -1);\n            var c = c.chartScrollbar,\n                e = this.categoryAxis.minDuration();\n            0 > a ? (d = this.startTime + d * e, e = this.endTime + 1 * e) : (d = this.startTime - d * e, e = this.endTime - 1 * e);\n            d < this.firstTime && (d = this.firstTime);\n            e > this.lastTime &&\n                (e = this.lastTime);\n            d < e && c.timeZoom(d, e, !0)\n        }\n    }\n});\nAmCharts.CategoryAxesSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"CategoryAxesSettings\";\n        this.minPeriod = \"DD\";\n        this.equalSpacing = !1;\n        this.axisHeight = 28;\n        this.tickLength = this.axisAlpha = 0;\n        this.gridCount = 10;\n        this.maxSeries = 150;\n        this.groupToPeriods = \"ss 10ss 30ss mm 10mm 30mm hh DD WW MM YYYY\".split(\" \");\n        this.markPeriodChange = this.autoGridCount = !0;\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.ChartCursorSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"ChartCursorSettings\";\n        this.enabled = !0;\n        this.bulletsEnabled = this.valueBalloonsEnabled = !1;\n        this.categoryBalloonDateFormats = [{\n            period: \"YYYY\",\n            format: \"YYYY\"\n        }, {\n            period: \"MM\",\n            format: \"MMM, YYYY\"\n        }, {\n            period: \"WW\",\n            format: \"MMM DD, YYYY\"\n        }, {\n            period: \"DD\",\n            format: \"MMM DD, YYYY\"\n        }, {\n            period: \"hh\",\n            format: \"JJ:NN\"\n        }, {\n            period: \"mm\",\n            format: \"JJ:NN\"\n        }, {\n            period: \"ss\",\n            format: \"JJ:NN:SS\"\n        }, {\n            period: \"fff\",\n            format: \"JJ:NN:SS\"\n        }];\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    categoryBalloonDateFormat: function(a) {\n        var b =\n            this.categoryBalloonDateFormats,\n            c, d;\n        for (d = 0; d < b.length; d++) b[d].period == a && (c = b[d].format);\n        return c\n    }\n});\nAmCharts.ChartScrollbarSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"ChartScrollbarSettings\";\n        this.height = 40;\n        this.enabled = !0;\n        this.color = \"#FFFFFF\";\n        this.updateOnReleaseOnly = this.autoGridCount = !0;\n        this.hideResizeGrips = !1;\n        this.position = \"bottom\";\n        this.minDistance = 1;\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.LegendSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"LegendSettings\";\n        this.marginBottom = this.marginTop = 0;\n        this.usePositiveNegativeOnPercentsOnly = !0;\n        this.positiveValueColor = \"#00CC00\";\n        this.negativeValueColor = \"#CC0000\";\n        this.autoMargins = this.equalWidths = this.textClickEnabled = !1;\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.PanelsSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"PanelsSettings\";\n        this.marginBottom = this.marginTop = this.marginRight = this.marginLeft = 0;\n        this.backgroundColor = \"#FFFFFF\";\n        this.backgroundAlpha = 0;\n        this.panelSpacing = 8;\n        this.panEventsEnabled = !0;\n        this.creditsPosition = \"top-right\";\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.StockEventsSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"StockEventsSettings\";\n        this.type = \"sign\";\n        this.backgroundAlpha = 1;\n        this.backgroundColor = \"#DADADA\";\n        this.borderAlpha = 1;\n        this.borderColor = \"#888888\";\n        this.balloonColor = this.rollOverColor = \"#CC0000\";\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.ValueAxesSettings = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"ValueAxesSettings\";\n        this.tickLength = 0;\n        this.showFirstLabel = this.autoGridCount = this.inside = !0;\n        this.showLastLabel = !1;\n        this.axisAlpha = 0;\n        AmCharts.applyTheme(this, a, this.cname)\n    }\n});\nAmCharts.getItemIndex = function(a, b) {\n    var c = -1,\n        d;\n    for (d = 0; d < b.length; d++) a == b[d] && (c = d);\n    return c\n};\nAmCharts.addBr = function(a) {\n    a.appendChild(document.createElement(\"br\"))\n};\nAmCharts.applyStyles = function(a, b) {\n    if (b && a)\n        for (var c in a) {\n            var d = c,\n                e = b[d];\n            if (void 0 !== e) try {\n                a[d] = e\n            }\n            catch (k) {}\n        }\n};\nAmCharts.parseStockData = function(a, b, c, d, e) {\n    (new Date).getTime();\n    var k = {},\n        f = a.dataProvider,\n        h = a.categoryField;\n    if (h) {\n        var g = AmCharts.getItemIndex(b, c),\n            n = c.length,\n            m, t = f.length,\n            r, v = {};\n        for (m = g; m < n; m++) r = c[m], k[r] = [];\n        var w = {},\n            l = a.fieldMappings,\n            y = l.length;\n        for (m = 0; m < t; m++) {\n            var z = f[m],\n                x = z[h],\n                x = x instanceof Date ? AmCharts.newDate(x, b) : e ? AmCharts.stringToDate(x, e) : new Date(x),\n                B = x.getTime(),\n                A = {};\n            for (r = 0; r < y; r++) A[l[r].toField] = z[l[r].fromField];\n            var q;\n            for (q = g; q < n; q++) {\n                r = c[q];\n                var s = AmCharts.extractPeriod(r),\n                    C = s.period,\n                    E = s.count,\n                    u, p;\n                if (q == g || B >= v[r] || !v[r]) {\n                    w[r] = {};\n                    w[r].amCategoryIdField = String(AmCharts.resetDateToMin(x, C, E, d).getTime());\n                    var D;\n                    for (D = 0; D < y; D++) s = l[D].toField, u = w[r], p = Number(A[s]), u[s + \"Count\"] = 0, u[s + \"Sum\"] = 0, isNaN(p) || (u[s + \"Open\"] = p, u[s + \"Sum\"] = p, u[s + \"High\"] = p, u[s + \"Low\"] = p, u[s + \"Close\"] = p, u[s + \"Count\"] = 1, u[s + \"Average\"] = p);\n                    u.dataContext = z;\n                    k[r].push(w[r]);\n                    q > g && (s = AmCharts.newDate(x, b), s = AmCharts.changeDate(s, C, E, !0), s = AmCharts.resetDateToMin(s, C, E, d), v[r] = s.getTime());\n                    if (q == g)\n                        for (var F in z) z.hasOwnProperty(F) &&\n                            (w[r][F] = z[F]);\n                    w[r][h] = AmCharts.newDate(x, b)\n                }\n                else\n                    for (C = 0; C < y; C++) s = l[C].toField, u = w[r], m == t - 1 && (u[h] = AmCharts.newDate(x, b)), p = Number(A[s]), isNaN(p) || (isNaN(u[s + \"Low\"]) && (u[s + \"Low\"] = p), p < u[s + \"Low\"] && (u[s + \"Low\"] = p), isNaN(u[s + \"High\"]) && (u[s + \"High\"] = p), p > u[s + \"High\"] && (u[s + \"High\"] = p), u[s + \"Close\"] = p, E = AmCharts.getDecimals(u[s + \"Sum\"]), D = AmCharts.getDecimals(p), u[s + \"Sum\"] += p, u[s + \"Sum\"] = AmCharts.roundTo(u[s + \"Sum\"], Math.max(E, D)), u[s + \"Count\"] ++, u[s + \"Average\"] = u[s + \"Sum\"] / u[s + \"Count\"])\n            }\n        }\n    }\n    a.agregatedDataProviders =\n        k\n};\nAmCharts.parseEvents = function(a, b, c, d, e, k) {\n    var f = a.stockEvents,\n        h = a.agregatedDataProviders,\n        g = b.length,\n        n, m, t, r, v, w, l, y;\n    for (n = 0; n < g; n++) {\n        w = b[n];\n        v = w.graphs;\n        t = v.length;\n        var z;\n        for (m = 0; m < t; m++) r = v[m], r.customBulletField = \"amCustomBullet\" + r.id + \"_\" + w.id, r.bulletConfigField = \"amCustomBulletConfig\" + r.id + \"_\" + w.id;\n        for (var x = 0; x < f.length; x++)\n            if (l = f[x], z = l.graph, AmCharts.isString(z) && (z = AmCharts.getObjById(v, z))) l.graph = z\n    }\n    for (var B in h)\n        if (h.hasOwnProperty(B)) {\n            z = h[B];\n            var A = AmCharts.extractPeriod(B),\n                q = z.length,\n                s;\n            for (s =\n                0; s < q; s++) {\n                var C = z[s];\n                n = C[a.categoryField];\n                y = n instanceof Date;\n                k && !y && (n = AmCharts.stringToDate(n, k));\n                var E = n.getTime();\n                v = A.period;\n                var x = A.count,\n                    u;\n                u = \"fff\" == v ? n.getTime() + 1 : AmCharts.resetDateToMin(AmCharts.changeDate(new Date(n), A.period, A.count), v, x, d).getTime();\n                for (n = 0; n < g; n++)\n                    for (w = b[n], v = w.graphs, t = v.length, m = 0; m < t; m++) {\n                        r = v[m];\n                        var p = {};\n                        p.eventDispatcher = e;\n                        p.eventObjects = [];\n                        p.letters = [];\n                        p.descriptions = [];\n                        p.shapes = [];\n                        p.backgroundColors = [];\n                        p.backgroundAlphas = [];\n                        p.borderColors = [];\n                        p.borderAlphas = [];\n                        p.colors = [];\n                        p.rollOverColors = [];\n                        p.showOnAxis = [];\n                        p.values = [];\n                        p.showAts = [];\n                        for (x = 0; x < f.length; x++) {\n                            l = f[x];\n                            y = l.date instanceof Date;\n                            k && !y && (l.date = AmCharts.stringToDate(l.date, k));\n                            y = l.date.getTime();\n                            var D = !1;\n                            l.graph && (l.graph.showEventsOnComparedGraphs && l.graph.comparedGraphs[a.id] && (D = !0), (r == l.graph || D) && y >= E && y < u && (p.eventObjects.push(l), p.letters.push(l.text), p.descriptions.push(l.description), l.type ? p.shapes.push(l.type) : p.shapes.push(c.type), void 0 !== l.backgroundColor ? p.backgroundColors.push(l.backgroundColor) :\n                                p.backgroundColors.push(c.backgroundColor), isNaN(l.backgroundAlpha) ? p.backgroundAlphas.push(c.backgroundAlpha) : p.backgroundAlphas.push(l.backgroundAlpha), isNaN(l.borderAlpha) ? p.borderAlphas.push(c.borderAlpha) : p.borderAlphas.push(l.borderAlpha), void 0 !== l.borderColor ? p.borderColors.push(l.borderColor) : p.borderColors.push(c.borderColor), void 0 !== l.rollOverColor ? p.rollOverColors.push(l.rollOverColor) : p.rollOverColors.push(c.rollOverColor), void 0 !== l.showAt ? p.showAts.push(l.showAt) : p.showAts.push(c.showAt),\n                                p.colors.push(l.color), p.values.push(l.value), !l.panel && l.graph && (l.panel = l.graph.chart), p.showOnAxis.push(l.showOnAxis), p.date = new Date(l.date)));\n                            0 < p.shapes.length && (l = \"amCustomBullet\" + r.id + \"_\" + w.id, y = \"amCustomBulletConfig\" + r.id + \"_\" + w.id, C[l] = AmCharts.StackedBullet, C[y] = p)\n                        }\n                    }\n            }\n        }\n};\nAmCharts.StockLegend = AmCharts.Class({\n    inherits: AmCharts.AmLegend,\n    construct: function(a) {\n        AmCharts.StockLegend.base.construct.call(this, a);\n        this.cname = \"StockLegend\";\n        this.valueTextComparing = \"[[percents.value]]%\";\n        this.valueTextRegular = \"[[value]]\";\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    drawLegend: function() {\n        var a = this;\n        AmCharts.StockLegend.base.drawLegend.call(a);\n        var b = a.chart;\n        if (b.allowTurningOff) {\n            var c = a.container,\n                d = c.image(b.pathToImages + \"xIcon.gif\", b.realWidth - 17, 3, 17, 17),\n                b = c.image(b.pathToImages + \"xIconH.gif\",\n                    b.realWidth - 17, 3, 17, 17);\n            b.hide();\n            a.xButtonHover = b;\n            d.mouseup(function() {\n                a.handleXClick()\n            }).mouseover(function() {\n                a.handleXOver()\n            });\n            b.mouseup(function() {\n                a.handleXClick()\n            }).mouseout(function() {\n                a.handleXOut()\n            })\n        }\n    },\n    handleXOver: function() {\n        this.xButtonHover.show()\n    },\n    handleXOut: function() {\n        this.xButtonHover.hide()\n    },\n    handleXClick: function() {\n        var a = this.chart,\n            b = a.stockChart;\n        b.removePanel(a);\n        b.validateNow()\n    }\n});\nAmCharts.DataSetSelector = AmCharts.Class({\n    construct: function(a) {\n        this.cname = \"DataSetSelector\";\n        this.theme = a;\n        this.createEvents(\"dataSetSelected\", \"dataSetCompared\", \"dataSetUncompared\");\n        this.position = \"left\";\n        this.selectText = \"Select:\";\n        this.comboBoxSelectText = \"Select...\";\n        this.compareText = \"Compare to:\";\n        this.width = 180;\n        this.dataProvider = [];\n        this.listHeight = 150;\n        this.listCheckBoxSize = 14;\n        this.rollOverBackgroundColor = \"#b2e1ff\";\n        this.selectedBackgroundColor = \"#7fceff\";\n        AmCharts.applyTheme(this, a, this.cname)\n    },\n    write: function(a) {\n        var b =\n            this,\n            c, d = b.theme;\n        a.className = \"amChartsDataSetSelector\";\n        var e = b.width;\n        c = b.position;\n        b.width = void 0;\n        b.position = void 0;\n        AmCharts.applyStyles(a.style, b);\n        b.div = a;\n        b.width = e;\n        b.position = c;\n        a.innerHTML = \"\";\n        var e = b.position,\n            k;\n        k = \"top\" == e || \"bottom\" == e ? !1 : !0;\n        b.vertical = k;\n        var f;\n        k && (f = b.width + \"px\");\n        var e = b.dataProvider,\n            h, g;\n        if (1 < b.countDataSets(\"showInSelect\")) {\n            c = document.createTextNode(AmCharts.lang.selectText || b.selectText);\n            a.appendChild(c);\n            k && AmCharts.addBr(a);\n            var n = document.createElement(\"select\");\n            f && (n.style.width =\n                f);\n            b.selectCB = n;\n            d && AmCharts.applyStyles(n.style, d.DataSetSelect);\n            a.appendChild(n);\n            AmCharts.isNN && n.addEventListener(\"change\", function(a) {\n                b.handleDataSetChange.call(b, a)\n            }, !0);\n            AmCharts.isIE && n.attachEvent(\"onchange\", function(a) {\n                b.handleDataSetChange.call(b, a)\n            });\n            for (c = 0; c < e.length; c++)\n                if (h = e[c], !0 === h.showInSelect) {\n                    g = document.createElement(\"option\");\n                    g.text = h.title;\n                    g.value = c;\n                    h == b.chart.mainDataSet && (g.selected = !0);\n                    try {\n                        n.add(g, null)\n                    }\n                    catch (m) {\n                        n.add(g)\n                    }\n                }\n            b.offsetHeight = n.offsetHeight\n        }\n        if (0 < b.countDataSets(\"showInCompare\") &&\n            1 < e.length)\n            if (k ? (AmCharts.addBr(a), AmCharts.addBr(a)) : (c = document.createTextNode(\" \"), a.appendChild(c)), c = document.createTextNode(AmCharts.lang.compareText || b.compareText), a.appendChild(c), g = b.listCheckBoxSize, k) {\n                AmCharts.addBr(a);\n                f = document.createElement(\"div\");\n                a.appendChild(f);\n                f.className = \"amChartsCompareList\";\n                d && AmCharts.applyStyles(f.style, d.DataSetCompareList);\n                f.style.overflow = \"auto\";\n                f.style.overflowX = \"hidden\";\n                f.style.width = b.width - 2 + \"px\";\n                f.style.maxHeight = b.listHeight + \"px\";\n                for (c = 0; c < e.length; c++) h =\n                    e[c], !0 === h.showInCompare && h != b.chart.mainDataSet && (d = document.createElement(\"div\"), d.style.padding = \"4px\", d.style.position = \"relative\", d.name = \"amCBContainer\", d.dataSet = h, d.style.height = g + \"px\", h.compared && (d.style.backgroundColor = b.selectedBackgroundColor), f.appendChild(d), k = document.createElement(\"div\"), k.style.width = g + \"px\", k.style.height = g + \"px\", k.style.position = \"absolute\", k.style.backgroundColor = h.color, d.appendChild(k), k = document.createElement(\"div\"), k.style.width = \"100%\", k.style.position = \"absolute\",\n                        k.style.left = g + 10 + \"px\", d.appendChild(k), h = document.createTextNode(h.title), k.style.whiteSpace = \"nowrap\", k.style.cursor = \"default\", k.appendChild(h), b.addEventListeners(d));\n                AmCharts.addBr(a);\n                AmCharts.addBr(a)\n            }\n            else {\n                d = document.createElement(\"select\");\n                b.compareCB = d;\n                f && (d.style.width = f);\n                a.appendChild(d);\n                AmCharts.isNN && d.addEventListener(\"change\", function(a) {\n                    b.handleCBSelect.call(b, a)\n                }, !0);\n                AmCharts.isIE && d.attachEvent(\"onchange\", function(a) {\n                    b.handleCBSelect.call(b, a)\n                });\n                g = document.createElement(\"option\");\n                g.text =\n                    AmCharts.lang.comboBoxSelectText || b.comboBoxSelectText;\n                try {\n                    d.add(g, null)\n                }\n                catch (t) {\n                    d.add(g)\n                }\n                for (c = 0; c < e.length; c++)\n                    if (h = e[c], !0 === h.showInCompare && h != b.chart.mainDataSet) {\n                        g = document.createElement(\"option\");\n                        g.text = h.title;\n                        g.value = c;\n                        h.compared && (g.selected = !0);\n                        try {\n                            d.add(g, null)\n                        }\n                        catch (r) {\n                            d.add(g)\n                        }\n                    }\n                b.offsetHeight = d.offsetHeight\n            }\n    },\n    addEventListeners: function(a) {\n        var b = this;\n        AmCharts.isNN && (a.addEventListener(\"mouseover\", function(a) {\n            b.handleRollOver.call(b, a)\n        }, !0), a.addEventListener(\"mouseout\", function(a) {\n            b.handleRollOut.call(b,\n                a)\n        }, !0), a.addEventListener(\"click\", function(a) {\n            b.handleClick.call(b, a)\n        }, !0));\n        AmCharts.isIE && (a.attachEvent(\"onmouseout\", function(a) {\n            b.handleRollOut.call(b, a)\n        }), a.attachEvent(\"onmouseover\", function(a) {\n            b.handleRollOver.call(b, a)\n        }), a.attachEvent(\"onclick\", function(a) {\n            b.handleClick.call(b, a)\n        }))\n    },\n    handleDataSetChange: function() {\n        var a = this.selectCB,\n            a = this.dataProvider[a.options[a.selectedIndex].value],\n            b = this.chart;\n        b.mainDataSet = a;\n        b.zoomOutOnDataSetChange && (b.startDate = void 0, b.endDate = void 0);\n        b.validateData();\n        a = {\n            type: \"dataSetSelected\",\n            dataSet: a,\n            chart: this.chart\n        };\n        this.fire(a.type, a)\n    },\n    handleRollOver: function(a) {\n        a = this.getRealDiv(a);\n        a.dataSet.compared || (a.style.backgroundColor = this.rollOverBackgroundColor)\n    },\n    handleRollOut: function(a) {\n        a = this.getRealDiv(a);\n        a.dataSet.compared || (a.style.removeProperty && a.style.removeProperty(\"background-color\"), a.style.removeAttribute && a.style.removeAttribute(\"backgroundColor\"))\n    },\n    handleCBSelect: function(a) {\n        var b = this.compareCB,\n            c = this.dataProvider,\n            d, e;\n        for (d = 0; d < c.length; d++) e =\n            c[d], e.compared && (a = {\n                type: \"dataSetUncompared\",\n                dataSet: e\n            }), e.compared = !1;\n        c = b.selectedIndex;\n        0 < c && (e = this.dataProvider[b.options[c].value], e.compared || (a = {\n            type: \"dataSetCompared\",\n            dataSet: e\n        }), e.compared = !0);\n        b = this.chart;\n        b.validateData();\n        a.chart = b;\n        this.fire(a.type, a)\n    },\n    handleClick: function(a) {\n        a = this.getRealDiv(a).dataSet;\n        !0 === a.compared ? (a.compared = !1, a = {\n            type: \"dataSetUncompared\",\n            dataSet: a\n        }) : (a.compared = !0, a = {\n            type: \"dataSetCompared\",\n            dataSet: a\n        });\n        var b = this.chart;\n        b.validateData();\n        a.chart = b;\n        this.fire(a.type,\n            a)\n    },\n    getRealDiv: function(a) {\n        a || (a = window.event);\n        a = a.currentTarget ? a.currentTarget : a.srcElement;\n        \"amCBContainer\" == a.parentNode.name && (a = a.parentNode);\n        return a\n    },\n    countDataSets: function(a) {\n        var b = this.dataProvider,\n            c = 0,\n            d;\n        for (d = 0; d < b.length; d++) !0 === b[d][a] && c++;\n        return c\n    }\n});\nAmCharts.StackedBullet = AmCharts.Class({\n    construct: function() {\n        this.fontSize = 11;\n        this.stackDown = !1;\n        this.mastHeight = 8;\n        this.shapes = [];\n        this.backgroundColors = [];\n        this.backgroundAlphas = [];\n        this.borderAlphas = [];\n        this.borderColors = [];\n        this.colors = [];\n        this.rollOverColors = [];\n        this.showOnAxiss = [];\n        this.values = [];\n        this.showAts = [];\n        this.textColor = \"#000000\";\n        this.nextY = 0;\n        this.size = 16\n    },\n    parseConfig: function() {\n        var a = this.bulletConfig;\n        this.eventObjects = a.eventObjects;\n        this.letters = a.letters;\n        this.shapes = a.shapes;\n        this.backgroundColors =\n            a.backgroundColors;\n        this.backgroundAlphas = a.backgroundAlphas;\n        this.borderColors = a.borderColors;\n        this.borderAlphas = a.borderAlphas;\n        this.colors = a.colors;\n        this.rollOverColors = a.rollOverColors;\n        this.date = a.date;\n        this.showOnAxiss = a.showOnAxis;\n        this.axisCoordinate = a.minCoord;\n        this.showAts = a.showAts;\n        this.values = a.values\n    },\n    write: function(a) {\n        this.parseConfig();\n        this.container = a;\n        this.bullets = [];\n        if (this.graph) {\n            var b = this.graph.fontSize;\n            b && (this.fontSize = b)\n        }\n        b = this.letters.length;\n        (this.mastHeight + 2 * (this.fontSize / 2 + 2)) *\n        b > this.availableSpace && (this.stackDown = !0);\n        this.set = a.set();\n        a = 0;\n        var c;\n        for (c = 0; c < b; c++) this.shape = this.shapes[c], this.backgroundColor = this.backgroundColors[c], this.backgroundAlpha = this.backgroundAlphas[c], this.borderAlpha = this.borderAlphas[c], this.borderColor = this.borderColors[c], this.rollOverColor = this.rollOverColors[c], this.showOnAxis = this.showOnAxiss[c], this.color = this.colors[c], this.value = this.values[c], this.showAt = this.showAts[c], this.addLetter(this.letters[c], a, c), this.showOnAxis || a++\n    },\n    addLetter: function(a,\n        b, c) {\n        var d = this.container;\n        b = d.set();\n        var e = -1,\n            k = this.stackDown,\n            f = this.graph.valueAxis;\n        this.showOnAxis && (this.stackDown = f.reversed ? !0 : !1);\n        this.stackDown && (e = 1);\n        var h = 0,\n            g = 0,\n            n = 0,\n            m, t = this.fontSize,\n            r = this.mastHeight,\n            v = this.shape,\n            w = this.textColor;\n        void 0 !== this.color && (w = this.color);\n        void 0 === a && (a = \"\");\n        a = AmCharts.text(d, a, w, this.chart.fontFamily, this.fontSize);\n        a.node.style.pointerEvents = \"none\";\n        d = a.getBBox();\n        this.labelWidth = w = d.width;\n        this.labelHeight = d.height;\n        var l, d = 0;\n        switch (v) {\n            case \"sign\":\n                l = this.drawSign(b);\n                h = r + 4 + t / 2;\n                d = r + t + 4;\n                1 == e && (h -= 4);\n                break;\n            case \"flag\":\n                l = this.drawFlag(b);\n                g = w / 2 + 3;\n                h = r + 4 + t / 2;\n                d = r + t + 4;\n                1 == e && (h -= 4);\n                break;\n            case \"pin\":\n                l = this.drawPin(b);\n                h = 6 + t / 2;\n                d = t + 8;\n                break;\n            case \"triangleUp\":\n                l = this.drawTriangleUp(b);\n                h = -t - 1;\n                d = t + 4;\n                e = -1;\n                break;\n            case \"triangleDown\":\n                l = this.drawTriangleDown(b);\n                h = t + 1;\n                d = t + 4;\n                e = -1;\n                break;\n            case \"triangleLeft\":\n                l = this.drawTriangleLeft(b);\n                g = t;\n                d = t + 4;\n                e = -1;\n                break;\n            case \"triangleRight\":\n                l = this.drawTriangleRight(b);\n                g = -t;\n                e = -1;\n                d = t + 4;\n                break;\n            case \"arrowUp\":\n                l = this.drawArrowUp(b);\n                a.hide();\n                break;\n            case \"arrowDown\":\n                l =\n                    this.drawArrowDown(b);\n                a.hide();\n                d = t + 4;\n                break;\n            case \"text\":\n                e = -1;\n                l = this.drawTextBackground(b, a);\n                h = this.labelHeight + 3;\n                d = t + 10;\n                break;\n            case \"round\":\n                l = this.drawCircle(b)\n        }\n        this.bullets[c] = l;\n        this.showOnAxis ? (m = isNaN(this.nextAxisY) ? this.axisCoordinate : this.nextY, n = h * e, this.nextAxisY = m + e * d) : this.value ? (m = this.value, f.recalculateToPercents && (m = m / f.recBaseValue * 100 - 100), m = f.getCoordinate(m) - this.bulletY, n = h * e) : this.showAt ? (l = this.graphDataItem.values, f.recalculateToPercents && (l = this.graphDataItem.percents), l && (m =\n            f.getCoordinate(l[this.showAt]) - this.bulletY, n = h * e)) : (m = this.nextY, n = h * e);\n        a.translate(g, n);\n        b.push(a);\n        b.translate(0, m);\n        this.addEventListeners(b, c);\n        this.nextY = m + e * d;\n        this.stackDown = k\n    },\n    addEventListeners: function(a, b) {\n        var c = this;\n        a.click(function() {\n            c.handleClick(b)\n        }).mouseover(function() {\n            c.handleMouseOver(b)\n        }).touchend(function() {\n            c.handleMouseOver(b, !0)\n        }).mouseout(function() {\n            c.handleMouseOut(b)\n        })\n    },\n    drawPin: function(a) {\n        var b = -1;\n        this.stackDown && (b = 1);\n        var c = this.fontSize + 4;\n        return this.drawRealPolygon(a, [0,\n            c / 2, c / 2, -c / 2, -c / 2, 0\n        ], [0, b * c / 4, b * (c + c / 4), b * (c + c / 4), b * c / 4, 0])\n    },\n    drawSign: function(a) {\n        var b = -1;\n        this.stackDown && (b = 1);\n        var c = this.mastHeight * b,\n            d = this.fontSize / 2 + 2,\n            e = AmCharts.line(this.container, [0, 0], [0, c], this.borderColor, this.borderAlpha, 1),\n            k = AmCharts.circle(this.container, d, this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n        k.translate(0, c + d * b);\n        a.push(e);\n        a.push(k);\n        this.set.push(a);\n        return k\n    },\n    drawFlag: function(a) {\n        var b = -1;\n        this.stackDown && (b = 1);\n        var c = this.fontSize + 4,\n            d = this.labelWidth +\n            6,\n            e = this.mastHeight,\n            b = 1 == b ? b * e : b * e - c,\n            e = AmCharts.line(this.container, [0, 0], [0, b], this.borderColor, this.borderAlpha, 1),\n            c = AmCharts.polygon(this.container, [0, d, d, 0], [0, 0, c, c], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n        c.translate(0, b);\n        a.push(e);\n        a.push(c);\n        this.set.push(a);\n        return c\n    },\n    drawTriangleUp: function(a) {\n        var b = this.fontSize + 7;\n        return this.drawRealPolygon(a, [0, b / 2, -b / 2, 0], [0, b, b, 0])\n    },\n    drawArrowUp: function(a) {\n        var b = this.size,\n            c = b / 2,\n            d = b / 4;\n        return this.drawRealPolygon(a, [0, c, d, d, -d, -d, -c, 0], [0, c, c, b, b, c, c, 0])\n    },\n    drawArrowDown: function(a) {\n        var b = this.size,\n            c = b / 2,\n            d = b / 4;\n        return this.drawRealPolygon(a, [0, c, d, d, -d, -d, -c, 0], [0, -c, -c, -b, -b, -c, -c, 0])\n    },\n    drawTriangleDown: function(a) {\n        var b = this.fontSize + 7;\n        return this.drawRealPolygon(a, [0, b / 2, -b / 2, 0], [0, -b, -b, 0])\n    },\n    drawTriangleLeft: function(a) {\n        var b = this.fontSize + 7;\n        return this.drawRealPolygon(a, [0, b, b, 0], [0, -b / 2, b / 2])\n    },\n    drawTriangleRight: function(a) {\n        var b = this.fontSize + 7;\n        return this.drawRealPolygon(a, [0, -b, -b, 0], [0, -b / 2, b / 2, 0])\n    },\n    drawRealPolygon: function(a,\n        b, c) {\n        b = AmCharts.polygon(this.container, b, c, this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n        a.push(b);\n        this.set.push(a);\n        return b\n    },\n    drawCircle: function(a) {\n        shape = AmCharts.circle(this.container, this.fontSize / 2, this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n        a.push(shape);\n        this.set.push(a);\n        return shape\n    },\n    drawTextBackground: function(a, b) {\n        var c = b.getBBox(),\n            d = -c.width / 2 - 5,\n            e = c.width / 2 + 5,\n            c = -c.height - 12;\n        return this.drawRealPolygon(a, [d, -5, 0, 5, e, e, d, d], [-5, -5, 0, -5, -5, c, c, -5])\n    },\n    handleMouseOver: function(a, b) {\n        b || this.bullets[a].attr({\n            fill: this.rollOverColors[a]\n        });\n        var c = this.eventObjects[a],\n            d = {\n                type: \"rollOverStockEvent\",\n                eventObject: c,\n                graph: this.graph,\n                date: this.date\n            },\n            e = this.bulletConfig.eventDispatcher;\n        d.chart = e;\n        e.fire(d.type, d);\n        c.url && this.bullets[a].setAttr(\"cursor\", \"pointer\");\n        this.chart.showBalloon(AmCharts.fixNewLines(c.description), e.stockEventsSettings.balloonColor, !0)\n    },\n    handleClick: function(a) {\n        a = this.eventObjects[a];\n        var b = {\n                type: \"clickStockEvent\",\n                eventObject: a,\n                graph: this.graph,\n                date: this.date\n            },\n            c = this.bulletConfig.eventDispatcher;\n        b.chart = c;\n        c.fire(b.type, b);\n        b = a.urlTarget;\n        b || (b = c.stockEventsSettings.urlTarget);\n        AmCharts.getURL(a.url, b)\n    },\n    handleMouseOut: function(a) {\n        this.bullets[a].attr({\n            fill: this.backgroundColors[a]\n        });\n        a = {\n            type: \"rollOutStockEvent\",\n            eventObject: this.eventObjects[a],\n            graph: this.graph,\n            date: this.date\n        };\n        var b = this.bulletConfig.eventDispatcher;\n        a.chart = b;\n        b.fire(a.type, a)\n    }\n});","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":97,"column":0},"end":{"row":97,"column":431}},"text":"eventObject:a,graph:this.graph,date:this.date},c=this.bulletConfig.eventDispatcher;b.chart=c;c.fire(b.type,b);b=a.urlTarget;b||(b=c.stockEventsSettings.urlTarget);AmCharts.getURL(a.url,b)},handleMouseOut:function(a){this.bullets[a].attr({fill:this.backgroundColors[a]});a={type:\"rollOutStockEvent\",eventObject:this.eventObjects[a],graph:this.graph,date:this.date};var b=this.bulletConfig.eventDispatcher;a.chart=b;b.fire(a.type,a)}"},{"action":"removeLines","range":{"start":{"row":1,"column":0},"end":{"row":97,"column":0}},"nl":"\n","lines":["!1;this.panels=[];this.dataSets=[];this.chartCursors=[];this.comparedDataSets=[];this.categoryAxesSettings=new AmCharts.CategoryAxesSettings(a);this.valueAxesSettings=new AmCharts.ValueAxesSettings(a);this.panelsSettings=new AmCharts.PanelsSettings(a);this.chartScrollbarSettings=new AmCharts.ChartScrollbarSettings(a);this.chartCursorSettings=new AmCharts.ChartCursorSettings(a);this.stockEventsSettings=new AmCharts.StockEventsSettings(a);this.legendSettings=new AmCharts.LegendSettings(a);this.balloon=","new AmCharts.AmBalloon(a);this.previousEndDate=new Date(0);this.previousStartDate=new Date(0);this.dataSetCount=this.graphCount=0;this.chartCreated=!1;this.extendToFullPeriod=!0;AmCharts.applyTheme(this,a,this.cname)},write:function(a){var b=this.theme;AmCharts.callInitHandler(this);AmCharts.applyLang(this.language,this);var c=this.exportConfig;c&&AmCharts.AmExport&&!this.AmExport&&(this.AmExport=new AmCharts.AmExport(this,c));this.amExport&&AmCharts.AmExport&&(this.AmExport=AmCharts.extend(this.amExport,","new AmCharts.AmExport(this),!0));this.AmExport&&this.AmExport.init();this.chartRendered=!1;a=\"object\"!=typeof a?document.getElementById(a):a;this.zoomOutOnDataSetChange&&(this.endDate=this.startDate=void 0);this.categoryAxesSettings=AmCharts.processObject(this.categoryAxesSettings,AmCharts.CategoryAxesSettings,b);this.valueAxesSettings=AmCharts.processObject(this.valueAxesSettings,AmCharts.ValueAxesSettings,b);this.chartCursorSettings=AmCharts.processObject(this.chartCursorSettings,AmCharts.ChartCursorSettings,","b);this.chartScrollbarSettings=AmCharts.processObject(this.chartScrollbarSettings,AmCharts.ChartScrollbarSettings,b);this.legendSettings=AmCharts.processObject(this.legendSettings,AmCharts.LegendSettings,b);this.panelsSettings=AmCharts.processObject(this.panelsSettings,AmCharts.PanelsSettings,b);this.stockEventsSettings=AmCharts.processObject(this.stockEventsSettings,AmCharts.StockEventsSettings,b);this.dataSetSelector&&(this.dataSetSelector=AmCharts.processObject(this.dataSetSelector,AmCharts.DataSetSelector,","b));this.periodSelector&&(this.periodSelector=AmCharts.processObject(this.periodSelector,AmCharts.PeriodSelector,b));a.innerHTML=\"\";this.div=a;this.measure();this.createLayout();this.updateDataSets();this.addDataSetSelector();this.addPeriodSelector();this.addPanels();this.updatePanels();this.addChartScrollbar();this.updateData();this.skipDefault||this.setDefaultPeriod()},setDefaultPeriod:function(a){var b=this.periodSelector;b&&(this.animationPlayed=!1,b.setDefaultPeriod(a))},validateSize:function(){var a,","b=this.panels;this.measurePanels();for(a=0;a<b.length;a++)panel=b[a],panel.invalidateSize()},updateDataSets:function(){var a=this.mainDataSet,b=this.dataSets,c;for(c=0;c<b.length;c++){var d=b[c],d=AmCharts.processObject(d,AmCharts.DataSet);b[c]=d;d.id||(this.dataSetCount++,d.id=\"ds\"+this.dataSetCount);void 0===d.color&&(d.color=this.colors.length-1>c?this.colors[c]:AmCharts.randomColor())}!a&&AmCharts.ifArray(b)&&(this.mainDataSet=this.dataSets[0])},updateEvents:function(a){AmCharts.ifArray(a.stockEvents)&&","AmCharts.parseEvents(a,this.panels,this.stockEventsSettings,this.firstDayOfWeek,this,this.dataDateFormat)},getLastDate:function(a){var b=this.dataDateFormat;a=a instanceof Date?new Date(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds(),a.getMilliseconds()):b?AmCharts.stringToDate(a,b):new Date(a);return new Date(AmCharts.changeDate(a,this.categoryAxesSettings.minPeriod,1,!0).getTime()-1)},getFirstDate:function(a){var b=this.dataDateFormat;a=a instanceof Date?new Date(a.getFullYear(),","a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds(),a.getMilliseconds()):b?AmCharts.stringToDate(a,b):new Date(a);return new Date(AmCharts.resetDateToMin(a,this.categoryAxesSettings.minPeriod,1,this.firstDayOfWeek))},updateData:function(){var a=this.mainDataSet;if(a){var b=this.categoryAxesSettings;-1==AmCharts.getItemIndex(b.minPeriod,b.groupToPeriods)&&b.groupToPeriods.unshift(b.minPeriod);var c=a.dataProvider;if(AmCharts.ifArray(c)){var d=a.categoryField;this.firstDate=this.getFirstDate(c[0][d]);","this.lastDate=this.getLastDate(c[c.length-1][d]);this.periodSelector&&this.periodSelector.setRanges(this.firstDate,this.lastDate);a.dataParsed||(AmCharts.parseStockData(a,b.minPeriod,b.groupToPeriods,this.firstDayOfWeek,this.dataDateFormat),a.dataParsed=!0);this.updateComparingData();this.updateEvents(a)}else this.lastDate=this.firstDate=void 0;this.glueToTheEnd&&this.startDate&&this.endDate&&this.lastDate&&(AmCharts.getPeriodDuration(b.minPeriod),this.startDate=new Date(this.startDate.getTime()+","(this.lastDate.getTime()-this.endDate.getTime())),this.endDate=this.lastDate,this.updateScrollbar=!0);this.updatePanelsWithNewData()}a={type:\"dataUpdated\",chart:this};this.fire(a.type,a)},updateComparingData:function(){var a=this.comparedDataSets,b=this.categoryAxesSettings,c;for(c=0;c<a.length;c++){var d=a[c];d.dataParsed||(AmCharts.parseStockData(d,b.minPeriod,b.groupToPeriods,this.firstDayOfWeek,this.dataDateFormat),d.dataParsed=!0);this.updateEvents(d)}},createLayout:function(){var a=this.div,","b,c,d=document.createElement(\"div\");d.style.position=\"relative\";this.containerDiv=d;a.appendChild(d);if(a=this.periodSelector)b=a.position;if(a=this.dataSetSelector)c=a.position;if(\"left\"==b||\"left\"==c)a=document.createElement(\"div\"),a.style.cssFloat=\"left\",a.style.styleFloat=\"left\",a.style.width=\"0px\",a.style.position=\"absolute\",d.appendChild(a),this.leftContainer=a;if(\"right\"==b||\"right\"==c)b=document.createElement(\"div\"),b.style.cssFloat=\"right\",b.style.styleFloat=\"right\",b.style.width=\"0px\",d.appendChild(b),","this.rightContainer=b;b=document.createElement(\"div\");d.appendChild(b);this.centerContainer=b;d=document.createElement(\"div\");b.appendChild(d);this.panelsContainer=d},addPanels:function(){this.measurePanels();for(var a=this.panels,b=0;b<a.length;b++){var c=a[b],c=AmCharts.processObject(c,AmCharts.StockPanel,this.theme);a[b]=c;this.addStockPanel(c,b)}this.panelsAdded=!0},measurePanels:function(){this.measure();var a=this.chartScrollbarSettings,b=this.divRealHeight,c=this.panelsSettings.panelSpacing;","a.enabled&&(b-=a.height);(a=this.periodSelector)&&!a.vertical&&(a=a.offsetHeight,b-=a+c);(a=this.dataSetSelector)&&!a.vertical&&(a=a.offsetHeight,b-=a+c);a=this.panels;this.panelsContainer.style.height=b+\"px\";this.chartCursors=[];var d=0,e,k;for(e=0;e<a.length;e++){k=a[e];var f=k.percentHeight;isNaN(f)&&(f=100/a.length,k.percentHeight=f);d+=f}this.panelsHeight=Math.max(b-c*(a.length-1),0);for(e=0;e<a.length;e++)k=a[e],k.percentHeight=k.percentHeight/d*100,k.panelBox&&(k.panelBox.style.height=Math.round(k.percentHeight*","this.panelsHeight/100)+\"px\")},addStockPanel:function(a,b){var c=this.panelsSettings,d=document.createElement(\"div\");d.className=\"amChartsPanel\";0<b&&!this.panels[b-1].showCategoryAxis&&(d.style.marginTop=c.panelSpacing+\"px\");a.panelBox=d;a.stockChart=this;a.id||(a.id=\"stockPanel\"+b);a.pathToImages=this.pathToImages;d.style.height=Math.round(a.percentHeight*this.panelsHeight/100)+\"px\";d.style.width=\"100%\";this.panelsContainer.appendChild(d);0<c.backgroundAlpha&&(d.style.backgroundColor=c.backgroundColor);","if(d=a.stockLegend)d.container=void 0,d.title=a.title,d.marginLeft=c.marginLeft,d.marginRight=c.marginRight,d.verticalGap=3,d.position=\"top\",AmCharts.copyProperties(this.legendSettings,d),a.addLegend(d,d.divId);a.zoomOutText=\"\";this.addCursor(a)},enableCursors:function(a){var b=this.chartCursors,c;for(c=0;c<b.length;c++)b[c].enabled=a},updatePanels:function(){var a=this.panels,b;for(b=0;b<a.length;b++)this.updatePanel(a[b]);this.mainDataSet&&this.updateGraphs();this.currentPeriod=void 0},updatePanel:function(a){a.seriesIdField=","\"amCategoryIdField\";a.dataProvider=[];a.chartData=[];a.graphs=[];var b=a.categoryAxis,c=this.categoryAxesSettings;AmCharts.copyProperties(this.panelsSettings,a);AmCharts.copyProperties(c,b);b.parseDates=!0;a.zoomOutOnDataUpdate=!1;a.mouseWheelScrollEnabled=this.mouseWheelScrollEnabled;a.dataDateFormat=this.dataDateFormat;a.language=this.language;a.showCategoryAxis?\"top\"==b.position?a.marginTop=c.axisHeight:a.marginBottom=c.axisHeight:(a.categoryAxis.labelsEnabled=!1,a.chartCursor&&(a.chartCursor.categoryBalloonEnabled=","!1));var c=a.valueAxes,d=c.length,e;0===d&&(e=new AmCharts.ValueAxis(this.theme),a.addValueAxis(e));b=new AmCharts.AmBalloon(this.theme);AmCharts.copyProperties(this.balloon,b);a.balloon=b;c=a.valueAxes;d=c.length;for(b=0;b<d;b++)e=c[b],AmCharts.copyProperties(this.valueAxesSettings,e);a.listenersAdded=!1;a.write(a.panelBox)},zoom:function(a,b){this.zoomChart(a,b)},zoomOut:function(){this.zoomChart(this.firstDate,this.lastDate)},updatePanelsWithNewData:function(){var a=this.mainDataSet,b=this.scrollbarChart;","if(a){var c=this.panels;this.currentPeriod=void 0;var d;for(d=0;d<c.length;d++){var e=c[d];e.categoryField=a.categoryField;0===a.dataProvider.length&&(e.dataProvider=[]);e.scrollbarChart=b}b&&(c=this.categoryAxesSettings,d=c.minPeriod,b.categoryField=a.categoryField,0<a.dataProvider.length?(e=this.chartScrollbarSettings.usePeriod,b.dataProvider=e?a.agregatedDataProviders[e]:a.agregatedDataProviders[d]):b.dataProvider=[],e=b.categoryAxis,e.minPeriod=d,e.firstDayOfWeek=this.firstDayOfWeek,e.equalSpacing=","c.equalSpacing,e.axisAlpha=0,e.markPeriodChange=c.markPeriodChange,b.bbsetr=!0,b.validateData(),c=this.panelsSettings,b.maxSelectedTime=c.maxSelectedTime,b.minSelectedTime=c.minSelectedTime);0<a.dataProvider.length&&this.zoomChart(this.startDate,this.endDate)}this.panelDataInvalidated=!1},addChartScrollbar:function(){var a=this.chartScrollbarSettings,b=this.scrollbarChart;b&&(b.clear(),b.destroy());if(a.enabled){var c=this.panelsSettings,d=this.categoryAxesSettings,b=new AmCharts.AmSerialChart(this.theme);","b.language=this.language;b.pathToImages=this.pathToImages;b.autoMargins=!1;this.scrollbarChart=b;b.id=\"scrollbarChart\";b.scrollbarOnly=!0;b.zoomOutText=\"\";b.panEventsEnabled=this.panelsSettings.panEventsEnabled;b.marginLeft=c.marginLeft;b.marginRight=c.marginRight;b.marginTop=0;b.marginBottom=0;var c=d.dateFormats,e=b.categoryAxis;e.boldPeriodBeginning=d.boldPeriodBeginning;c&&(e.dateFormats=d.dateFormats);e.labelsEnabled=!1;e.parseDates=!0;d=a.graph;if(AmCharts.isString(d)){c=this.panels;for(e=0;e<","c.length;e++){var k=AmCharts.getObjById(c[e].stockGraphs,a.graph);k&&(d=k)}a.graph=d}var f;d&&(f=new AmCharts.AmGraph(this.theme),f.valueField=d.valueField,f.periodValue=d.periodValue,f.type=d.type,f.connect=d.connect,f.minDistance=a.minDistance,b.addGraph(f));d=new AmCharts.ChartScrollbar(this.theme);b.addChartScrollbar(d);AmCharts.copyProperties(a,d);d.scrollbarHeight=a.height;d.graph=f;this.listenTo(d,\"zoomed\",this.handleScrollbarZoom);f=document.createElement(\"div\");f.style.height=a.height+\"px\";","d=this.periodSelectorContainer;c=this.periodSelector;e=this.centerContainer;\"bottom\"==a.position?c?\"bottom\"==c.position?e.insertBefore(f,d):e.appendChild(f):e.appendChild(f):c?\"top\"==c.position?e.insertBefore(f,d.nextSibling):e.insertBefore(f,e.firstChild):e.insertBefore(f,e.firstChild);b.write(f)}},handleScrollbarZoom:function(a){if(this.skipScrollbarEvent)this.skipScrollbarEvent=!1;else{var b=a.endDate,c={};c.startDate=a.startDate;c.endDate=b;this.updateScrollbar=!1;this.handleZoom(c)}},addPeriodSelector:function(){var a=","this.periodSelector;if(a){var b=this.categoryAxesSettings.minPeriod;a.minDuration=AmCharts.getPeriodDuration(b);a.minPeriod=b;a.chart=this;var c=this.dataSetSelector,d,b=this.dssContainer;c&&(d=c.position);var c=this.panelsSettings.panelSpacing,e=document.createElement(\"div\");this.periodSelectorContainer=e;var k=this.leftContainer,f=this.rightContainer,h=this.centerContainer,g=this.panelsContainer,n=a.width+2*c+\"px\";switch(a.position){case \"left\":k.style.width=a.width+\"px\";k.appendChild(e);h.style.paddingLeft=","n;break;case \"right\":h.style.marginRight=n;f.appendChild(e);f.style.width=a.width+\"px\";break;case \"top\":g.style.clear=\"both\";h.insertBefore(e,g);e.style.paddingBottom=c+\"px\";e.style.overflow=\"hidden\";break;case \"bottom\":e.style.marginTop=c+\"px\",\"bottom\"==d?h.insertBefore(e,b):h.appendChild(e)}this.listenTo(a,\"changed\",this.handlePeriodSelectorZoom);a.write(e)}},addDataSetSelector:function(){var a=this.dataSetSelector;if(a){a.chart=this;a.dataProvider=this.dataSets;var b=a.position,c=this.panelsSettings.panelSpacing,","d=document.createElement(\"div\");this.dssContainer=d;var e=this.leftContainer,k=this.rightContainer,f=this.centerContainer,h=this.panelsContainer,c=a.width+2*c+\"px\";switch(b){case \"left\":e.style.width=a.width+\"px\";e.appendChild(d);f.style.paddingLeft=c;break;case \"right\":f.style.marginRight=c;k.appendChild(d);k.style.width=a.width+\"px\";break;case \"top\":h.style.clear=\"both\";f.insertBefore(d,h);d.style.overflow=\"hidden\";break;case \"bottom\":f.appendChild(d)}a.write(d)}},handlePeriodSelectorZoom:function(a){var b=","this.scrollbarChart;b&&(b.updateScrollbar=!0);a.predefinedPeriod?(this.predefinedStart=a.startDate,this.predefinedEnd=a.endDate):this.predefinedEnd=this.predefinedStart=null;this.zoomChart(a.startDate,a.endDate)},addCursor:function(a){var b=this.chartCursorSettings;if(b.enabled){var c=new AmCharts.ChartCursor(this.theme);AmCharts.copyProperties(b,c);a.chartCursor&&AmCharts.copyProperties(a.chartCursor,c);a.removeChartCursor();a.addChartCursor(c);this.listenTo(c,\"changed\",this.handleCursorChange);","this.listenTo(c,\"onHideCursor\",this.hideChartCursor);this.listenTo(c,\"zoomed\",this.handleCursorZoom);this.chartCursors.push(c)}},hideChartCursor:function(){var a=this.chartCursors,b;for(b=0;b<a.length;b++){var c=a[b];c.hideCursor(!1);(c=c.chart)&&c.updateLegendValues()}},handleCursorZoom:function(a){var b=this.scrollbarChart;b&&(b.updateScrollbar=!0);var b={},c;if(this.categoryAxesSettings.equalSpacing){var d=this.mainDataSet.categoryField,e=this.mainDataSet.agregatedDataProviders[this.currentPeriod];","c=new Date(e[a.start][d]);a=new Date(e[a.end][d])}else c=new Date(a.start),a=new Date(a.end);b.startDate=c;b.endDate=a;this.handleZoom(b)},handleZoom:function(a){this.zoomChart(a.startDate,a.endDate)},zoomChart:function(a,b){var c=new Date(a),d=this,e=d.firstDate,k=d.lastDate,f=d.currentPeriod,h=d.categoryAxesSettings,g=h.minPeriod,n=d.panelsSettings,m=d.periodSelector,t=d.panels,r=d.comparedGraphs,v=d.scrollbarChart,w=d.firstDayOfWeek;if(e&&k){a||(a=e);b||(b=k);if(f){var l=AmCharts.extractPeriod(f);","a.getTime()==b.getTime()&&l!=g&&(b=AmCharts.changeDate(b,l.period,l.count),b.setTime(b.getTime()-1))}a.getTime()<e.getTime()&&(a=e);a.getTime()>k.getTime()&&(a=k);b.getTime()<e.getTime()&&(b=e);b.getTime()>k.getTime()&&(b=k);l=AmCharts.getItemIndex(g,h.groupToPeriods);h=f;f=d.choosePeriod(l,a,b);d.currentPeriod=f;var l=AmCharts.extractPeriod(f),y=AmCharts.getPeriodDuration(l.period,l.count);AmCharts.getPeriodDuration(g);1>b.getTime()-a.getTime()&&(a=new Date(b.getTime()-1));g=AmCharts.newDate(a);","d.extendToFullPeriod&&(g.getTime()-e.getTime()<.1*y&&(g=AmCharts.resetDateToMin(a,l.period,l.count,w)),k.getTime()-b.getTime()<.1*y&&(b=AmCharts.resetDateToMin(k,l.period,l.count,w),b=AmCharts.changeDate(b,l.period,l.count,!0)));for(e=0;e<t.length;e++)k=t[e],k.chartCursor&&k.chartCursor.panning&&(g=c);for(e=0;e<t.length;e++){k=t[e];if(f!=h){for(c=0;c<r.length;c++)y=r[c].graph,y.dataProvider=y.dataSet.agregatedDataProviders[f];c=k.categoryAxis;c.firstDayOfWeek=w;c.minPeriod=f;k.dataProvider=d.mainDataSet.agregatedDataProviders[f];","if(c=k.chartCursor)c.categoryBalloonDateFormat=d.chartCursorSettings.categoryBalloonDateFormat(l.period),k.showCategoryAxis||(c.categoryBalloonEnabled=!1);k.startTime=g.getTime();k.endTime=b.getTime();k.validateData(!0)}c=!1;k.chartCursor&&k.chartCursor.panning&&(c=!0);c||(k.startTime=void 0,k.endTime=void 0,k.zoomToDates(g,b));0<n.startDuration&&d.animationPlayed&&!c?(k.startDuration=0,k.animateAgain()):0<n.startDuration&&!c&&k.animateAgain()}d.animationPlayed=!0;AmCharts.extractPeriod(f);n=new Date(b);","v&&d.updateScrollbar&&(v.zoomToDates(a,n),d.skipScrollbarEvent=!0,setTimeout(function(){d.resetSkip.call(d)},100));d.updateScrollbar=!0;d.startDate=a;d.endDate=b;m&&m.zoom(a,b);if(a.getTime()!=d.previousStartDate.getTime()||b.getTime()!=d.previousEndDate.getTime())m={type:\"zoomed\"},m.startDate=a,m.endDate=b,m.chart=d,m.period=f,d.fire(m.type,m),d.previousStartDate=new Date(a),d.previousEndDate=new Date(b)}d.eventsHidden&&d.showHideEvents(!1);d.chartCreated||(f=\"init\",d.fire(f,{type:f,chart:d}));d.chartRendered||","(f=\"rendered\",d.fire(f,{type:f,chart:d}),d.chartRendered=!0);f=\"drawn\";d.fire(f,{type:f,chart:d});d.chartCreated=!0;d.animationPlayed=!0},resetSkip:function(){this.skipScrollbarEvent=!1},updateGraphs:function(){this.getSelections();if(0<this.dataSets.length){var a=this.panels;this.comparedGraphs=[];var b;for(b=0;b<a.length;b++){var c=a[b],d=c.valueAxes,e;for(e=0;e<d.length;e++){var k=d[e];k.prevLog&&(k.logarithmic=k.prevLog);k.recalculateToPercents=\"always\"==c.recalculateToPercents?!0:!1}d=this.mainDataSet;","e=this.comparedDataSets;k=c.stockGraphs;c.graphs=[];var f;for(f=0;f<k.length;f++){var h=k[f],h=AmCharts.processObject(h,AmCharts.StockGraph,this.theme);k[f]=h;if(!h.title||h.resetTitleOnDataSetChange)h.title=d.title,h.resetTitleOnDataSetChange=!0;h.useDataSetColors&&(h.lineColor=d.color,h.fillColors=void 0,h.bulletColor=void 0);var g=!1,n=d.fieldMappings,m;for(m=0;m<n.length;m++){var t=n[m],r=h.valueField;r&&t.toField==r&&(g=!0);(r=h.openField)&&t.toField==r&&(g=!0);(r=h.closeField)&&t.toField==r&&","(g=!0);(r=h.lowField)&&t.toField==r&&(g=!0)}g&&c.addGraph(h);r=!1;\"always\"==c.recalculateToPercents&&(r=!0);var v=c.stockLegend,w,l,y,z;v&&(v=AmCharts.processObject(v,AmCharts.StockLegend,this.theme),c.stockLegend=v,w=v.valueTextComparing,l=v.valueTextRegular,y=v.periodValueTextComparing,z=v.periodValueTextRegular);if(h.comparable){var x=e.length;0<x&&h.valueAxis.logarithmic&&\"never\"!=c.recalculateToPercents&&(h.valueAxis.logarithmic=!1,h.valueAxis.prevLog=!0);0<x&&\"whenComparing\"==c.recalculateToPercents&&","(h.valueAxis.recalculateToPercents=!0);v&&h.valueAxis&&!0===h.valueAxis.recalculateToPercents&&(r=!0);var B;for(B=0;B<x;B++){var A=e[B],q=h.comparedGraphs[A.id];q||(q=new AmCharts.AmGraph(this.theme),q.id=\"comparedGraph\"+B+\"_\"+f+A.id);q.periodValue=h.periodValue;q.dataSet=A;q.behindColumns=h.behindColumns;h.comparedGraphs[A.id]=q;q.seriesIdField=\"amCategoryIdField\";q.connect=h.connect;var s=h.compareField;s||(s=h.valueField);g=!1;n=A.fieldMappings;m;for(m=0;m<n.length;m++)t=n[m],t.toField==s&&(g=","!0);if(g){q.valueField=s;q.title=A.title;q.lineColor=A.color;h.compareGraphType&&(q.type=h.compareGraphType);g=h.compareGraphLineThickness;isNaN(g)||(q.lineThickness=g);g=h.compareGraphDashLength;isNaN(g)||(q.dashLength=g);g=h.compareGraphLineAlpha;isNaN(g)||(q.lineAlpha=g);g=h.compareGraphCornerRadiusTop;isNaN(g)||(q.cornerRadiusTop=g);g=h.compareGraphCornerRadiusBottom;isNaN(g)||(q.cornerRadiusBottom=g);g=h.compareGraphBalloonColor;isNaN(g)||(q.balloonColor=g);g=h.compareGraphBulletColor;isNaN(g)||","(q.bulletColor=g);if(g=h.compareGraphFillColors)q.fillColors=g;if(g=h.compareGraphNegativeFillColors)q.negativeFillColors=g;if(g=h.compareGraphFillAlphas)q.fillAlphas=g;if(g=h.compareGraphNegativeFillAlphas)q.negativeFillAlphas=g;if(g=h.compareGraphBullet)q.bullet=g;if(g=h.compareGraphNumberFormatter)q.numberFormatter=g;g=h.compareGraphPrecision;isNaN(g)||(q.precision=g);if(g=h.compareGraphBalloonText)q.balloonText=g;g=h.compareGraphBulletSize;isNaN(g)||(q.bulletSize=g);g=h.compareGraphBulletAlpha;","isNaN(g)||(q.bulletAlpha=g);g=h.compareGraphBulletBorderAlpha;isNaN(g)||(q.bulletBorderAlpha=g);if(g=h.compareGraphBulletBorderColor)q.bulletBorderColor=g;g=h.compareGraphBulletBorderThickness;isNaN(g)||(q.bulletBorderThickness=g);q.visibleInLegend=h.compareGraphVisibleInLegend;q.balloonFunction=h.compareGraphBalloonFunction;q.hideBulletsCount=h.hideBulletsCount;q.valueAxis=h.valueAxis;v&&(r&&w?(q.legendValueText=w,q.legendPeriodValueText=y):(l&&(q.legendValueText=l),q.legendPeriodValueText=z));c.showComparedOnTop?","c.graphs.push(q):c.graphs.unshift(q);this.comparedGraphs.push({graph:q,dataSet:A})}}}v&&(r&&w?(h.legendValueText=w,h.legendPeriodValueText=y):(l&&(h.legendValueText=l),h.legendPeriodValueText=z))}}}},choosePeriod:function(a,b,c){var d=this.categoryAxesSettings,e=d.groupToPeriods,k=e[a],e=e[a+1],f=AmCharts.extractPeriod(k),f=AmCharts.getPeriodDuration(f.period,f.count),h=b.getTime(),g=c.getTime(),d=d.maxSeries;return(g-h)/f>d&&0<d&&e?this.choosePeriod(a+1,b,c):k},handleCursorChange:function(a){var b=","a.target,c=a.position,d=a.zooming;a=a.index;var e=this.chartCursors,k;for(k=0;k<e.length;k++){var f=e[k];f!=b&&c&&(f.isZooming(d),f.previousMousePosition=NaN,f.forceShow=!0,f.initialMouse=b.initialMouse,f.selectionPosX=b.selectionPosX,f.setPosition(c,!1,a))}},getSelections:function(){var a=[],b=this.dataSets,c;for(c=0;c<b.length;c++){var d=b[c];d.compared&&a.push(d)}this.comparedDataSets=a;b=this.panels;for(c=0;c<b.length;c++)d=b[c],\"never\"!=d.recalculateToPercents&&0<a.length?d.hideDrawingIcons(!0):","d.drawingIconsEnabled&&d.hideDrawingIcons(!1)},addPanel:function(a){this.panels.push(a);AmCharts.removeChart(a);AmCharts.addChart(a)},addPanelAt:function(a,b){this.panels.splice(b,0,a);AmCharts.removeChart(a);AmCharts.addChart(a)},removePanel:function(a){var b=this.panels,c;for(c=b.length-1;0<=c;c--)if(b[c]==a){var d={type:\"panelRemoved\",panel:a,chart:this};this.fire(d.type,d);b.splice(c,1);a.destroy();a.clear()}},validateData:function(){this.resetDataParsed();this.updateDataSets();this.mainDataSet.compared=","!1;this.updateGraphs();this.updateData();var a=this.dataSetSelector;a&&a.write(a.div)},resetDataParsed:function(){var a=this.dataSets,b;for(b=0;b<a.length;b++)a[b].dataParsed=!1},validateNow:function(){this.skipDefault=!0;this.chartRendered=!1;this.clear(!0);this.write(this.div)},hideStockEvents:function(){this.showHideEvents(!1);this.eventsHidden=!0},showStockEvents:function(){this.showHideEvents(!0);this.eventsHidden=!1},showHideEvents:function(a){var b=this.panels,c;for(c=0;c<b.length;c++){var d=","b[c].graphs,e;for(e=0;e<d.length;e++){var k=d[e];!0===a?k.showBullets():k.hideBullets()}}},invalidateSize:function(){var a=this;clearTimeout(a.validateTO);var b=setTimeout(function(){a.validateNow()},5);a.validateTO=b},measure:function(){var a=this.div,b=a.offsetWidth,c=a.offsetHeight;a.clientHeight&&(b=a.clientWidth,c=a.clientHeight);this.divRealWidth=b;this.divRealHeight=c},clear:function(a){var b=this.panels,c;if(b)for(c=0;c<b.length;c++){var d=b[c];a||(d.cleanChart(),d.destroy());d.clear(a)}(b=","this.scrollbarChart)&&b.clear();if(b=this.div)b.innerHTML=\"\";a||(this.div=null,AmCharts.deleteObject(this))}});AmCharts.StockEvent=AmCharts.Class({construct:function(){}});AmCharts.DataSet=AmCharts.Class({construct:function(){this.cname=\"DataSet\";this.fieldMappings=[];this.dataProvider=[];this.agregatedDataProviders=[];this.stockEvents=[];this.compared=!1;this.showInCompare=this.showInSelect=!0}});AmCharts.PeriodSelector=AmCharts.Class({construct:function(a){this.cname=\"PeriodSelector\";this.theme=a;this.createEvents(\"changed\");this.inputFieldsEnabled=!0;this.position=\"bottom\";this.width=180;this.fromText=\"From: \";this.toText=\"to: \";this.periodsText=\"Zoom: \";this.periods=[];this.inputFieldWidth=100;this.dateFormat=\"DD-MM-YYYY\";this.hideOutOfScopePeriods=!0;AmCharts.applyTheme(this,a,this.cname)},zoom:function(a,b){var c=this.chart;this.inputFieldsEnabled&&(this.startDateField.value=AmCharts.formatDate(a,","this.dateFormat,c),this.endDateField.value=AmCharts.formatDate(b,this.dateFormat,c));this.markButtonAsSelected()},write:function(a){var b=this;a.className=\"amChartsPeriodSelector\";var c=b.width,d=b.position;b.width=void 0;b.position=void 0;AmCharts.applyStyles(a.style,b);b.width=c;b.position=d;b.div=a;a.innerHTML=\"\";c=b.theme;d=b.position;d=\"top\"==d||\"bottom\"==d?!1:!0;b.vertical=d;var e=0,k=0;if(b.inputFieldsEnabled){var f=document.createElement(\"div\");a.appendChild(f);var h=document.createTextNode(AmCharts.lang.fromText||","b.fromText);f.appendChild(h);d?AmCharts.addBr(f):(f.style.styleFloat=\"left\",f.style.display=\"inline\");var g=document.createElement(\"input\");g.className=\"amChartsInputField\";c&&AmCharts.applyStyles(g.style,c.PeriodInputField);g.style.textAlign=\"center\";g.onblur=function(a){b.handleCalChange(a)};AmCharts.isNN&&g.addEventListener(\"keypress\",function(a){b.handleCalendarChange.call(b,a)},!0);AmCharts.isIE&&g.attachEvent(\"onkeypress\",function(a){b.handleCalendarChange.call(b,a)});f.appendChild(g);b.startDateField=","g;if(d)h=b.width-6+\"px\",AmCharts.addBr(f);else{var h=b.inputFieldWidth+\"px\",n=document.createTextNode(\" \");f.appendChild(n)}g.style.width=h;g=document.createTextNode(AmCharts.lang.toText||b.toText);f.appendChild(g);d&&AmCharts.addBr(f);g=document.createElement(\"input\");g.className=\"amChartsInputField\";c&&AmCharts.applyStyles(g.style,c.PeriodInputField);g.style.textAlign=\"center\";g.onblur=function(){b.handleCalChange()};AmCharts.isNN&&g.addEventListener(\"keypress\",function(a){b.handleCalendarChange.call(b,","a)},!0);AmCharts.isIE&&g.attachEvent(\"onkeypress\",function(a){b.handleCalendarChange.call(b,a)});f.appendChild(g);b.endDateField=g;d?AmCharts.addBr(f):e=g.offsetHeight+2;h&&(g.style.width=h)}f=b.periods;if(AmCharts.ifArray(f)){h=document.createElement(\"div\");d||(h.style.cssFloat=\"right\",h.style.styleFloat=\"right\",h.style.display=\"inline\");a.appendChild(h);d&&AmCharts.addBr(h);a=document.createTextNode(AmCharts.lang.periodsText||b.periodsText);h.appendChild(a);b.periodContainer=h;var m;for(a=0;a<f.length;a++)g=","f[a],m=document.createElement(\"input\"),m.type=\"button\",m.value=g.label,m.period=g.period,m.count=g.count,m.periodObj=g,m.className=\"amChartsButton\",c&&AmCharts.applyStyles(m.style,c.PeriodButton),d&&(m.style.width=b.width-1+\"px\"),m.style.boxSizing=\"border-box\",h.appendChild(m),b.addEventListeners(m),g.button=m;!d&&m&&(k=m.offsetHeight);b.offsetHeight=Math.max(e,k)}},addEventListeners:function(a){var b=this;AmCharts.isNN&&a.addEventListener(\"click\",function(a){b.handlePeriodChange.call(b,a)},!0);AmCharts.isIE&&","a.attachEvent(\"onclick\",function(a){b.handlePeriodChange.call(b,a)})},getPeriodDates:function(){var a=this.periods,b;for(b=0;b<a.length;b++)this.selectPeriodButton(a[b],!0)},handleCalendarChange:function(a){13==a.keyCode&&this.handleCalChange(a)},handleCalChange:function(a){var b=this.dateFormat,c=AmCharts.stringToDate(this.startDateField.value,b),b=this.chart.getLastDate(AmCharts.stringToDate(this.endDateField.value,b));try{this.startDateField.blur(),this.endDateField.blur()}catch(d){}if(c&&b){var e=","{type:\"changed\"};e.startDate=c;e.endDate=b;e.chart=this.chart;e.event=a;this.fire(e.type,e)}},handlePeriodChange:function(a){this.selectPeriodButton((a.srcElement?a.srcElement:a.target).periodObj,!1,a)},setRanges:function(a,b){this.firstDate=a;this.lastDate=b;this.getPeriodDates()},selectPeriodButton:function(a,b,c){var d=a.button,e=d.count,k=d.period,f,h,g=this.firstDate,n=this.lastDate,m,t=this.theme;g&&n&&(\"MAX\"==k?(f=g,h=n):\"YTD\"==k?(f=new Date,f.setMonth(0,1),f.setHours(0,0,0,0),0===e&&f.setDate(f.getDate()-","1),h=this.lastDate):\"YYYY\"==k||\"MM\"==k?this.selectFromStart?(f=g,h=new Date(g),h.setMonth(h.getMonth()+e)):(f=new Date(n),AmCharts.changeDate(f,k,e,!1),f.setDate(f.getDate()-1),h=n):(m=AmCharts.getPeriodDuration(k,e),this.selectFromStart?(f=g,h=new Date(g.getTime()+m-1)):(f=new Date(n.getTime()-m+1),h=n)),a.startTime=f.getTime(),this.hideOutOfScopePeriods&&(b&&a.startTime<g.getTime()?d.style.display=\"none\":d.style.display=\"inline\"),f.getTime()>n.getTime()&&(m=AmCharts.getPeriodDuration(\"DD\",1),f=","new Date(n.getTime()-m)),f.getTime()<g.getTime()&&(f=g),\"YTD\"==k&&(a.startTime=f.getTime()),a.endTime=h.getTime(),b||(this.skipMark=!0,this.unselectButtons(),d.className=\"amChartsButtonSelected\",t&&AmCharts.applyStyles(d.style,t.PeriodButtonSelected),a={type:\"changed\"},a.startDate=f,a.endDate=h,a.predefinedPeriod=k,a.chart=this.chart,a.count=e,a.event=c,this.fire(a.type,a)))},markButtonAsSelected:function(){if(!this.skipMark){var a=this.chart,b=this.periods,c=a.startDate.getTime(),a=a.endDate.getTime(),","d=this.lastDate.getTime();a>d&&(a=d);d=this.theme;this.unselectButtons();var e;for(e=b.length-1;0<=e;e--){var k=b[e],f=k.button;k.startTime&&k.endTime&&c==k.startTime&&a==k.endTime&&(this.unselectButtons(),f.className=\"amChartsButtonSelected\",d&&AmCharts.applyStyles(f.style,d.PeriodButtonSelected))}}this.skipMark=!1},unselectButtons:function(){var a=this.periods,b,c=this.theme;for(b=a.length-1;0<=b;b--){var d=a[b].button;d.className=\"amChartsButton\";c&&AmCharts.applyStyles(d.style,c.PeriodButton)}},","setDefaultPeriod:function(){var a=this.periods,b;for(b=0;b<a.length;b++){var c=a[b];c.selected&&this.selectPeriodButton(c)}}});AmCharts.StockGraph=AmCharts.Class({inherits:AmCharts.AmGraph,construct:function(a){AmCharts.StockGraph.base.construct.call(this,a);this.cname=\"StockGraph\";this.useDataSetColors=!0;this.periodValue=\"Close\";this.compareGraphType=\"line\";this.compareGraphVisibleInLegend=!0;this.comparable=this.resetTitleOnDataSetChange=!1;this.comparedGraphs={};this.showEventsOnComparedGraphs=!1;AmCharts.applyTheme(this,a,this.cname)}});AmCharts.StockPanel=AmCharts.Class({inherits:AmCharts.AmSerialChart,construct:function(a){AmCharts.StockPanel.base.construct.call(this,a);this.cname=\"StockPanel\";this.theme=a;this.showCategoryAxis=this.showComparedOnTop=!0;this.recalculateToPercents=\"whenComparing\";this.panelHeaderPaddingBottom=this.panelHeaderPaddingLeft=this.panelHeaderPaddingRight=this.panelHeaderPaddingTop=0;this.trendLineAlpha=1;this.trendLineColor=\"#00CC00\";this.trendLineColorHover=\"#CC0000\";this.trendLineThickness=2;this.trendLineDashLength=","0;this.stockGraphs=[];this.drawingIconsEnabled=!1;this.iconSize=18;this.autoMargins=this.allowTurningOff=this.eraseAll=this.erasingEnabled=this.drawingEnabled=!1;AmCharts.applyTheme(this,a,this.cname)},initChart:function(a){AmCharts.StockPanel.base.initChart.call(this,a);this.drawingIconsEnabled&&this.createDrawIcons();(a=this.chartCursor)&&this.listenTo(a,\"draw\",this.handleDraw)},addStockGraph:function(a){this.stockGraphs.push(a);return a},handleCursorZoom:function(a){this.chartCursor&&this.chartCursor.pan&&","AmCharts.StockPanel.base.handleCursorZoom.call(this,a)},removeStockGraph:function(a){var b=this.stockGraphs,c;for(c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1)},createDrawIcons:function(){var a=this,b=a.iconSize,c=a.container,d=a.pathToImages,e=a.realWidth-2*b-1-a.marginRight,k=AmCharts.rect(c,b,b,\"#000\",.005),f=AmCharts.rect(c,b,b,\"#000\",.005);f.translate(b+1,0);var h=c.image(d+\"pencilIcon.gif\",0,0,b,b);a.pencilButton=h;f.setAttr(\"cursor\",\"pointer\");k.setAttr(\"cursor\",\"pointer\");k.mouseup(function(){a.handlePencilClick()});","var g=c.image(d+\"pencilIconH.gif\",0,0,b,b);a.pencilButtonPushed=g;a.drawingEnabled||g.hide();var n=c.image(d+\"eraserIcon.gif\",b+1,0,b,b);a.eraserButton=n;f.mouseup(function(){a.handleEraserClick()});k.touchend&&(k.touchend(function(){a.handlePencilClick()}),f.touchend(function(){a.handleEraserClick()}));b=c.image(d+\"eraserIconH.gif\",b+1,0,b,b);a.eraserButtonPushed=b;a.erasingEnabled||b.hide();c=c.set([h,g,n,b,k,f]);c.translate(e,1);this.hideIcons&&c.hide()},handlePencilClick:function(){var a=!this.drawingEnabled;","this.disableDrawing(!a);this.erasingEnabled=!1;var b=this.eraserButtonPushed;b&&b.hide();b=this.pencilButtonPushed;a?b&&b.show():(b&&b.hide(),this.setMouseCursor(\"auto\"))},disableDrawing:function(a){this.drawingEnabled=!a;var b=this.chartCursor;this.stockChart.enableCursors(a);b&&b.enableDrawing(!a)},handleEraserClick:function(){this.disableDrawing(!0);var a=this.pencilButtonPushed;a&&a.hide();a=this.eraserButtonPushed;if(this.eraseAll){var a=this.trendLines,b;for(b=a.length-1;0<=b;b--){var c=a[b];","c.isProtected||this.removeTrendLine(c)}this.validateNow()}else(this.erasingEnabled=b=!this.erasingEnabled)?(a&&a.show(),this.setTrendColorHover(this.trendLineColorHover),this.setMouseCursor(\"auto\")):(a&&a.hide(),this.setTrendColorHover())},setTrendColorHover:function(a){var b=this.trendLines,c;for(c=b.length-1;0<=c;c--){var d=b[c];d.isProtected||(d.rollOverColor=a)}},handleDraw:function(a){var b=this.drawOnAxis;AmCharts.isString(b)&&(b=this.getValueAxisById(b));b||(b=this.valueAxes[0]);this.drawOnAxis=","b;var c=this.categoryAxis,d=a.initialX,e=a.finalX,k=a.initialY;a=a.finalY;var f=new AmCharts.TrendLine(this.theme);f.initialDate=c.coordinateToDate(d);f.finalDate=c.coordinateToDate(e);f.initialValue=b.coordinateToValue(k);f.finalValue=b.coordinateToValue(a);f.lineAlpha=this.trendLineAlpha;f.lineColor=this.trendLineColor;f.lineThickness=this.trendLineThickness;f.dashLength=this.trendLineDashLength;f.valueAxis=b;f.categoryAxis=c;this.addTrendLine(f);this.listenTo(f,\"click\",this.handleTrendClick);this.validateNow()},","hideDrawingIcons:function(a){(this.hideIcons=a)&&this.disableDrawing(a)},handleTrendClick:function(a){this.erasingEnabled&&(a=a.trendLine,this.eraseAll||a.isProtected||this.removeTrendLine(a),this.validateNow())},handleWheelReal:function(a,b){var c=this.scrollbarChart;if(!this.wheelBusy&&c){var d=1;b&&(d=-1);var c=c.chartScrollbar,e=this.categoryAxis.minDuration();0>a?(d=this.startTime+d*e,e=this.endTime+1*e):(d=this.startTime-d*e,e=this.endTime-1*e);d<this.firstTime&&(d=this.firstTime);e>this.lastTime&&","(e=this.lastTime);d<e&&c.timeZoom(d,e,!0)}}});AmCharts.CategoryAxesSettings=AmCharts.Class({construct:function(a){this.cname=\"CategoryAxesSettings\";this.minPeriod=\"DD\";this.equalSpacing=!1;this.axisHeight=28;this.tickLength=this.axisAlpha=0;this.gridCount=10;this.maxSeries=150;this.groupToPeriods=\"ss 10ss 30ss mm 10mm 30mm hh DD WW MM YYYY\".split(\" \");this.markPeriodChange=this.autoGridCount=!0;AmCharts.applyTheme(this,a,this.cname)}});AmCharts.ChartCursorSettings=AmCharts.Class({construct:function(a){this.cname=\"ChartCursorSettings\";this.enabled=!0;this.bulletsEnabled=this.valueBalloonsEnabled=!1;this.categoryBalloonDateFormats=[{period:\"YYYY\",format:\"YYYY\"},{period:\"MM\",format:\"MMM, YYYY\"},{period:\"WW\",format:\"MMM DD, YYYY\"},{period:\"DD\",format:\"MMM DD, YYYY\"},{period:\"hh\",format:\"JJ:NN\"},{period:\"mm\",format:\"JJ:NN\"},{period:\"ss\",format:\"JJ:NN:SS\"},{period:\"fff\",format:\"JJ:NN:SS\"}];AmCharts.applyTheme(this,a,this.cname)},categoryBalloonDateFormat:function(a){var b=","this.categoryBalloonDateFormats,c,d;for(d=0;d<b.length;d++)b[d].period==a&&(c=b[d].format);return c}});AmCharts.ChartScrollbarSettings=AmCharts.Class({construct:function(a){this.cname=\"ChartScrollbarSettings\";this.height=40;this.enabled=!0;this.color=\"#FFFFFF\";this.updateOnReleaseOnly=this.autoGridCount=!0;this.hideResizeGrips=!1;this.position=\"bottom\";this.minDistance=1;AmCharts.applyTheme(this,a,this.cname)}});AmCharts.LegendSettings=AmCharts.Class({construct:function(a){this.cname=\"LegendSettings\";this.marginBottom=this.marginTop=0;this.usePositiveNegativeOnPercentsOnly=!0;this.positiveValueColor=\"#00CC00\";this.negativeValueColor=\"#CC0000\";this.autoMargins=this.equalWidths=this.textClickEnabled=!1;AmCharts.applyTheme(this,a,this.cname)}});AmCharts.PanelsSettings=AmCharts.Class({construct:function(a){this.cname=\"PanelsSettings\";this.marginBottom=this.marginTop=this.marginRight=this.marginLeft=0;this.backgroundColor=\"#FFFFFF\";this.backgroundAlpha=0;this.panelSpacing=8;this.panEventsEnabled=!0;this.creditsPosition=\"top-right\";AmCharts.applyTheme(this,a,this.cname)}});AmCharts.StockEventsSettings=AmCharts.Class({construct:function(a){this.cname=\"StockEventsSettings\";this.type=\"sign\";this.backgroundAlpha=1;this.backgroundColor=\"#DADADA\";this.borderAlpha=1;this.borderColor=\"#888888\";this.balloonColor=this.rollOverColor=\"#CC0000\";AmCharts.applyTheme(this,a,this.cname)}});AmCharts.ValueAxesSettings=AmCharts.Class({construct:function(a){this.cname=\"ValueAxesSettings\";this.tickLength=0;this.showFirstLabel=this.autoGridCount=this.inside=!0;this.showLastLabel=!1;this.axisAlpha=0;AmCharts.applyTheme(this,a,this.cname)}});AmCharts.getItemIndex=function(a,b){var c=-1,d;for(d=0;d<b.length;d++)a==b[d]&&(c=d);return c};AmCharts.addBr=function(a){a.appendChild(document.createElement(\"br\"))};AmCharts.applyStyles=function(a,b){if(b&&a)for(var c in a){var d=c,e=b[d];if(void 0!==e)try{a[d]=e}catch(k){}}};","AmCharts.parseStockData=function(a,b,c,d,e){(new Date).getTime();var k={},f=a.dataProvider,h=a.categoryField;if(h){var g=AmCharts.getItemIndex(b,c),n=c.length,m,t=f.length,r,v={};for(m=g;m<n;m++)r=c[m],k[r]=[];var w={},l=a.fieldMappings,y=l.length;for(m=0;m<t;m++){var z=f[m],x=z[h],x=x instanceof Date?AmCharts.newDate(x,b):e?AmCharts.stringToDate(x,e):new Date(x),B=x.getTime(),A={};for(r=0;r<y;r++)A[l[r].toField]=z[l[r].fromField];var q;for(q=g;q<n;q++){r=c[q];var s=AmCharts.extractPeriod(r),C=s.period,","E=s.count,u,p;if(q==g||B>=v[r]||!v[r]){w[r]={};w[r].amCategoryIdField=String(AmCharts.resetDateToMin(x,C,E,d).getTime());var D;for(D=0;D<y;D++)s=l[D].toField,u=w[r],p=Number(A[s]),u[s+\"Count\"]=0,u[s+\"Sum\"]=0,isNaN(p)||(u[s+\"Open\"]=p,u[s+\"Sum\"]=p,u[s+\"High\"]=p,u[s+\"Low\"]=p,u[s+\"Close\"]=p,u[s+\"Count\"]=1,u[s+\"Average\"]=p);u.dataContext=z;k[r].push(w[r]);q>g&&(s=AmCharts.newDate(x,b),s=AmCharts.changeDate(s,C,E,!0),s=AmCharts.resetDateToMin(s,C,E,d),v[r]=s.getTime());if(q==g)for(var F in z)z.hasOwnProperty(F)&&","(w[r][F]=z[F]);w[r][h]=AmCharts.newDate(x,b)}else for(C=0;C<y;C++)s=l[C].toField,u=w[r],m==t-1&&(u[h]=AmCharts.newDate(x,b)),p=Number(A[s]),isNaN(p)||(isNaN(u[s+\"Low\"])&&(u[s+\"Low\"]=p),p<u[s+\"Low\"]&&(u[s+\"Low\"]=p),isNaN(u[s+\"High\"])&&(u[s+\"High\"]=p),p>u[s+\"High\"]&&(u[s+\"High\"]=p),u[s+\"Close\"]=p,E=AmCharts.getDecimals(u[s+\"Sum\"]),D=AmCharts.getDecimals(p),u[s+\"Sum\"]+=p,u[s+\"Sum\"]=AmCharts.roundTo(u[s+\"Sum\"],Math.max(E,D)),u[s+\"Count\"]++,u[s+\"Average\"]=u[s+\"Sum\"]/u[s+\"Count\"])}}}a.agregatedDataProviders=","k};","AmCharts.parseEvents=function(a,b,c,d,e,k){var f=a.stockEvents,h=a.agregatedDataProviders,g=b.length,n,m,t,r,v,w,l,y;for(n=0;n<g;n++){w=b[n];v=w.graphs;t=v.length;var z;for(m=0;m<t;m++)r=v[m],r.customBulletField=\"amCustomBullet\"+r.id+\"_\"+w.id,r.bulletConfigField=\"amCustomBulletConfig\"+r.id+\"_\"+w.id;for(var x=0;x<f.length;x++)if(l=f[x],z=l.graph,AmCharts.isString(z)&&(z=AmCharts.getObjById(v,z)))l.graph=z}for(var B in h)if(h.hasOwnProperty(B)){z=h[B];var A=AmCharts.extractPeriod(B),q=z.length,s;for(s=","0;s<q;s++){var C=z[s];n=C[a.categoryField];y=n instanceof Date;k&&!y&&(n=AmCharts.stringToDate(n,k));var E=n.getTime();v=A.period;var x=A.count,u;u=\"fff\"==v?n.getTime()+1:AmCharts.resetDateToMin(AmCharts.changeDate(new Date(n),A.period,A.count),v,x,d).getTime();for(n=0;n<g;n++)for(w=b[n],v=w.graphs,t=v.length,m=0;m<t;m++){r=v[m];var p={};p.eventDispatcher=e;p.eventObjects=[];p.letters=[];p.descriptions=[];p.shapes=[];p.backgroundColors=[];p.backgroundAlphas=[];p.borderColors=[];p.borderAlphas=[];","p.colors=[];p.rollOverColors=[];p.showOnAxis=[];p.values=[];p.showAts=[];for(x=0;x<f.length;x++){l=f[x];y=l.date instanceof Date;k&&!y&&(l.date=AmCharts.stringToDate(l.date,k));y=l.date.getTime();var D=!1;l.graph&&(l.graph.showEventsOnComparedGraphs&&l.graph.comparedGraphs[a.id]&&(D=!0),(r==l.graph||D)&&y>=E&&y<u&&(p.eventObjects.push(l),p.letters.push(l.text),p.descriptions.push(l.description),l.type?p.shapes.push(l.type):p.shapes.push(c.type),void 0!==l.backgroundColor?p.backgroundColors.push(l.backgroundColor):","p.backgroundColors.push(c.backgroundColor),isNaN(l.backgroundAlpha)?p.backgroundAlphas.push(c.backgroundAlpha):p.backgroundAlphas.push(l.backgroundAlpha),isNaN(l.borderAlpha)?p.borderAlphas.push(c.borderAlpha):p.borderAlphas.push(l.borderAlpha),void 0!==l.borderColor?p.borderColors.push(l.borderColor):p.borderColors.push(c.borderColor),void 0!==l.rollOverColor?p.rollOverColors.push(l.rollOverColor):p.rollOverColors.push(c.rollOverColor),void 0!==l.showAt?p.showAts.push(l.showAt):p.showAts.push(c.showAt),","p.colors.push(l.color),p.values.push(l.value),!l.panel&&l.graph&&(l.panel=l.graph.chart),p.showOnAxis.push(l.showOnAxis),p.date=new Date(l.date)));0<p.shapes.length&&(l=\"amCustomBullet\"+r.id+\"_\"+w.id,y=\"amCustomBulletConfig\"+r.id+\"_\"+w.id,C[l]=AmCharts.StackedBullet,C[y]=p)}}}}};AmCharts.StockLegend=AmCharts.Class({inherits:AmCharts.AmLegend,construct:function(a){AmCharts.StockLegend.base.construct.call(this,a);this.cname=\"StockLegend\";this.valueTextComparing=\"[[percents.value]]%\";this.valueTextRegular=\"[[value]]\";AmCharts.applyTheme(this,a,this.cname)},drawLegend:function(){var a=this;AmCharts.StockLegend.base.drawLegend.call(a);var b=a.chart;if(b.allowTurningOff){var c=a.container,d=c.image(b.pathToImages+\"xIcon.gif\",b.realWidth-17,3,17,17),b=c.image(b.pathToImages+\"xIconH.gif\",","b.realWidth-17,3,17,17);b.hide();a.xButtonHover=b;d.mouseup(function(){a.handleXClick()}).mouseover(function(){a.handleXOver()});b.mouseup(function(){a.handleXClick()}).mouseout(function(){a.handleXOut()})}},handleXOver:function(){this.xButtonHover.show()},handleXOut:function(){this.xButtonHover.hide()},handleXClick:function(){var a=this.chart,b=a.stockChart;b.removePanel(a);b.validateNow()}});AmCharts.DataSetSelector=AmCharts.Class({construct:function(a){this.cname=\"DataSetSelector\";this.theme=a;this.createEvents(\"dataSetSelected\",\"dataSetCompared\",\"dataSetUncompared\");this.position=\"left\";this.selectText=\"Select:\";this.comboBoxSelectText=\"Select...\";this.compareText=\"Compare to:\";this.width=180;this.dataProvider=[];this.listHeight=150;this.listCheckBoxSize=14;this.rollOverBackgroundColor=\"#b2e1ff\";this.selectedBackgroundColor=\"#7fceff\";AmCharts.applyTheme(this,a,this.cname)},write:function(a){var b=","this,c,d=b.theme;a.className=\"amChartsDataSetSelector\";var e=b.width;c=b.position;b.width=void 0;b.position=void 0;AmCharts.applyStyles(a.style,b);b.div=a;b.width=e;b.position=c;a.innerHTML=\"\";var e=b.position,k;k=\"top\"==e||\"bottom\"==e?!1:!0;b.vertical=k;var f;k&&(f=b.width+\"px\");var e=b.dataProvider,h,g;if(1<b.countDataSets(\"showInSelect\")){c=document.createTextNode(AmCharts.lang.selectText||b.selectText);a.appendChild(c);k&&AmCharts.addBr(a);var n=document.createElement(\"select\");f&&(n.style.width=","f);b.selectCB=n;d&&AmCharts.applyStyles(n.style,d.DataSetSelect);a.appendChild(n);AmCharts.isNN&&n.addEventListener(\"change\",function(a){b.handleDataSetChange.call(b,a)},!0);AmCharts.isIE&&n.attachEvent(\"onchange\",function(a){b.handleDataSetChange.call(b,a)});for(c=0;c<e.length;c++)if(h=e[c],!0===h.showInSelect){g=document.createElement(\"option\");g.text=h.title;g.value=c;h==b.chart.mainDataSet&&(g.selected=!0);try{n.add(g,null)}catch(m){n.add(g)}}b.offsetHeight=n.offsetHeight}if(0<b.countDataSets(\"showInCompare\")&&","1<e.length)if(k?(AmCharts.addBr(a),AmCharts.addBr(a)):(c=document.createTextNode(\" \"),a.appendChild(c)),c=document.createTextNode(AmCharts.lang.compareText||b.compareText),a.appendChild(c),g=b.listCheckBoxSize,k){AmCharts.addBr(a);f=document.createElement(\"div\");a.appendChild(f);f.className=\"amChartsCompareList\";d&&AmCharts.applyStyles(f.style,d.DataSetCompareList);f.style.overflow=\"auto\";f.style.overflowX=\"hidden\";f.style.width=b.width-2+\"px\";f.style.maxHeight=b.listHeight+\"px\";for(c=0;c<e.length;c++)h=","e[c],!0===h.showInCompare&&h!=b.chart.mainDataSet&&(d=document.createElement(\"div\"),d.style.padding=\"4px\",d.style.position=\"relative\",d.name=\"amCBContainer\",d.dataSet=h,d.style.height=g+\"px\",h.compared&&(d.style.backgroundColor=b.selectedBackgroundColor),f.appendChild(d),k=document.createElement(\"div\"),k.style.width=g+\"px\",k.style.height=g+\"px\",k.style.position=\"absolute\",k.style.backgroundColor=h.color,d.appendChild(k),k=document.createElement(\"div\"),k.style.width=\"100%\",k.style.position=\"absolute\",","k.style.left=g+10+\"px\",d.appendChild(k),h=document.createTextNode(h.title),k.style.whiteSpace=\"nowrap\",k.style.cursor=\"default\",k.appendChild(h),b.addEventListeners(d));AmCharts.addBr(a);AmCharts.addBr(a)}else{d=document.createElement(\"select\");b.compareCB=d;f&&(d.style.width=f);a.appendChild(d);AmCharts.isNN&&d.addEventListener(\"change\",function(a){b.handleCBSelect.call(b,a)},!0);AmCharts.isIE&&d.attachEvent(\"onchange\",function(a){b.handleCBSelect.call(b,a)});g=document.createElement(\"option\");g.text=","AmCharts.lang.comboBoxSelectText||b.comboBoxSelectText;try{d.add(g,null)}catch(t){d.add(g)}for(c=0;c<e.length;c++)if(h=e[c],!0===h.showInCompare&&h!=b.chart.mainDataSet){g=document.createElement(\"option\");g.text=h.title;g.value=c;h.compared&&(g.selected=!0);try{d.add(g,null)}catch(r){d.add(g)}}b.offsetHeight=d.offsetHeight}},addEventListeners:function(a){var b=this;AmCharts.isNN&&(a.addEventListener(\"mouseover\",function(a){b.handleRollOver.call(b,a)},!0),a.addEventListener(\"mouseout\",function(a){b.handleRollOut.call(b,","a)},!0),a.addEventListener(\"click\",function(a){b.handleClick.call(b,a)},!0));AmCharts.isIE&&(a.attachEvent(\"onmouseout\",function(a){b.handleRollOut.call(b,a)}),a.attachEvent(\"onmouseover\",function(a){b.handleRollOver.call(b,a)}),a.attachEvent(\"onclick\",function(a){b.handleClick.call(b,a)}))},handleDataSetChange:function(){var a=this.selectCB,a=this.dataProvider[a.options[a.selectedIndex].value],b=this.chart;b.mainDataSet=a;b.zoomOutOnDataSetChange&&(b.startDate=void 0,b.endDate=void 0);b.validateData();","a={type:\"dataSetSelected\",dataSet:a,chart:this.chart};this.fire(a.type,a)},handleRollOver:function(a){a=this.getRealDiv(a);a.dataSet.compared||(a.style.backgroundColor=this.rollOverBackgroundColor)},handleRollOut:function(a){a=this.getRealDiv(a);a.dataSet.compared||(a.style.removeProperty&&a.style.removeProperty(\"background-color\"),a.style.removeAttribute&&a.style.removeAttribute(\"backgroundColor\"))},handleCBSelect:function(a){var b=this.compareCB,c=this.dataProvider,d,e;for(d=0;d<c.length;d++)e=","c[d],e.compared&&(a={type:\"dataSetUncompared\",dataSet:e}),e.compared=!1;c=b.selectedIndex;0<c&&(e=this.dataProvider[b.options[c].value],e.compared||(a={type:\"dataSetCompared\",dataSet:e}),e.compared=!0);b=this.chart;b.validateData();a.chart=b;this.fire(a.type,a)},handleClick:function(a){a=this.getRealDiv(a).dataSet;!0===a.compared?(a.compared=!1,a={type:\"dataSetUncompared\",dataSet:a}):(a.compared=!0,a={type:\"dataSetCompared\",dataSet:a});var b=this.chart;b.validateData();a.chart=b;this.fire(a.type,","a)},getRealDiv:function(a){a||(a=window.event);a=a.currentTarget?a.currentTarget:a.srcElement;\"amCBContainer\"==a.parentNode.name&&(a=a.parentNode);return a},countDataSets:function(a){var b=this.dataProvider,c=0,d;for(d=0;d<b.length;d++)!0===b[d][a]&&c++;return c}});AmCharts.StackedBullet=AmCharts.Class({construct:function(){this.fontSize=11;this.stackDown=!1;this.mastHeight=8;this.shapes=[];this.backgroundColors=[];this.backgroundAlphas=[];this.borderAlphas=[];this.borderColors=[];this.colors=[];this.rollOverColors=[];this.showOnAxiss=[];this.values=[];this.showAts=[];this.textColor=\"#000000\";this.nextY=0;this.size=16},parseConfig:function(){var a=this.bulletConfig;this.eventObjects=a.eventObjects;this.letters=a.letters;this.shapes=a.shapes;this.backgroundColors=","a.backgroundColors;this.backgroundAlphas=a.backgroundAlphas;this.borderColors=a.borderColors;this.borderAlphas=a.borderAlphas;this.colors=a.colors;this.rollOverColors=a.rollOverColors;this.date=a.date;this.showOnAxiss=a.showOnAxis;this.axisCoordinate=a.minCoord;this.showAts=a.showAts;this.values=a.values},write:function(a){this.parseConfig();this.container=a;this.bullets=[];if(this.graph){var b=this.graph.fontSize;b&&(this.fontSize=b)}b=this.letters.length;(this.mastHeight+2*(this.fontSize/2+2))*","b>this.availableSpace&&(this.stackDown=!0);this.set=a.set();a=0;var c;for(c=0;c<b;c++)this.shape=this.shapes[c],this.backgroundColor=this.backgroundColors[c],this.backgroundAlpha=this.backgroundAlphas[c],this.borderAlpha=this.borderAlphas[c],this.borderColor=this.borderColors[c],this.rollOverColor=this.rollOverColors[c],this.showOnAxis=this.showOnAxiss[c],this.color=this.colors[c],this.value=this.values[c],this.showAt=this.showAts[c],this.addLetter(this.letters[c],a,c),this.showOnAxis||a++},addLetter:function(a,","b,c){var d=this.container;b=d.set();var e=-1,k=this.stackDown,f=this.graph.valueAxis;this.showOnAxis&&(this.stackDown=f.reversed?!0:!1);this.stackDown&&(e=1);var h=0,g=0,n=0,m,t=this.fontSize,r=this.mastHeight,v=this.shape,w=this.textColor;void 0!==this.color&&(w=this.color);void 0===a&&(a=\"\");a=AmCharts.text(d,a,w,this.chart.fontFamily,this.fontSize);a.node.style.pointerEvents=\"none\";d=a.getBBox();this.labelWidth=w=d.width;this.labelHeight=d.height;var l,d=0;switch(v){case \"sign\":l=this.drawSign(b);","h=r+4+t/2;d=r+t+4;1==e&&(h-=4);break;case \"flag\":l=this.drawFlag(b);g=w/2+3;h=r+4+t/2;d=r+t+4;1==e&&(h-=4);break;case \"pin\":l=this.drawPin(b);h=6+t/2;d=t+8;break;case \"triangleUp\":l=this.drawTriangleUp(b);h=-t-1;d=t+4;e=-1;break;case \"triangleDown\":l=this.drawTriangleDown(b);h=t+1;d=t+4;e=-1;break;case \"triangleLeft\":l=this.drawTriangleLeft(b);g=t;d=t+4;e=-1;break;case \"triangleRight\":l=this.drawTriangleRight(b);g=-t;e=-1;d=t+4;break;case \"arrowUp\":l=this.drawArrowUp(b);a.hide();break;case \"arrowDown\":l=","this.drawArrowDown(b);a.hide();d=t+4;break;case \"text\":e=-1;l=this.drawTextBackground(b,a);h=this.labelHeight+3;d=t+10;break;case \"round\":l=this.drawCircle(b)}this.bullets[c]=l;this.showOnAxis?(m=isNaN(this.nextAxisY)?this.axisCoordinate:this.nextY,n=h*e,this.nextAxisY=m+e*d):this.value?(m=this.value,f.recalculateToPercents&&(m=m/f.recBaseValue*100-100),m=f.getCoordinate(m)-this.bulletY,n=h*e):this.showAt?(l=this.graphDataItem.values,f.recalculateToPercents&&(l=this.graphDataItem.percents),l&&(m=","f.getCoordinate(l[this.showAt])-this.bulletY,n=h*e)):(m=this.nextY,n=h*e);a.translate(g,n);b.push(a);b.translate(0,m);this.addEventListeners(b,c);this.nextY=m+e*d;this.stackDown=k},addEventListeners:function(a,b){var c=this;a.click(function(){c.handleClick(b)}).mouseover(function(){c.handleMouseOver(b)}).touchend(function(){c.handleMouseOver(b,!0)}).mouseout(function(){c.handleMouseOut(b)})},drawPin:function(a){var b=-1;this.stackDown&&(b=1);var c=this.fontSize+4;return this.drawRealPolygon(a,[0,","c/2,c/2,-c/2,-c/2,0],[0,b*c/4,b*(c+c/4),b*(c+c/4),b*c/4,0])},drawSign:function(a){var b=-1;this.stackDown&&(b=1);var c=this.mastHeight*b,d=this.fontSize/2+2,e=AmCharts.line(this.container,[0,0],[0,c],this.borderColor,this.borderAlpha,1),k=AmCharts.circle(this.container,d,this.backgroundColor,this.backgroundAlpha,1,this.borderColor,this.borderAlpha);k.translate(0,c+d*b);a.push(e);a.push(k);this.set.push(a);return k},drawFlag:function(a){var b=-1;this.stackDown&&(b=1);var c=this.fontSize+4,d=this.labelWidth+","6,e=this.mastHeight,b=1==b?b*e:b*e-c,e=AmCharts.line(this.container,[0,0],[0,b],this.borderColor,this.borderAlpha,1),c=AmCharts.polygon(this.container,[0,d,d,0],[0,0,c,c],this.backgroundColor,this.backgroundAlpha,1,this.borderColor,this.borderAlpha);c.translate(0,b);a.push(e);a.push(c);this.set.push(a);return c},drawTriangleUp:function(a){var b=this.fontSize+7;return this.drawRealPolygon(a,[0,b/2,-b/2,0],[0,b,b,0])},drawArrowUp:function(a){var b=this.size,c=b/2,d=b/4;return this.drawRealPolygon(a,","[0,c,d,d,-d,-d,-c,0],[0,c,c,b,b,c,c,0])},drawArrowDown:function(a){var b=this.size,c=b/2,d=b/4;return this.drawRealPolygon(a,[0,c,d,d,-d,-d,-c,0],[0,-c,-c,-b,-b,-c,-c,0])},drawTriangleDown:function(a){var b=this.fontSize+7;return this.drawRealPolygon(a,[0,b/2,-b/2,0],[0,-b,-b,0])},drawTriangleLeft:function(a){var b=this.fontSize+7;return this.drawRealPolygon(a,[0,b,b,0],[0,-b/2,b/2])},drawTriangleRight:function(a){var b=this.fontSize+7;return this.drawRealPolygon(a,[0,-b,-b,0],[0,-b/2,b/2,0])},drawRealPolygon:function(a,","b,c){b=AmCharts.polygon(this.container,b,c,this.backgroundColor,this.backgroundAlpha,1,this.borderColor,this.borderAlpha);a.push(b);this.set.push(a);return b},drawCircle:function(a){shape=AmCharts.circle(this.container,this.fontSize/2,this.backgroundColor,this.backgroundAlpha,1,this.borderColor,this.borderAlpha);a.push(shape);this.set.push(a);return shape},drawTextBackground:function(a,b){var c=b.getBBox(),d=-c.width/2-5,e=c.width/2+5,c=-c.height-12;return this.drawRealPolygon(a,[d,-5,0,5,e,e,d,d],","[-5,-5,0,-5,-5,c,c,-5])},handleMouseOver:function(a,b){b||this.bullets[a].attr({fill:this.rollOverColors[a]});var c=this.eventObjects[a],d={type:\"rollOverStockEvent\",eventObject:c,graph:this.graph,date:this.date},e=this.bulletConfig.eventDispatcher;d.chart=e;e.fire(d.type,d);c.url&&this.bullets[a].setAttr(\"cursor\",\"pointer\");this.chart.showBalloon(AmCharts.fixNewLines(c.description),e.stockEventsSettings.balloonColor,!0)},handleClick:function(a){a=this.eventObjects[a];var b={type:\"clickStockEvent\","]},{"action":"removeText","range":{"start":{"row":0,"column":21},"end":{"row":0,"column":504}},"text":"=AmCharts.Class({construct:function(a){this.type=\"stock\";this.cname=\"AmStockChart\";this.version=\"3.11.1\";this.theme=a;this.createEvents(\"zoomed\",\"rollOverStockEvent\",\"rollOutStockEvent\",\"clickStockEvent\",\"panelRemoved\",\"dataUpdated\",\"init\",\"rendered\",\"drawn\");this.colors=\"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");this.firstDayOfWeek=1;this.glueToTheEnd=!1;this.dataSetCounter=-1;this.zoomOutOnDataSetChange="},{"action":"removeText","range":{"start":{"row":0,"column":21},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":0,"column":21},"end":{"row":0,"column":40}},"text":" = AmCharts.Class({"},{"action":"insertText","range":{"start":{"row":0,"column":40},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":2003,"column":0}},"lines":["    construct: function(a) {","        this.type = \"stock\";","        this.cname = \"AmStockChart\";","        this.version = \"3.11.1\";","        this.theme = a;","        this.createEvents(\"zoomed\", \"rollOverStockEvent\", \"rollOutStockEvent\", \"clickStockEvent\", \"panelRemoved\", \"dataUpdated\", \"init\", \"rendered\", \"drawn\");","        this.colors = \"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \");","        this.firstDayOfWeek = 1;","        this.glueToTheEnd = !1;","        this.dataSetCounter = -1;","        this.zoomOutOnDataSetChange = !1;","        this.panels = [];","        this.dataSets = [];","        this.chartCursors = [];","        this.comparedDataSets = [];","        this.categoryAxesSettings = new AmCharts.CategoryAxesSettings(a);","        this.valueAxesSettings = new AmCharts.ValueAxesSettings(a);","        this.panelsSettings = new AmCharts.PanelsSettings(a);","        this.chartScrollbarSettings = new AmCharts.ChartScrollbarSettings(a);","        this.chartCursorSettings = new AmCharts.ChartCursorSettings(a);","        this.stockEventsSettings = new AmCharts.StockEventsSettings(a);","        this.legendSettings = new AmCharts.LegendSettings(a);","        this.balloon =","            new AmCharts.AmBalloon(a);","        this.previousEndDate = new Date(0);","        this.previousStartDate = new Date(0);","        this.dataSetCount = this.graphCount = 0;","        this.chartCreated = !1;","        this.extendToFullPeriod = !0;","        AmCharts.applyTheme(this, a, this.cname)","    },","    write: function(a) {","        var b = this.theme;","        AmCharts.callInitHandler(this);","        AmCharts.applyLang(this.language, this);","        var c = this.exportConfig;","        c && AmCharts.AmExport && !this.AmExport && (this.AmExport = new AmCharts.AmExport(this, c));","        this.amExport && AmCharts.AmExport && (this.AmExport = AmCharts.extend(this.amExport,","            new AmCharts.AmExport(this), !0));","        this.AmExport && this.AmExport.init();","        this.chartRendered = !1;","        a = \"object\" != typeof a ? document.getElementById(a) : a;","        this.zoomOutOnDataSetChange && (this.endDate = this.startDate = void 0);","        this.categoryAxesSettings = AmCharts.processObject(this.categoryAxesSettings, AmCharts.CategoryAxesSettings, b);","        this.valueAxesSettings = AmCharts.processObject(this.valueAxesSettings, AmCharts.ValueAxesSettings, b);","        this.chartCursorSettings = AmCharts.processObject(this.chartCursorSettings, AmCharts.ChartCursorSettings,","            b);","        this.chartScrollbarSettings = AmCharts.processObject(this.chartScrollbarSettings, AmCharts.ChartScrollbarSettings, b);","        this.legendSettings = AmCharts.processObject(this.legendSettings, AmCharts.LegendSettings, b);","        this.panelsSettings = AmCharts.processObject(this.panelsSettings, AmCharts.PanelsSettings, b);","        this.stockEventsSettings = AmCharts.processObject(this.stockEventsSettings, AmCharts.StockEventsSettings, b);","        this.dataSetSelector && (this.dataSetSelector = AmCharts.processObject(this.dataSetSelector, AmCharts.DataSetSelector,","            b));","        this.periodSelector && (this.periodSelector = AmCharts.processObject(this.periodSelector, AmCharts.PeriodSelector, b));","        a.innerHTML = \"\";","        this.div = a;","        this.measure();","        this.createLayout();","        this.updateDataSets();","        this.addDataSetSelector();","        this.addPeriodSelector();","        this.addPanels();","        this.updatePanels();","        this.addChartScrollbar();","        this.updateData();","        this.skipDefault || this.setDefaultPeriod()","    },","    setDefaultPeriod: function(a) {","        var b = this.periodSelector;","        b && (this.animationPlayed = !1, b.setDefaultPeriod(a))","    },","    validateSize: function() {","        var a,","            b = this.panels;","        this.measurePanels();","        for (a = 0; a < b.length; a++) panel = b[a], panel.invalidateSize()","    },","    updateDataSets: function() {","        var a = this.mainDataSet,","            b = this.dataSets,","            c;","        for (c = 0; c < b.length; c++) {","            var d = b[c],","                d = AmCharts.processObject(d, AmCharts.DataSet);","            b[c] = d;","            d.id || (this.dataSetCount++, d.id = \"ds\" + this.dataSetCount);","            void 0 === d.color && (d.color = this.colors.length - 1 > c ? this.colors[c] : AmCharts.randomColor())","        }!a && AmCharts.ifArray(b) && (this.mainDataSet = this.dataSets[0])","    },","    updateEvents: function(a) {","        AmCharts.ifArray(a.stockEvents) &&","            AmCharts.parseEvents(a, this.panels, this.stockEventsSettings, this.firstDayOfWeek, this, this.dataDateFormat)","    },","    getLastDate: function(a) {","        var b = this.dataDateFormat;","        a = a instanceof Date ? new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : b ? AmCharts.stringToDate(a, b) : new Date(a);","        return new Date(AmCharts.changeDate(a, this.categoryAxesSettings.minPeriod, 1, !0).getTime() - 1)","    },","    getFirstDate: function(a) {","        var b = this.dataDateFormat;","        a = a instanceof Date ? new Date(a.getFullYear(),","            a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()) : b ? AmCharts.stringToDate(a, b) : new Date(a);","        return new Date(AmCharts.resetDateToMin(a, this.categoryAxesSettings.minPeriod, 1, this.firstDayOfWeek))","    },","    updateData: function() {","        var a = this.mainDataSet;","        if (a) {","            var b = this.categoryAxesSettings; - 1 == AmCharts.getItemIndex(b.minPeriod, b.groupToPeriods) && b.groupToPeriods.unshift(b.minPeriod);","            var c = a.dataProvider;","            if (AmCharts.ifArray(c)) {","                var d = a.categoryField;","                this.firstDate = this.getFirstDate(c[0][d]);","                this.lastDate = this.getLastDate(c[c.length - 1][d]);","                this.periodSelector && this.periodSelector.setRanges(this.firstDate, this.lastDate);","                a.dataParsed || (AmCharts.parseStockData(a, b.minPeriod, b.groupToPeriods, this.firstDayOfWeek, this.dataDateFormat), a.dataParsed = !0);","                this.updateComparingData();","                this.updateEvents(a)","            }","            else this.lastDate = this.firstDate = void 0;","            this.glueToTheEnd && this.startDate && this.endDate && this.lastDate && (AmCharts.getPeriodDuration(b.minPeriod), this.startDate = new Date(this.startDate.getTime() +","                (this.lastDate.getTime() - this.endDate.getTime())), this.endDate = this.lastDate, this.updateScrollbar = !0);","            this.updatePanelsWithNewData()","        }","        a = {","            type: \"dataUpdated\",","            chart: this","        };","        this.fire(a.type, a)","    },","    updateComparingData: function() {","        var a = this.comparedDataSets,","            b = this.categoryAxesSettings,","            c;","        for (c = 0; c < a.length; c++) {","            var d = a[c];","            d.dataParsed || (AmCharts.parseStockData(d, b.minPeriod, b.groupToPeriods, this.firstDayOfWeek, this.dataDateFormat), d.dataParsed = !0);","            this.updateEvents(d)","        }","    },","    createLayout: function() {","        var a = this.div,","            b, c, d = document.createElement(\"div\");","        d.style.position = \"relative\";","        this.containerDiv = d;","        a.appendChild(d);","        if (a = this.periodSelector) b = a.position;","        if (a = this.dataSetSelector) c = a.position;","        if (\"left\" == b || \"left\" == c) a = document.createElement(\"div\"), a.style.cssFloat = \"left\", a.style.styleFloat = \"left\", a.style.width = \"0px\", a.style.position = \"absolute\", d.appendChild(a), this.leftContainer = a;","        if (\"right\" == b || \"right\" == c) b = document.createElement(\"div\"), b.style.cssFloat = \"right\", b.style.styleFloat = \"right\", b.style.width = \"0px\", d.appendChild(b),","            this.rightContainer = b;","        b = document.createElement(\"div\");","        d.appendChild(b);","        this.centerContainer = b;","        d = document.createElement(\"div\");","        b.appendChild(d);","        this.panelsContainer = d","    },","    addPanels: function() {","        this.measurePanels();","        for (var a = this.panels, b = 0; b < a.length; b++) {","            var c = a[b],","                c = AmCharts.processObject(c, AmCharts.StockPanel, this.theme);","            a[b] = c;","            this.addStockPanel(c, b)","        }","        this.panelsAdded = !0","    },","    measurePanels: function() {","        this.measure();","        var a = this.chartScrollbarSettings,","            b = this.divRealHeight,","            c = this.panelsSettings.panelSpacing;","        a.enabled && (b -= a.height);","        (a = this.periodSelector) && !a.vertical && (a = a.offsetHeight, b -= a + c);","        (a = this.dataSetSelector) && !a.vertical && (a = a.offsetHeight, b -= a + c);","        a = this.panels;","        this.panelsContainer.style.height = b + \"px\";","        this.chartCursors = [];","        var d = 0,","            e, k;","        for (e = 0; e < a.length; e++) {","            k = a[e];","            var f = k.percentHeight;","            isNaN(f) && (f = 100 / a.length, k.percentHeight = f);","            d += f","        }","        this.panelsHeight = Math.max(b - c * (a.length - 1), 0);","        for (e = 0; e < a.length; e++) k = a[e], k.percentHeight = k.percentHeight / d * 100, k.panelBox && (k.panelBox.style.height = Math.round(k.percentHeight *","            this.panelsHeight / 100) + \"px\")","    },","    addStockPanel: function(a, b) {","        var c = this.panelsSettings,","            d = document.createElement(\"div\");","        d.className = \"amChartsPanel\";","        0 < b && !this.panels[b - 1].showCategoryAxis && (d.style.marginTop = c.panelSpacing + \"px\");","        a.panelBox = d;","        a.stockChart = this;","        a.id || (a.id = \"stockPanel\" + b);","        a.pathToImages = this.pathToImages;","        d.style.height = Math.round(a.percentHeight * this.panelsHeight / 100) + \"px\";","        d.style.width = \"100%\";","        this.panelsContainer.appendChild(d);","        0 < c.backgroundAlpha && (d.style.backgroundColor = c.backgroundColor);","        if (d = a.stockLegend) d.container = void 0, d.title = a.title, d.marginLeft = c.marginLeft, d.marginRight = c.marginRight, d.verticalGap = 3, d.position = \"top\", AmCharts.copyProperties(this.legendSettings, d), a.addLegend(d, d.divId);","        a.zoomOutText = \"\";","        this.addCursor(a)","    },","    enableCursors: function(a) {","        var b = this.chartCursors,","            c;","        for (c = 0; c < b.length; c++) b[c].enabled = a","    },","    updatePanels: function() {","        var a = this.panels,","            b;","        for (b = 0; b < a.length; b++) this.updatePanel(a[b]);","        this.mainDataSet && this.updateGraphs();","        this.currentPeriod = void 0","    },","    updatePanel: function(a) {","        a.seriesIdField =","            \"amCategoryIdField\";","        a.dataProvider = [];","        a.chartData = [];","        a.graphs = [];","        var b = a.categoryAxis,","            c = this.categoryAxesSettings;","        AmCharts.copyProperties(this.panelsSettings, a);","        AmCharts.copyProperties(c, b);","        b.parseDates = !0;","        a.zoomOutOnDataUpdate = !1;","        a.mouseWheelScrollEnabled = this.mouseWheelScrollEnabled;","        a.dataDateFormat = this.dataDateFormat;","        a.language = this.language;","        a.showCategoryAxis ? \"top\" == b.position ? a.marginTop = c.axisHeight : a.marginBottom = c.axisHeight : (a.categoryAxis.labelsEnabled = !1, a.chartCursor && (a.chartCursor.categoryBalloonEnabled = !1));","        var c = a.valueAxes,","            d = c.length,","            e;","        0 === d && (e = new AmCharts.ValueAxis(this.theme), a.addValueAxis(e));","        b = new AmCharts.AmBalloon(this.theme);","        AmCharts.copyProperties(this.balloon, b);","        a.balloon = b;","        c = a.valueAxes;","        d = c.length;","        for (b = 0; b < d; b++) e = c[b], AmCharts.copyProperties(this.valueAxesSettings, e);","        a.listenersAdded = !1;","        a.write(a.panelBox)","    },","    zoom: function(a, b) {","        this.zoomChart(a, b)","    },","    zoomOut: function() {","        this.zoomChart(this.firstDate, this.lastDate)","    },","    updatePanelsWithNewData: function() {","        var a = this.mainDataSet,","            b = this.scrollbarChart;","        if (a) {","            var c = this.panels;","            this.currentPeriod = void 0;","            var d;","            for (d = 0; d < c.length; d++) {","                var e = c[d];","                e.categoryField = a.categoryField;","                0 === a.dataProvider.length && (e.dataProvider = []);","                e.scrollbarChart = b","            }","            b && (c = this.categoryAxesSettings, d = c.minPeriod, b.categoryField = a.categoryField, 0 < a.dataProvider.length ? (e = this.chartScrollbarSettings.usePeriod, b.dataProvider = e ? a.agregatedDataProviders[e] : a.agregatedDataProviders[d]) : b.dataProvider = [], e = b.categoryAxis, e.minPeriod = d, e.firstDayOfWeek = this.firstDayOfWeek, e.equalSpacing =","                c.equalSpacing, e.axisAlpha = 0, e.markPeriodChange = c.markPeriodChange, b.bbsetr = !0, b.validateData(), c = this.panelsSettings, b.maxSelectedTime = c.maxSelectedTime, b.minSelectedTime = c.minSelectedTime);","            0 < a.dataProvider.length && this.zoomChart(this.startDate, this.endDate)","        }","        this.panelDataInvalidated = !1","    },","    addChartScrollbar: function() {","        var a = this.chartScrollbarSettings,","            b = this.scrollbarChart;","        b && (b.clear(), b.destroy());","        if (a.enabled) {","            var c = this.panelsSettings,","                d = this.categoryAxesSettings,","                b = new AmCharts.AmSerialChart(this.theme);","            b.language = this.language;","            b.pathToImages = this.pathToImages;","            b.autoMargins = !1;","            this.scrollbarChart = b;","            b.id = \"scrollbarChart\";","            b.scrollbarOnly = !0;","            b.zoomOutText = \"\";","            b.panEventsEnabled = this.panelsSettings.panEventsEnabled;","            b.marginLeft = c.marginLeft;","            b.marginRight = c.marginRight;","            b.marginTop = 0;","            b.marginBottom = 0;","            var c = d.dateFormats,","                e = b.categoryAxis;","            e.boldPeriodBeginning = d.boldPeriodBeginning;","            c && (e.dateFormats = d.dateFormats);","            e.labelsEnabled = !1;","            e.parseDates = !0;","            d = a.graph;","            if (AmCharts.isString(d)) {","                c = this.panels;","                for (e = 0; e <","                    c.length; e++) {","                    var k = AmCharts.getObjById(c[e].stockGraphs, a.graph);","                    k && (d = k)","                }","                a.graph = d","            }","            var f;","            d && (f = new AmCharts.AmGraph(this.theme), f.valueField = d.valueField, f.periodValue = d.periodValue, f.type = d.type, f.connect = d.connect, f.minDistance = a.minDistance, b.addGraph(f));","            d = new AmCharts.ChartScrollbar(this.theme);","            b.addChartScrollbar(d);","            AmCharts.copyProperties(a, d);","            d.scrollbarHeight = a.height;","            d.graph = f;","            this.listenTo(d, \"zoomed\", this.handleScrollbarZoom);","            f = document.createElement(\"div\");","            f.style.height = a.height + \"px\";","            d = this.periodSelectorContainer;","            c = this.periodSelector;","            e = this.centerContainer;","            \"bottom\" == a.position ? c ? \"bottom\" == c.position ? e.insertBefore(f, d) : e.appendChild(f) : e.appendChild(f) : c ? \"top\" == c.position ? e.insertBefore(f, d.nextSibling) : e.insertBefore(f, e.firstChild) : e.insertBefore(f, e.firstChild);","            b.write(f)","        }","    },","    handleScrollbarZoom: function(a) {","        if (this.skipScrollbarEvent) this.skipScrollbarEvent = !1;","        else {","            var b = a.endDate,","                c = {};","            c.startDate = a.startDate;","            c.endDate = b;","            this.updateScrollbar = !1;","            this.handleZoom(c)","        }","    },","    addPeriodSelector: function() {","        var a =","            this.periodSelector;","        if (a) {","            var b = this.categoryAxesSettings.minPeriod;","            a.minDuration = AmCharts.getPeriodDuration(b);","            a.minPeriod = b;","            a.chart = this;","            var c = this.dataSetSelector,","                d, b = this.dssContainer;","            c && (d = c.position);","            var c = this.panelsSettings.panelSpacing,","                e = document.createElement(\"div\");","            this.periodSelectorContainer = e;","            var k = this.leftContainer,","                f = this.rightContainer,","                h = this.centerContainer,","                g = this.panelsContainer,","                n = a.width + 2 * c + \"px\";","            switch (a.position) {","                case \"left\":","                    k.style.width = a.width + \"px\";","                    k.appendChild(e);","                    h.style.paddingLeft =","                        n;","                    break;","                case \"right\":","                    h.style.marginRight = n;","                    f.appendChild(e);","                    f.style.width = a.width + \"px\";","                    break;","                case \"top\":","                    g.style.clear = \"both\";","                    h.insertBefore(e, g);","                    e.style.paddingBottom = c + \"px\";","                    e.style.overflow = \"hidden\";","                    break;","                case \"bottom\":","                    e.style.marginTop = c + \"px\", \"bottom\" == d ? h.insertBefore(e, b) : h.appendChild(e)","            }","            this.listenTo(a, \"changed\", this.handlePeriodSelectorZoom);","            a.write(e)","        }","    },","    addDataSetSelector: function() {","        var a = this.dataSetSelector;","        if (a) {","            a.chart = this;","            a.dataProvider = this.dataSets;","            var b = a.position,","                c = this.panelsSettings.panelSpacing,","                d = document.createElement(\"div\");","            this.dssContainer = d;","            var e = this.leftContainer,","                k = this.rightContainer,","                f = this.centerContainer,","                h = this.panelsContainer,","                c = a.width + 2 * c + \"px\";","            switch (b) {","                case \"left\":","                    e.style.width = a.width + \"px\";","                    e.appendChild(d);","                    f.style.paddingLeft = c;","                    break;","                case \"right\":","                    f.style.marginRight = c;","                    k.appendChild(d);","                    k.style.width = a.width + \"px\";","                    break;","                case \"top\":","                    h.style.clear = \"both\";","                    f.insertBefore(d, h);","                    d.style.overflow = \"hidden\";","                    break;","                case \"bottom\":","                    f.appendChild(d)","            }","            a.write(d)","        }","    },","    handlePeriodSelectorZoom: function(a) {","        var b =","            this.scrollbarChart;","        b && (b.updateScrollbar = !0);","        a.predefinedPeriod ? (this.predefinedStart = a.startDate, this.predefinedEnd = a.endDate) : this.predefinedEnd = this.predefinedStart = null;","        this.zoomChart(a.startDate, a.endDate)","    },","    addCursor: function(a) {","        var b = this.chartCursorSettings;","        if (b.enabled) {","            var c = new AmCharts.ChartCursor(this.theme);","            AmCharts.copyProperties(b, c);","            a.chartCursor && AmCharts.copyProperties(a.chartCursor, c);","            a.removeChartCursor();","            a.addChartCursor(c);","            this.listenTo(c, \"changed\", this.handleCursorChange);","            this.listenTo(c, \"onHideCursor\", this.hideChartCursor);","            this.listenTo(c, \"zoomed\", this.handleCursorZoom);","            this.chartCursors.push(c)","        }","    },","    hideChartCursor: function() {","        var a = this.chartCursors,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b];","            c.hideCursor(!1);","            (c = c.chart) && c.updateLegendValues()","        }","    },","    handleCursorZoom: function(a) {","        var b = this.scrollbarChart;","        b && (b.updateScrollbar = !0);","        var b = {},","            c;","        if (this.categoryAxesSettings.equalSpacing) {","            var d = this.mainDataSet.categoryField,","                e = this.mainDataSet.agregatedDataProviders[this.currentPeriod];","            c = new Date(e[a.start][d]);","            a = new Date(e[a.end][d])","        }","        else c = new Date(a.start), a = new Date(a.end);","        b.startDate = c;","        b.endDate = a;","        this.handleZoom(b)","    },","    handleZoom: function(a) {","        this.zoomChart(a.startDate, a.endDate)","    },","    zoomChart: function(a, b) {","        var c = new Date(a),","            d = this,","            e = d.firstDate,","            k = d.lastDate,","            f = d.currentPeriod,","            h = d.categoryAxesSettings,","            g = h.minPeriod,","            n = d.panelsSettings,","            m = d.periodSelector,","            t = d.panels,","            r = d.comparedGraphs,","            v = d.scrollbarChart,","            w = d.firstDayOfWeek;","        if (e && k) {","            a || (a = e);","            b || (b = k);","            if (f) {","                var l = AmCharts.extractPeriod(f);","                a.getTime() == b.getTime() && l != g && (b = AmCharts.changeDate(b, l.period, l.count), b.setTime(b.getTime() - 1))","            }","            a.getTime() < e.getTime() && (a = e);","            a.getTime() > k.getTime() && (a = k);","            b.getTime() < e.getTime() && (b = e);","            b.getTime() > k.getTime() && (b = k);","            l = AmCharts.getItemIndex(g, h.groupToPeriods);","            h = f;","            f = d.choosePeriod(l, a, b);","            d.currentPeriod = f;","            var l = AmCharts.extractPeriod(f),","                y = AmCharts.getPeriodDuration(l.period, l.count);","            AmCharts.getPeriodDuration(g);","            1 > b.getTime() - a.getTime() && (a = new Date(b.getTime() - 1));","            g = AmCharts.newDate(a);","            d.extendToFullPeriod && (g.getTime() - e.getTime() < .1 * y && (g = AmCharts.resetDateToMin(a, l.period, l.count, w)), k.getTime() - b.getTime() < .1 * y && (b = AmCharts.resetDateToMin(k, l.period, l.count, w), b = AmCharts.changeDate(b, l.period, l.count, !0)));","            for (e = 0; e < t.length; e++) k = t[e], k.chartCursor && k.chartCursor.panning && (g = c);","            for (e = 0; e < t.length; e++) {","                k = t[e];","                if (f != h) {","                    for (c = 0; c < r.length; c++) y = r[c].graph, y.dataProvider = y.dataSet.agregatedDataProviders[f];","                    c = k.categoryAxis;","                    c.firstDayOfWeek = w;","                    c.minPeriod = f;","                    k.dataProvider = d.mainDataSet.agregatedDataProviders[f];","                    if (c = k.chartCursor) c.categoryBalloonDateFormat = d.chartCursorSettings.categoryBalloonDateFormat(l.period), k.showCategoryAxis || (c.categoryBalloonEnabled = !1);","                    k.startTime = g.getTime();","                    k.endTime = b.getTime();","                    k.validateData(!0)","                }","                c = !1;","                k.chartCursor && k.chartCursor.panning && (c = !0);","                c || (k.startTime = void 0, k.endTime = void 0, k.zoomToDates(g, b));","                0 < n.startDuration && d.animationPlayed && !c ? (k.startDuration = 0, k.animateAgain()) : 0 < n.startDuration && !c && k.animateAgain()","            }","            d.animationPlayed = !0;","            AmCharts.extractPeriod(f);","            n = new Date(b);","            v && d.updateScrollbar && (v.zoomToDates(a, n), d.skipScrollbarEvent = !0, setTimeout(function() {","                d.resetSkip.call(d)","            }, 100));","            d.updateScrollbar = !0;","            d.startDate = a;","            d.endDate = b;","            m && m.zoom(a, b);","            if (a.getTime() != d.previousStartDate.getTime() || b.getTime() != d.previousEndDate.getTime()) m = {","                type: \"zoomed\"","            }, m.startDate = a, m.endDate = b, m.chart = d, m.period = f, d.fire(m.type, m), d.previousStartDate = new Date(a), d.previousEndDate = new Date(b)","        }","        d.eventsHidden && d.showHideEvents(!1);","        d.chartCreated || (f = \"init\", d.fire(f, {","            type: f,","            chart: d","        }));","        d.chartRendered ||","            (f = \"rendered\", d.fire(f, {","                type: f,","                chart: d","            }), d.chartRendered = !0);","        f = \"drawn\";","        d.fire(f, {","            type: f,","            chart: d","        });","        d.chartCreated = !0;","        d.animationPlayed = !0","    },","    resetSkip: function() {","        this.skipScrollbarEvent = !1","    },","    updateGraphs: function() {","        this.getSelections();","        if (0 < this.dataSets.length) {","            var a = this.panels;","            this.comparedGraphs = [];","            var b;","            for (b = 0; b < a.length; b++) {","                var c = a[b],","                    d = c.valueAxes,","                    e;","                for (e = 0; e < d.length; e++) {","                    var k = d[e];","                    k.prevLog && (k.logarithmic = k.prevLog);","                    k.recalculateToPercents = \"always\" == c.recalculateToPercents ? !0 : !1","                }","                d = this.mainDataSet;","                e = this.comparedDataSets;","                k = c.stockGraphs;","                c.graphs = [];","                var f;","                for (f = 0; f < k.length; f++) {","                    var h = k[f],","                        h = AmCharts.processObject(h, AmCharts.StockGraph, this.theme);","                    k[f] = h;","                    if (!h.title || h.resetTitleOnDataSetChange) h.title = d.title, h.resetTitleOnDataSetChange = !0;","                    h.useDataSetColors && (h.lineColor = d.color, h.fillColors = void 0, h.bulletColor = void 0);","                    var g = !1,","                        n = d.fieldMappings,","                        m;","                    for (m = 0; m < n.length; m++) {","                        var t = n[m],","                            r = h.valueField;","                        r && t.toField == r && (g = !0);","                        (r = h.openField) && t.toField == r && (g = !0);","                        (r = h.closeField) && t.toField == r &&","                            (g = !0);","                        (r = h.lowField) && t.toField == r && (g = !0)","                    }","                    g && c.addGraph(h);","                    r = !1;","                    \"always\" == c.recalculateToPercents && (r = !0);","                    var v = c.stockLegend,","                        w, l, y, z;","                    v && (v = AmCharts.processObject(v, AmCharts.StockLegend, this.theme), c.stockLegend = v, w = v.valueTextComparing, l = v.valueTextRegular, y = v.periodValueTextComparing, z = v.periodValueTextRegular);","                    if (h.comparable) {","                        var x = e.length;","                        0 < x && h.valueAxis.logarithmic && \"never\" != c.recalculateToPercents && (h.valueAxis.logarithmic = !1, h.valueAxis.prevLog = !0);","                        0 < x && \"whenComparing\" == c.recalculateToPercents &&","                            (h.valueAxis.recalculateToPercents = !0);","                        v && h.valueAxis && !0 === h.valueAxis.recalculateToPercents && (r = !0);","                        var B;","                        for (B = 0; B < x; B++) {","                            var A = e[B],","                                q = h.comparedGraphs[A.id];","                            q || (q = new AmCharts.AmGraph(this.theme), q.id = \"comparedGraph\" + B + \"_\" + f + A.id);","                            q.periodValue = h.periodValue;","                            q.dataSet = A;","                            q.behindColumns = h.behindColumns;","                            h.comparedGraphs[A.id] = q;","                            q.seriesIdField = \"amCategoryIdField\";","                            q.connect = h.connect;","                            var s = h.compareField;","                            s || (s = h.valueField);","                            g = !1;","                            n = A.fieldMappings;","                            m;","                            for (m = 0; m < n.length; m++) t = n[m], t.toField == s && (g = !0);","                            if (g) {","                                q.valueField = s;","                                q.title = A.title;","                                q.lineColor = A.color;","                                h.compareGraphType && (q.type = h.compareGraphType);","                                g = h.compareGraphLineThickness;","                                isNaN(g) || (q.lineThickness = g);","                                g = h.compareGraphDashLength;","                                isNaN(g) || (q.dashLength = g);","                                g = h.compareGraphLineAlpha;","                                isNaN(g) || (q.lineAlpha = g);","                                g = h.compareGraphCornerRadiusTop;","                                isNaN(g) || (q.cornerRadiusTop = g);","                                g = h.compareGraphCornerRadiusBottom;","                                isNaN(g) || (q.cornerRadiusBottom = g);","                                g = h.compareGraphBalloonColor;","                                isNaN(g) || (q.balloonColor = g);","                                g = h.compareGraphBulletColor;","                                isNaN(g) ||","                                    (q.bulletColor = g);","                                if (g = h.compareGraphFillColors) q.fillColors = g;","                                if (g = h.compareGraphNegativeFillColors) q.negativeFillColors = g;","                                if (g = h.compareGraphFillAlphas) q.fillAlphas = g;","                                if (g = h.compareGraphNegativeFillAlphas) q.negativeFillAlphas = g;","                                if (g = h.compareGraphBullet) q.bullet = g;","                                if (g = h.compareGraphNumberFormatter) q.numberFormatter = g;","                                g = h.compareGraphPrecision;","                                isNaN(g) || (q.precision = g);","                                if (g = h.compareGraphBalloonText) q.balloonText = g;","                                g = h.compareGraphBulletSize;","                                isNaN(g) || (q.bulletSize = g);","                                g = h.compareGraphBulletAlpha;","                                isNaN(g) || (q.bulletAlpha = g);","                                g = h.compareGraphBulletBorderAlpha;","                                isNaN(g) || (q.bulletBorderAlpha = g);","                                if (g = h.compareGraphBulletBorderColor) q.bulletBorderColor = g;","                                g = h.compareGraphBulletBorderThickness;","                                isNaN(g) || (q.bulletBorderThickness = g);","                                q.visibleInLegend = h.compareGraphVisibleInLegend;","                                q.balloonFunction = h.compareGraphBalloonFunction;","                                q.hideBulletsCount = h.hideBulletsCount;","                                q.valueAxis = h.valueAxis;","                                v && (r && w ? (q.legendValueText = w, q.legendPeriodValueText = y) : (l && (q.legendValueText = l), q.legendPeriodValueText = z));","                                c.showComparedOnTop ?","                                    c.graphs.push(q) : c.graphs.unshift(q);","                                this.comparedGraphs.push({","                                    graph: q,","                                    dataSet: A","                                })","                            }","                        }","                    }","                    v && (r && w ? (h.legendValueText = w, h.legendPeriodValueText = y) : (l && (h.legendValueText = l), h.legendPeriodValueText = z))","                }","            }","        }","    },","    choosePeriod: function(a, b, c) {","        var d = this.categoryAxesSettings,","            e = d.groupToPeriods,","            k = e[a],","            e = e[a + 1],","            f = AmCharts.extractPeriod(k),","            f = AmCharts.getPeriodDuration(f.period, f.count),","            h = b.getTime(),","            g = c.getTime(),","            d = d.maxSeries;","        return (g - h) / f > d && 0 < d && e ? this.choosePeriod(a + 1, b, c) : k","    },","    handleCursorChange: function(a) {","        var b =","            a.target,","            c = a.position,","            d = a.zooming;","        a = a.index;","        var e = this.chartCursors,","            k;","        for (k = 0; k < e.length; k++) {","            var f = e[k];","            f != b && c && (f.isZooming(d), f.previousMousePosition = NaN, f.forceShow = !0, f.initialMouse = b.initialMouse, f.selectionPosX = b.selectionPosX, f.setPosition(c, !1, a))","        }","    },","    getSelections: function() {","        var a = [],","            b = this.dataSets,","            c;","        for (c = 0; c < b.length; c++) {","            var d = b[c];","            d.compared && a.push(d)","        }","        this.comparedDataSets = a;","        b = this.panels;","        for (c = 0; c < b.length; c++) d = b[c], \"never\" != d.recalculateToPercents && 0 < a.length ? d.hideDrawingIcons(!0) :","            d.drawingIconsEnabled && d.hideDrawingIcons(!1)","    },","    addPanel: function(a) {","        this.panels.push(a);","        AmCharts.removeChart(a);","        AmCharts.addChart(a)","    },","    addPanelAt: function(a, b) {","        this.panels.splice(b, 0, a);","        AmCharts.removeChart(a);","        AmCharts.addChart(a)","    },","    removePanel: function(a) {","        var b = this.panels,","            c;","        for (c = b.length - 1; 0 <= c; c--)","            if (b[c] == a) {","                var d = {","                    type: \"panelRemoved\",","                    panel: a,","                    chart: this","                };","                this.fire(d.type, d);","                b.splice(c, 1);","                a.destroy();","                a.clear()","            }","    },","    validateData: function() {","        this.resetDataParsed();","        this.updateDataSets();","        this.mainDataSet.compared = !1;","        this.updateGraphs();","        this.updateData();","        var a = this.dataSetSelector;","        a && a.write(a.div)","    },","    resetDataParsed: function() {","        var a = this.dataSets,","            b;","        for (b = 0; b < a.length; b++) a[b].dataParsed = !1","    },","    validateNow: function() {","        this.skipDefault = !0;","        this.chartRendered = !1;","        this.clear(!0);","        this.write(this.div)","    },","    hideStockEvents: function() {","        this.showHideEvents(!1);","        this.eventsHidden = !0","    },","    showStockEvents: function() {","        this.showHideEvents(!0);","        this.eventsHidden = !1","    },","    showHideEvents: function(a) {","        var b = this.panels,","            c;","        for (c = 0; c < b.length; c++) {","            var d =","                b[c].graphs,","                e;","            for (e = 0; e < d.length; e++) {","                var k = d[e];","                !0 === a ? k.showBullets() : k.hideBullets()","            }","        }","    },","    invalidateSize: function() {","        var a = this;","        clearTimeout(a.validateTO);","        var b = setTimeout(function() {","            a.validateNow()","        }, 5);","        a.validateTO = b","    },","    measure: function() {","        var a = this.div,","            b = a.offsetWidth,","            c = a.offsetHeight;","        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);","        this.divRealWidth = b;","        this.divRealHeight = c","    },","    clear: function(a) {","        var b = this.panels,","            c;","        if (b)","            for (c = 0; c < b.length; c++) {","                var d = b[c];","                a || (d.cleanChart(), d.destroy());","                d.clear(a)","            }(b =","                this.scrollbarChart) && b.clear();","        if (b = this.div) b.innerHTML = \"\";","        a || (this.div = null, AmCharts.deleteObject(this))","    }","});","AmCharts.StockEvent = AmCharts.Class({","    construct: function() {}","});","AmCharts.DataSet = AmCharts.Class({","    construct: function() {","        this.cname = \"DataSet\";","        this.fieldMappings = [];","        this.dataProvider = [];","        this.agregatedDataProviders = [];","        this.stockEvents = [];","        this.compared = !1;","        this.showInCompare = this.showInSelect = !0","    }","});","AmCharts.PeriodSelector = AmCharts.Class({","    construct: function(a) {","        this.cname = \"PeriodSelector\";","        this.theme = a;","        this.createEvents(\"changed\");","        this.inputFieldsEnabled = !0;","        this.position = \"bottom\";","        this.width = 180;","        this.fromText = \"From: \";","        this.toText = \"to: \";","        this.periodsText = \"Zoom: \";","        this.periods = [];","        this.inputFieldWidth = 100;","        this.dateFormat = \"DD-MM-YYYY\";","        this.hideOutOfScopePeriods = !0;","        AmCharts.applyTheme(this, a, this.cname)","    },","    zoom: function(a, b) {","        var c = this.chart;","        this.inputFieldsEnabled && (this.startDateField.value = AmCharts.formatDate(a,","            this.dateFormat, c), this.endDateField.value = AmCharts.formatDate(b, this.dateFormat, c));","        this.markButtonAsSelected()","    },","    write: function(a) {","        var b = this;","        a.className = \"amChartsPeriodSelector\";","        var c = b.width,","            d = b.position;","        b.width = void 0;","        b.position = void 0;","        AmCharts.applyStyles(a.style, b);","        b.width = c;","        b.position = d;","        b.div = a;","        a.innerHTML = \"\";","        c = b.theme;","        d = b.position;","        d = \"top\" == d || \"bottom\" == d ? !1 : !0;","        b.vertical = d;","        var e = 0,","            k = 0;","        if (b.inputFieldsEnabled) {","            var f = document.createElement(\"div\");","            a.appendChild(f);","            var h = document.createTextNode(AmCharts.lang.fromText ||","                b.fromText);","            f.appendChild(h);","            d ? AmCharts.addBr(f) : (f.style.styleFloat = \"left\", f.style.display = \"inline\");","            var g = document.createElement(\"input\");","            g.className = \"amChartsInputField\";","            c && AmCharts.applyStyles(g.style, c.PeriodInputField);","            g.style.textAlign = \"center\";","            g.onblur = function(a) {","                b.handleCalChange(a)","            };","            AmCharts.isNN && g.addEventListener(\"keypress\", function(a) {","                b.handleCalendarChange.call(b, a)","            }, !0);","            AmCharts.isIE && g.attachEvent(\"onkeypress\", function(a) {","                b.handleCalendarChange.call(b, a)","            });","            f.appendChild(g);","            b.startDateField =","                g;","            if (d) h = b.width - 6 + \"px\", AmCharts.addBr(f);","            else {","                var h = b.inputFieldWidth + \"px\",","                    n = document.createTextNode(\" \");","                f.appendChild(n)","            }","            g.style.width = h;","            g = document.createTextNode(AmCharts.lang.toText || b.toText);","            f.appendChild(g);","            d && AmCharts.addBr(f);","            g = document.createElement(\"input\");","            g.className = \"amChartsInputField\";","            c && AmCharts.applyStyles(g.style, c.PeriodInputField);","            g.style.textAlign = \"center\";","            g.onblur = function() {","                b.handleCalChange()","            };","            AmCharts.isNN && g.addEventListener(\"keypress\", function(a) {","                b.handleCalendarChange.call(b,","                    a)","            }, !0);","            AmCharts.isIE && g.attachEvent(\"onkeypress\", function(a) {","                b.handleCalendarChange.call(b, a)","            });","            f.appendChild(g);","            b.endDateField = g;","            d ? AmCharts.addBr(f) : e = g.offsetHeight + 2;","            h && (g.style.width = h)","        }","        f = b.periods;","        if (AmCharts.ifArray(f)) {","            h = document.createElement(\"div\");","            d || (h.style.cssFloat = \"right\", h.style.styleFloat = \"right\", h.style.display = \"inline\");","            a.appendChild(h);","            d && AmCharts.addBr(h);","            a = document.createTextNode(AmCharts.lang.periodsText || b.periodsText);","            h.appendChild(a);","            b.periodContainer = h;","            var m;","            for (a = 0; a < f.length; a++) g =","                f[a], m = document.createElement(\"input\"), m.type = \"button\", m.value = g.label, m.period = g.period, m.count = g.count, m.periodObj = g, m.className = \"amChartsButton\", c && AmCharts.applyStyles(m.style, c.PeriodButton), d && (m.style.width = b.width - 1 + \"px\"), m.style.boxSizing = \"border-box\", h.appendChild(m), b.addEventListeners(m), g.button = m;","            !d && m && (k = m.offsetHeight);","            b.offsetHeight = Math.max(e, k)","        }","    },","    addEventListeners: function(a) {","        var b = this;","        AmCharts.isNN && a.addEventListener(\"click\", function(a) {","            b.handlePeriodChange.call(b, a)","        }, !0);","        AmCharts.isIE &&","            a.attachEvent(\"onclick\", function(a) {","                b.handlePeriodChange.call(b, a)","            })","    },","    getPeriodDates: function() {","        var a = this.periods,","            b;","        for (b = 0; b < a.length; b++) this.selectPeriodButton(a[b], !0)","    },","    handleCalendarChange: function(a) {","        13 == a.keyCode && this.handleCalChange(a)","    },","    handleCalChange: function(a) {","        var b = this.dateFormat,","            c = AmCharts.stringToDate(this.startDateField.value, b),","            b = this.chart.getLastDate(AmCharts.stringToDate(this.endDateField.value, b));","        try {","            this.startDateField.blur(), this.endDateField.blur()","        }","        catch (d) {}","        if (c && b) {","            var e = {","                type: \"changed\"","            };","            e.startDate = c;","            e.endDate = b;","            e.chart = this.chart;","            e.event = a;","            this.fire(e.type, e)","        }","    },","    handlePeriodChange: function(a) {","        this.selectPeriodButton((a.srcElement ? a.srcElement : a.target).periodObj, !1, a)","    },","    setRanges: function(a, b) {","        this.firstDate = a;","        this.lastDate = b;","        this.getPeriodDates()","    },","    selectPeriodButton: function(a, b, c) {","        var d = a.button,","            e = d.count,","            k = d.period,","            f, h, g = this.firstDate,","            n = this.lastDate,","            m, t = this.theme;","        g && n && (\"MAX\" == k ? (f = g, h = n) : \"YTD\" == k ? (f = new Date, f.setMonth(0, 1), f.setHours(0, 0, 0, 0), 0 === e && f.setDate(f.getDate() -","            1), h = this.lastDate) : \"YYYY\" == k || \"MM\" == k ? this.selectFromStart ? (f = g, h = new Date(g), h.setMonth(h.getMonth() + e)) : (f = new Date(n), AmCharts.changeDate(f, k, e, !1), f.setDate(f.getDate() - 1), h = n) : (m = AmCharts.getPeriodDuration(k, e), this.selectFromStart ? (f = g, h = new Date(g.getTime() + m - 1)) : (f = new Date(n.getTime() - m + 1), h = n)), a.startTime = f.getTime(), this.hideOutOfScopePeriods && (b && a.startTime < g.getTime() ? d.style.display = \"none\" : d.style.display = \"inline\"), f.getTime() > n.getTime() && (m = AmCharts.getPeriodDuration(\"DD\", 1), f =","            new Date(n.getTime() - m)), f.getTime() < g.getTime() && (f = g), \"YTD\" == k && (a.startTime = f.getTime()), a.endTime = h.getTime(), b || (this.skipMark = !0, this.unselectButtons(), d.className = \"amChartsButtonSelected\", t && AmCharts.applyStyles(d.style, t.PeriodButtonSelected), a = {","            type: \"changed\"","        }, a.startDate = f, a.endDate = h, a.predefinedPeriod = k, a.chart = this.chart, a.count = e, a.event = c, this.fire(a.type, a)))","    },","    markButtonAsSelected: function() {","        if (!this.skipMark) {","            var a = this.chart,","                b = this.periods,","                c = a.startDate.getTime(),","                a = a.endDate.getTime(),","                d = this.lastDate.getTime();","            a > d && (a = d);","            d = this.theme;","            this.unselectButtons();","            var e;","            for (e = b.length - 1; 0 <= e; e--) {","                var k = b[e],","                    f = k.button;","                k.startTime && k.endTime && c == k.startTime && a == k.endTime && (this.unselectButtons(), f.className = \"amChartsButtonSelected\", d && AmCharts.applyStyles(f.style, d.PeriodButtonSelected))","            }","        }","        this.skipMark = !1","    },","    unselectButtons: function() {","        var a = this.periods,","            b, c = this.theme;","        for (b = a.length - 1; 0 <= b; b--) {","            var d = a[b].button;","            d.className = \"amChartsButton\";","            c && AmCharts.applyStyles(d.style, c.PeriodButton)","        }","    },","    setDefaultPeriod: function() {","        var a = this.periods,","            b;","        for (b = 0; b < a.length; b++) {","            var c = a[b];","            c.selected && this.selectPeriodButton(c)","        }","    }","});","AmCharts.StockGraph = AmCharts.Class({","    inherits: AmCharts.AmGraph,","    construct: function(a) {","        AmCharts.StockGraph.base.construct.call(this, a);","        this.cname = \"StockGraph\";","        this.useDataSetColors = !0;","        this.periodValue = \"Close\";","        this.compareGraphType = \"line\";","        this.compareGraphVisibleInLegend = !0;","        this.comparable = this.resetTitleOnDataSetChange = !1;","        this.comparedGraphs = {};","        this.showEventsOnComparedGraphs = !1;","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.StockPanel = AmCharts.Class({","    inherits: AmCharts.AmSerialChart,","    construct: function(a) {","        AmCharts.StockPanel.base.construct.call(this, a);","        this.cname = \"StockPanel\";","        this.theme = a;","        this.showCategoryAxis = this.showComparedOnTop = !0;","        this.recalculateToPercents = \"whenComparing\";","        this.panelHeaderPaddingBottom = this.panelHeaderPaddingLeft = this.panelHeaderPaddingRight = this.panelHeaderPaddingTop = 0;","        this.trendLineAlpha = 1;","        this.trendLineColor = \"#00CC00\";","        this.trendLineColorHover = \"#CC0000\";","        this.trendLineThickness = 2;","        this.trendLineDashLength =","            0;","        this.stockGraphs = [];","        this.drawingIconsEnabled = !1;","        this.iconSize = 18;","        this.autoMargins = this.allowTurningOff = this.eraseAll = this.erasingEnabled = this.drawingEnabled = !1;","        AmCharts.applyTheme(this, a, this.cname)","    },","    initChart: function(a) {","        AmCharts.StockPanel.base.initChart.call(this, a);","        this.drawingIconsEnabled && this.createDrawIcons();","        (a = this.chartCursor) && this.listenTo(a, \"draw\", this.handleDraw)","    },","    addStockGraph: function(a) {","        this.stockGraphs.push(a);","        return a","    },","    handleCursorZoom: function(a) {","        this.chartCursor && this.chartCursor.pan &&","            AmCharts.StockPanel.base.handleCursorZoom.call(this, a)","    },","    removeStockGraph: function(a) {","        var b = this.stockGraphs,","            c;","        for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1)","    },","    createDrawIcons: function() {","        var a = this,","            b = a.iconSize,","            c = a.container,","            d = a.pathToImages,","            e = a.realWidth - 2 * b - 1 - a.marginRight,","            k = AmCharts.rect(c, b, b, \"#000\", .005),","            f = AmCharts.rect(c, b, b, \"#000\", .005);","        f.translate(b + 1, 0);","        var h = c.image(d + \"pencilIcon.gif\", 0, 0, b, b);","        a.pencilButton = h;","        f.setAttr(\"cursor\", \"pointer\");","        k.setAttr(\"cursor\", \"pointer\");","        k.mouseup(function() {","            a.handlePencilClick()","        });","        var g = c.image(d + \"pencilIconH.gif\", 0, 0, b, b);","        a.pencilButtonPushed = g;","        a.drawingEnabled || g.hide();","        var n = c.image(d + \"eraserIcon.gif\", b + 1, 0, b, b);","        a.eraserButton = n;","        f.mouseup(function() {","            a.handleEraserClick()","        });","        k.touchend && (k.touchend(function() {","            a.handlePencilClick()","        }), f.touchend(function() {","            a.handleEraserClick()","        }));","        b = c.image(d + \"eraserIconH.gif\", b + 1, 0, b, b);","        a.eraserButtonPushed = b;","        a.erasingEnabled || b.hide();","        c = c.set([h, g, n, b, k, f]);","        c.translate(e, 1);","        this.hideIcons && c.hide()","    },","    handlePencilClick: function() {","        var a = !this.drawingEnabled;","        this.disableDrawing(!a);","        this.erasingEnabled = !1;","        var b = this.eraserButtonPushed;","        b && b.hide();","        b = this.pencilButtonPushed;","        a ? b && b.show() : (b && b.hide(), this.setMouseCursor(\"auto\"))","    },","    disableDrawing: function(a) {","        this.drawingEnabled = !a;","        var b = this.chartCursor;","        this.stockChart.enableCursors(a);","        b && b.enableDrawing(!a)","    },","    handleEraserClick: function() {","        this.disableDrawing(!0);","        var a = this.pencilButtonPushed;","        a && a.hide();","        a = this.eraserButtonPushed;","        if (this.eraseAll) {","            var a = this.trendLines,","                b;","            for (b = a.length - 1; 0 <= b; b--) {","                var c = a[b];","                c.isProtected || this.removeTrendLine(c)","            }","            this.validateNow()","        }","        else(this.erasingEnabled = b = !this.erasingEnabled) ? (a && a.show(), this.setTrendColorHover(this.trendLineColorHover), this.setMouseCursor(\"auto\")) : (a && a.hide(), this.setTrendColorHover())","    },","    setTrendColorHover: function(a) {","        var b = this.trendLines,","            c;","        for (c = b.length - 1; 0 <= c; c--) {","            var d = b[c];","            d.isProtected || (d.rollOverColor = a)","        }","    },","    handleDraw: function(a) {","        var b = this.drawOnAxis;","        AmCharts.isString(b) && (b = this.getValueAxisById(b));","        b || (b = this.valueAxes[0]);","        this.drawOnAxis =","            b;","        var c = this.categoryAxis,","            d = a.initialX,","            e = a.finalX,","            k = a.initialY;","        a = a.finalY;","        var f = new AmCharts.TrendLine(this.theme);","        f.initialDate = c.coordinateToDate(d);","        f.finalDate = c.coordinateToDate(e);","        f.initialValue = b.coordinateToValue(k);","        f.finalValue = b.coordinateToValue(a);","        f.lineAlpha = this.trendLineAlpha;","        f.lineColor = this.trendLineColor;","        f.lineThickness = this.trendLineThickness;","        f.dashLength = this.trendLineDashLength;","        f.valueAxis = b;","        f.categoryAxis = c;","        this.addTrendLine(f);","        this.listenTo(f, \"click\", this.handleTrendClick);","        this.validateNow()","    },","    hideDrawingIcons: function(a) {","        (this.hideIcons = a) && this.disableDrawing(a)","    },","    handleTrendClick: function(a) {","        this.erasingEnabled && (a = a.trendLine, this.eraseAll || a.isProtected || this.removeTrendLine(a), this.validateNow())","    },","    handleWheelReal: function(a, b) {","        var c = this.scrollbarChart;","        if (!this.wheelBusy && c) {","            var d = 1;","            b && (d = -1);","            var c = c.chartScrollbar,","                e = this.categoryAxis.minDuration();","            0 > a ? (d = this.startTime + d * e, e = this.endTime + 1 * e) : (d = this.startTime - d * e, e = this.endTime - 1 * e);","            d < this.firstTime && (d = this.firstTime);","            e > this.lastTime &&","                (e = this.lastTime);","            d < e && c.timeZoom(d, e, !0)","        }","    }","});","AmCharts.CategoryAxesSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"CategoryAxesSettings\";","        this.minPeriod = \"DD\";","        this.equalSpacing = !1;","        this.axisHeight = 28;","        this.tickLength = this.axisAlpha = 0;","        this.gridCount = 10;","        this.maxSeries = 150;","        this.groupToPeriods = \"ss 10ss 30ss mm 10mm 30mm hh DD WW MM YYYY\".split(\" \");","        this.markPeriodChange = this.autoGridCount = !0;","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.ChartCursorSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"ChartCursorSettings\";","        this.enabled = !0;","        this.bulletsEnabled = this.valueBalloonsEnabled = !1;","        this.categoryBalloonDateFormats = [{","            period: \"YYYY\",","            format: \"YYYY\"","        }, {","            period: \"MM\",","            format: \"MMM, YYYY\"","        }, {","            period: \"WW\",","            format: \"MMM DD, YYYY\"","        }, {","            period: \"DD\",","            format: \"MMM DD, YYYY\"","        }, {","            period: \"hh\",","            format: \"JJ:NN\"","        }, {","            period: \"mm\",","            format: \"JJ:NN\"","        }, {","            period: \"ss\",","            format: \"JJ:NN:SS\"","        }, {","            period: \"fff\",","            format: \"JJ:NN:SS\"","        }];","        AmCharts.applyTheme(this, a, this.cname)","    },","    categoryBalloonDateFormat: function(a) {","        var b =","            this.categoryBalloonDateFormats,","            c, d;","        for (d = 0; d < b.length; d++) b[d].period == a && (c = b[d].format);","        return c","    }","});","AmCharts.ChartScrollbarSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"ChartScrollbarSettings\";","        this.height = 40;","        this.enabled = !0;","        this.color = \"#FFFFFF\";","        this.updateOnReleaseOnly = this.autoGridCount = !0;","        this.hideResizeGrips = !1;","        this.position = \"bottom\";","        this.minDistance = 1;","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.LegendSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"LegendSettings\";","        this.marginBottom = this.marginTop = 0;","        this.usePositiveNegativeOnPercentsOnly = !0;","        this.positiveValueColor = \"#00CC00\";","        this.negativeValueColor = \"#CC0000\";","        this.autoMargins = this.equalWidths = this.textClickEnabled = !1;","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.PanelsSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"PanelsSettings\";","        this.marginBottom = this.marginTop = this.marginRight = this.marginLeft = 0;","        this.backgroundColor = \"#FFFFFF\";","        this.backgroundAlpha = 0;","        this.panelSpacing = 8;","        this.panEventsEnabled = !0;","        this.creditsPosition = \"top-right\";","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.StockEventsSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"StockEventsSettings\";","        this.type = \"sign\";","        this.backgroundAlpha = 1;","        this.backgroundColor = \"#DADADA\";","        this.borderAlpha = 1;","        this.borderColor = \"#888888\";","        this.balloonColor = this.rollOverColor = \"#CC0000\";","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.ValueAxesSettings = AmCharts.Class({","    construct: function(a) {","        this.cname = \"ValueAxesSettings\";","        this.tickLength = 0;","        this.showFirstLabel = this.autoGridCount = this.inside = !0;","        this.showLastLabel = !1;","        this.axisAlpha = 0;","        AmCharts.applyTheme(this, a, this.cname)","    }","});","AmCharts.getItemIndex = function(a, b) {","    var c = -1,","        d;","    for (d = 0; d < b.length; d++) a == b[d] && (c = d);","    return c","};","AmCharts.addBr = function(a) {","    a.appendChild(document.createElement(\"br\"))","};","AmCharts.applyStyles = function(a, b) {","    if (b && a)","        for (var c in a) {","            var d = c,","                e = b[d];","            if (void 0 !== e) try {","                a[d] = e","            }","            catch (k) {}","        }","};","AmCharts.parseStockData = function(a, b, c, d, e) {","    (new Date).getTime();","    var k = {},","        f = a.dataProvider,","        h = a.categoryField;","    if (h) {","        var g = AmCharts.getItemIndex(b, c),","            n = c.length,","            m, t = f.length,","            r, v = {};","        for (m = g; m < n; m++) r = c[m], k[r] = [];","        var w = {},","            l = a.fieldMappings,","            y = l.length;","        for (m = 0; m < t; m++) {","            var z = f[m],","                x = z[h],","                x = x instanceof Date ? AmCharts.newDate(x, b) : e ? AmCharts.stringToDate(x, e) : new Date(x),","                B = x.getTime(),","                A = {};","            for (r = 0; r < y; r++) A[l[r].toField] = z[l[r].fromField];","            var q;","            for (q = g; q < n; q++) {","                r = c[q];","                var s = AmCharts.extractPeriod(r),","                    C = s.period,","                    E = s.count,","                    u, p;","                if (q == g || B >= v[r] || !v[r]) {","                    w[r] = {};","                    w[r].amCategoryIdField = String(AmCharts.resetDateToMin(x, C, E, d).getTime());","                    var D;","                    for (D = 0; D < y; D++) s = l[D].toField, u = w[r], p = Number(A[s]), u[s + \"Count\"] = 0, u[s + \"Sum\"] = 0, isNaN(p) || (u[s + \"Open\"] = p, u[s + \"Sum\"] = p, u[s + \"High\"] = p, u[s + \"Low\"] = p, u[s + \"Close\"] = p, u[s + \"Count\"] = 1, u[s + \"Average\"] = p);","                    u.dataContext = z;","                    k[r].push(w[r]);","                    q > g && (s = AmCharts.newDate(x, b), s = AmCharts.changeDate(s, C, E, !0), s = AmCharts.resetDateToMin(s, C, E, d), v[r] = s.getTime());","                    if (q == g)","                        for (var F in z) z.hasOwnProperty(F) &&","                            (w[r][F] = z[F]);","                    w[r][h] = AmCharts.newDate(x, b)","                }","                else","                    for (C = 0; C < y; C++) s = l[C].toField, u = w[r], m == t - 1 && (u[h] = AmCharts.newDate(x, b)), p = Number(A[s]), isNaN(p) || (isNaN(u[s + \"Low\"]) && (u[s + \"Low\"] = p), p < u[s + \"Low\"] && (u[s + \"Low\"] = p), isNaN(u[s + \"High\"]) && (u[s + \"High\"] = p), p > u[s + \"High\"] && (u[s + \"High\"] = p), u[s + \"Close\"] = p, E = AmCharts.getDecimals(u[s + \"Sum\"]), D = AmCharts.getDecimals(p), u[s + \"Sum\"] += p, u[s + \"Sum\"] = AmCharts.roundTo(u[s + \"Sum\"], Math.max(E, D)), u[s + \"Count\"] ++, u[s + \"Average\"] = u[s + \"Sum\"] / u[s + \"Count\"])","            }","        }","    }","    a.agregatedDataProviders =","        k","};","AmCharts.parseEvents = function(a, b, c, d, e, k) {","    var f = a.stockEvents,","        h = a.agregatedDataProviders,","        g = b.length,","        n, m, t, r, v, w, l, y;","    for (n = 0; n < g; n++) {","        w = b[n];","        v = w.graphs;","        t = v.length;","        var z;","        for (m = 0; m < t; m++) r = v[m], r.customBulletField = \"amCustomBullet\" + r.id + \"_\" + w.id, r.bulletConfigField = \"amCustomBulletConfig\" + r.id + \"_\" + w.id;","        for (var x = 0; x < f.length; x++)","            if (l = f[x], z = l.graph, AmCharts.isString(z) && (z = AmCharts.getObjById(v, z))) l.graph = z","    }","    for (var B in h)","        if (h.hasOwnProperty(B)) {","            z = h[B];","            var A = AmCharts.extractPeriod(B),","                q = z.length,","                s;","            for (s =","                0; s < q; s++) {","                var C = z[s];","                n = C[a.categoryField];","                y = n instanceof Date;","                k && !y && (n = AmCharts.stringToDate(n, k));","                var E = n.getTime();","                v = A.period;","                var x = A.count,","                    u;","                u = \"fff\" == v ? n.getTime() + 1 : AmCharts.resetDateToMin(AmCharts.changeDate(new Date(n), A.period, A.count), v, x, d).getTime();","                for (n = 0; n < g; n++)","                    for (w = b[n], v = w.graphs, t = v.length, m = 0; m < t; m++) {","                        r = v[m];","                        var p = {};","                        p.eventDispatcher = e;","                        p.eventObjects = [];","                        p.letters = [];","                        p.descriptions = [];","                        p.shapes = [];","                        p.backgroundColors = [];","                        p.backgroundAlphas = [];","                        p.borderColors = [];","                        p.borderAlphas = [];","                        p.colors = [];","                        p.rollOverColors = [];","                        p.showOnAxis = [];","                        p.values = [];","                        p.showAts = [];","                        for (x = 0; x < f.length; x++) {","                            l = f[x];","                            y = l.date instanceof Date;","                            k && !y && (l.date = AmCharts.stringToDate(l.date, k));","                            y = l.date.getTime();","                            var D = !1;","                            l.graph && (l.graph.showEventsOnComparedGraphs && l.graph.comparedGraphs[a.id] && (D = !0), (r == l.graph || D) && y >= E && y < u && (p.eventObjects.push(l), p.letters.push(l.text), p.descriptions.push(l.description), l.type ? p.shapes.push(l.type) : p.shapes.push(c.type), void 0 !== l.backgroundColor ? p.backgroundColors.push(l.backgroundColor) :","                                p.backgroundColors.push(c.backgroundColor), isNaN(l.backgroundAlpha) ? p.backgroundAlphas.push(c.backgroundAlpha) : p.backgroundAlphas.push(l.backgroundAlpha), isNaN(l.borderAlpha) ? p.borderAlphas.push(c.borderAlpha) : p.borderAlphas.push(l.borderAlpha), void 0 !== l.borderColor ? p.borderColors.push(l.borderColor) : p.borderColors.push(c.borderColor), void 0 !== l.rollOverColor ? p.rollOverColors.push(l.rollOverColor) : p.rollOverColors.push(c.rollOverColor), void 0 !== l.showAt ? p.showAts.push(l.showAt) : p.showAts.push(c.showAt),","                                p.colors.push(l.color), p.values.push(l.value), !l.panel && l.graph && (l.panel = l.graph.chart), p.showOnAxis.push(l.showOnAxis), p.date = new Date(l.date)));","                            0 < p.shapes.length && (l = \"amCustomBullet\" + r.id + \"_\" + w.id, y = \"amCustomBulletConfig\" + r.id + \"_\" + w.id, C[l] = AmCharts.StackedBullet, C[y] = p)","                        }","                    }","            }","        }","};","AmCharts.StockLegend = AmCharts.Class({","    inherits: AmCharts.AmLegend,","    construct: function(a) {","        AmCharts.StockLegend.base.construct.call(this, a);","        this.cname = \"StockLegend\";","        this.valueTextComparing = \"[[percents.value]]%\";","        this.valueTextRegular = \"[[value]]\";","        AmCharts.applyTheme(this, a, this.cname)","    },","    drawLegend: function() {","        var a = this;","        AmCharts.StockLegend.base.drawLegend.call(a);","        var b = a.chart;","        if (b.allowTurningOff) {","            var c = a.container,","                d = c.image(b.pathToImages + \"xIcon.gif\", b.realWidth - 17, 3, 17, 17),","                b = c.image(b.pathToImages + \"xIconH.gif\",","                    b.realWidth - 17, 3, 17, 17);","            b.hide();","            a.xButtonHover = b;","            d.mouseup(function() {","                a.handleXClick()","            }).mouseover(function() {","                a.handleXOver()","            });","            b.mouseup(function() {","                a.handleXClick()","            }).mouseout(function() {","                a.handleXOut()","            })","        }","    },","    handleXOver: function() {","        this.xButtonHover.show()","    },","    handleXOut: function() {","        this.xButtonHover.hide()","    },","    handleXClick: function() {","        var a = this.chart,","            b = a.stockChart;","        b.removePanel(a);","        b.validateNow()","    }","});","AmCharts.DataSetSelector = AmCharts.Class({","    construct: function(a) {","        this.cname = \"DataSetSelector\";","        this.theme = a;","        this.createEvents(\"dataSetSelected\", \"dataSetCompared\", \"dataSetUncompared\");","        this.position = \"left\";","        this.selectText = \"Select:\";","        this.comboBoxSelectText = \"Select...\";","        this.compareText = \"Compare to:\";","        this.width = 180;","        this.dataProvider = [];","        this.listHeight = 150;","        this.listCheckBoxSize = 14;","        this.rollOverBackgroundColor = \"#b2e1ff\";","        this.selectedBackgroundColor = \"#7fceff\";","        AmCharts.applyTheme(this, a, this.cname)","    },","    write: function(a) {","        var b =","            this,","            c, d = b.theme;","        a.className = \"amChartsDataSetSelector\";","        var e = b.width;","        c = b.position;","        b.width = void 0;","        b.position = void 0;","        AmCharts.applyStyles(a.style, b);","        b.div = a;","        b.width = e;","        b.position = c;","        a.innerHTML = \"\";","        var e = b.position,","            k;","        k = \"top\" == e || \"bottom\" == e ? !1 : !0;","        b.vertical = k;","        var f;","        k && (f = b.width + \"px\");","        var e = b.dataProvider,","            h, g;","        if (1 < b.countDataSets(\"showInSelect\")) {","            c = document.createTextNode(AmCharts.lang.selectText || b.selectText);","            a.appendChild(c);","            k && AmCharts.addBr(a);","            var n = document.createElement(\"select\");","            f && (n.style.width =","                f);","            b.selectCB = n;","            d && AmCharts.applyStyles(n.style, d.DataSetSelect);","            a.appendChild(n);","            AmCharts.isNN && n.addEventListener(\"change\", function(a) {","                b.handleDataSetChange.call(b, a)","            }, !0);","            AmCharts.isIE && n.attachEvent(\"onchange\", function(a) {","                b.handleDataSetChange.call(b, a)","            });","            for (c = 0; c < e.length; c++)","                if (h = e[c], !0 === h.showInSelect) {","                    g = document.createElement(\"option\");","                    g.text = h.title;","                    g.value = c;","                    h == b.chart.mainDataSet && (g.selected = !0);","                    try {","                        n.add(g, null)","                    }","                    catch (m) {","                        n.add(g)","                    }","                }","            b.offsetHeight = n.offsetHeight","        }","        if (0 < b.countDataSets(\"showInCompare\") &&","            1 < e.length)","            if (k ? (AmCharts.addBr(a), AmCharts.addBr(a)) : (c = document.createTextNode(\" \"), a.appendChild(c)), c = document.createTextNode(AmCharts.lang.compareText || b.compareText), a.appendChild(c), g = b.listCheckBoxSize, k) {","                AmCharts.addBr(a);","                f = document.createElement(\"div\");","                a.appendChild(f);","                f.className = \"amChartsCompareList\";","                d && AmCharts.applyStyles(f.style, d.DataSetCompareList);","                f.style.overflow = \"auto\";","                f.style.overflowX = \"hidden\";","                f.style.width = b.width - 2 + \"px\";","                f.style.maxHeight = b.listHeight + \"px\";","                for (c = 0; c < e.length; c++) h =","                    e[c], !0 === h.showInCompare && h != b.chart.mainDataSet && (d = document.createElement(\"div\"), d.style.padding = \"4px\", d.style.position = \"relative\", d.name = \"amCBContainer\", d.dataSet = h, d.style.height = g + \"px\", h.compared && (d.style.backgroundColor = b.selectedBackgroundColor), f.appendChild(d), k = document.createElement(\"div\"), k.style.width = g + \"px\", k.style.height = g + \"px\", k.style.position = \"absolute\", k.style.backgroundColor = h.color, d.appendChild(k), k = document.createElement(\"div\"), k.style.width = \"100%\", k.style.position = \"absolute\",","                        k.style.left = g + 10 + \"px\", d.appendChild(k), h = document.createTextNode(h.title), k.style.whiteSpace = \"nowrap\", k.style.cursor = \"default\", k.appendChild(h), b.addEventListeners(d));","                AmCharts.addBr(a);","                AmCharts.addBr(a)","            }","            else {","                d = document.createElement(\"select\");","                b.compareCB = d;","                f && (d.style.width = f);","                a.appendChild(d);","                AmCharts.isNN && d.addEventListener(\"change\", function(a) {","                    b.handleCBSelect.call(b, a)","                }, !0);","                AmCharts.isIE && d.attachEvent(\"onchange\", function(a) {","                    b.handleCBSelect.call(b, a)","                });","                g = document.createElement(\"option\");","                g.text =","                    AmCharts.lang.comboBoxSelectText || b.comboBoxSelectText;","                try {","                    d.add(g, null)","                }","                catch (t) {","                    d.add(g)","                }","                for (c = 0; c < e.length; c++)","                    if (h = e[c], !0 === h.showInCompare && h != b.chart.mainDataSet) {","                        g = document.createElement(\"option\");","                        g.text = h.title;","                        g.value = c;","                        h.compared && (g.selected = !0);","                        try {","                            d.add(g, null)","                        }","                        catch (r) {","                            d.add(g)","                        }","                    }","                b.offsetHeight = d.offsetHeight","            }","    },","    addEventListeners: function(a) {","        var b = this;","        AmCharts.isNN && (a.addEventListener(\"mouseover\", function(a) {","            b.handleRollOver.call(b, a)","        }, !0), a.addEventListener(\"mouseout\", function(a) {","            b.handleRollOut.call(b,","                a)","        }, !0), a.addEventListener(\"click\", function(a) {","            b.handleClick.call(b, a)","        }, !0));","        AmCharts.isIE && (a.attachEvent(\"onmouseout\", function(a) {","            b.handleRollOut.call(b, a)","        }), a.attachEvent(\"onmouseover\", function(a) {","            b.handleRollOver.call(b, a)","        }), a.attachEvent(\"onclick\", function(a) {","            b.handleClick.call(b, a)","        }))","    },","    handleDataSetChange: function() {","        var a = this.selectCB,","            a = this.dataProvider[a.options[a.selectedIndex].value],","            b = this.chart;","        b.mainDataSet = a;","        b.zoomOutOnDataSetChange && (b.startDate = void 0, b.endDate = void 0);","        b.validateData();","        a = {","            type: \"dataSetSelected\",","            dataSet: a,","            chart: this.chart","        };","        this.fire(a.type, a)","    },","    handleRollOver: function(a) {","        a = this.getRealDiv(a);","        a.dataSet.compared || (a.style.backgroundColor = this.rollOverBackgroundColor)","    },","    handleRollOut: function(a) {","        a = this.getRealDiv(a);","        a.dataSet.compared || (a.style.removeProperty && a.style.removeProperty(\"background-color\"), a.style.removeAttribute && a.style.removeAttribute(\"backgroundColor\"))","    },","    handleCBSelect: function(a) {","        var b = this.compareCB,","            c = this.dataProvider,","            d, e;","        for (d = 0; d < c.length; d++) e =","            c[d], e.compared && (a = {","                type: \"dataSetUncompared\",","                dataSet: e","            }), e.compared = !1;","        c = b.selectedIndex;","        0 < c && (e = this.dataProvider[b.options[c].value], e.compared || (a = {","            type: \"dataSetCompared\",","            dataSet: e","        }), e.compared = !0);","        b = this.chart;","        b.validateData();","        a.chart = b;","        this.fire(a.type, a)","    },","    handleClick: function(a) {","        a = this.getRealDiv(a).dataSet;","        !0 === a.compared ? (a.compared = !1, a = {","            type: \"dataSetUncompared\",","            dataSet: a","        }) : (a.compared = !0, a = {","            type: \"dataSetCompared\",","            dataSet: a","        });","        var b = this.chart;","        b.validateData();","        a.chart = b;","        this.fire(a.type,","            a)","    },","    getRealDiv: function(a) {","        a || (a = window.event);","        a = a.currentTarget ? a.currentTarget : a.srcElement;","        \"amCBContainer\" == a.parentNode.name && (a = a.parentNode);","        return a","    },","    countDataSets: function(a) {","        var b = this.dataProvider,","            c = 0,","            d;","        for (d = 0; d < b.length; d++) !0 === b[d][a] && c++;","        return c","    }","});","AmCharts.StackedBullet = AmCharts.Class({","    construct: function() {","        this.fontSize = 11;","        this.stackDown = !1;","        this.mastHeight = 8;","        this.shapes = [];","        this.backgroundColors = [];","        this.backgroundAlphas = [];","        this.borderAlphas = [];","        this.borderColors = [];","        this.colors = [];","        this.rollOverColors = [];","        this.showOnAxiss = [];","        this.values = [];","        this.showAts = [];","        this.textColor = \"#000000\";","        this.nextY = 0;","        this.size = 16","    },","    parseConfig: function() {","        var a = this.bulletConfig;","        this.eventObjects = a.eventObjects;","        this.letters = a.letters;","        this.shapes = a.shapes;","        this.backgroundColors =","            a.backgroundColors;","        this.backgroundAlphas = a.backgroundAlphas;","        this.borderColors = a.borderColors;","        this.borderAlphas = a.borderAlphas;","        this.colors = a.colors;","        this.rollOverColors = a.rollOverColors;","        this.date = a.date;","        this.showOnAxiss = a.showOnAxis;","        this.axisCoordinate = a.minCoord;","        this.showAts = a.showAts;","        this.values = a.values","    },","    write: function(a) {","        this.parseConfig();","        this.container = a;","        this.bullets = [];","        if (this.graph) {","            var b = this.graph.fontSize;","            b && (this.fontSize = b)","        }","        b = this.letters.length;","        (this.mastHeight + 2 * (this.fontSize / 2 + 2)) *","        b > this.availableSpace && (this.stackDown = !0);","        this.set = a.set();","        a = 0;","        var c;","        for (c = 0; c < b; c++) this.shape = this.shapes[c], this.backgroundColor = this.backgroundColors[c], this.backgroundAlpha = this.backgroundAlphas[c], this.borderAlpha = this.borderAlphas[c], this.borderColor = this.borderColors[c], this.rollOverColor = this.rollOverColors[c], this.showOnAxis = this.showOnAxiss[c], this.color = this.colors[c], this.value = this.values[c], this.showAt = this.showAts[c], this.addLetter(this.letters[c], a, c), this.showOnAxis || a++","    },","    addLetter: function(a,","        b, c) {","        var d = this.container;","        b = d.set();","        var e = -1,","            k = this.stackDown,","            f = this.graph.valueAxis;","        this.showOnAxis && (this.stackDown = f.reversed ? !0 : !1);","        this.stackDown && (e = 1);","        var h = 0,","            g = 0,","            n = 0,","            m, t = this.fontSize,","            r = this.mastHeight,","            v = this.shape,","            w = this.textColor;","        void 0 !== this.color && (w = this.color);","        void 0 === a && (a = \"\");","        a = AmCharts.text(d, a, w, this.chart.fontFamily, this.fontSize);","        a.node.style.pointerEvents = \"none\";","        d = a.getBBox();","        this.labelWidth = w = d.width;","        this.labelHeight = d.height;","        var l, d = 0;","        switch (v) {","            case \"sign\":","                l = this.drawSign(b);","                h = r + 4 + t / 2;","                d = r + t + 4;","                1 == e && (h -= 4);","                break;","            case \"flag\":","                l = this.drawFlag(b);","                g = w / 2 + 3;","                h = r + 4 + t / 2;","                d = r + t + 4;","                1 == e && (h -= 4);","                break;","            case \"pin\":","                l = this.drawPin(b);","                h = 6 + t / 2;","                d = t + 8;","                break;","            case \"triangleUp\":","                l = this.drawTriangleUp(b);","                h = -t - 1;","                d = t + 4;","                e = -1;","                break;","            case \"triangleDown\":","                l = this.drawTriangleDown(b);","                h = t + 1;","                d = t + 4;","                e = -1;","                break;","            case \"triangleLeft\":","                l = this.drawTriangleLeft(b);","                g = t;","                d = t + 4;","                e = -1;","                break;","            case \"triangleRight\":","                l = this.drawTriangleRight(b);","                g = -t;","                e = -1;","                d = t + 4;","                break;","            case \"arrowUp\":","                l = this.drawArrowUp(b);","                a.hide();","                break;","            case \"arrowDown\":","                l =","                    this.drawArrowDown(b);","                a.hide();","                d = t + 4;","                break;","            case \"text\":","                e = -1;","                l = this.drawTextBackground(b, a);","                h = this.labelHeight + 3;","                d = t + 10;","                break;","            case \"round\":","                l = this.drawCircle(b)","        }","        this.bullets[c] = l;","        this.showOnAxis ? (m = isNaN(this.nextAxisY) ? this.axisCoordinate : this.nextY, n = h * e, this.nextAxisY = m + e * d) : this.value ? (m = this.value, f.recalculateToPercents && (m = m / f.recBaseValue * 100 - 100), m = f.getCoordinate(m) - this.bulletY, n = h * e) : this.showAt ? (l = this.graphDataItem.values, f.recalculateToPercents && (l = this.graphDataItem.percents), l && (m =","            f.getCoordinate(l[this.showAt]) - this.bulletY, n = h * e)) : (m = this.nextY, n = h * e);","        a.translate(g, n);","        b.push(a);","        b.translate(0, m);","        this.addEventListeners(b, c);","        this.nextY = m + e * d;","        this.stackDown = k","    },","    addEventListeners: function(a, b) {","        var c = this;","        a.click(function() {","            c.handleClick(b)","        }).mouseover(function() {","            c.handleMouseOver(b)","        }).touchend(function() {","            c.handleMouseOver(b, !0)","        }).mouseout(function() {","            c.handleMouseOut(b)","        })","    },","    drawPin: function(a) {","        var b = -1;","        this.stackDown && (b = 1);","        var c = this.fontSize + 4;","        return this.drawRealPolygon(a, [0,","            c / 2, c / 2, -c / 2, -c / 2, 0","        ], [0, b * c / 4, b * (c + c / 4), b * (c + c / 4), b * c / 4, 0])","    },","    drawSign: function(a) {","        var b = -1;","        this.stackDown && (b = 1);","        var c = this.mastHeight * b,","            d = this.fontSize / 2 + 2,","            e = AmCharts.line(this.container, [0, 0], [0, c], this.borderColor, this.borderAlpha, 1),","            k = AmCharts.circle(this.container, d, this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);","        k.translate(0, c + d * b);","        a.push(e);","        a.push(k);","        this.set.push(a);","        return k","    },","    drawFlag: function(a) {","        var b = -1;","        this.stackDown && (b = 1);","        var c = this.fontSize + 4,","            d = this.labelWidth +","            6,","            e = this.mastHeight,","            b = 1 == b ? b * e : b * e - c,","            e = AmCharts.line(this.container, [0, 0], [0, b], this.borderColor, this.borderAlpha, 1),","            c = AmCharts.polygon(this.container, [0, d, d, 0], [0, 0, c, c], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);","        c.translate(0, b);","        a.push(e);","        a.push(c);","        this.set.push(a);","        return c","    },","    drawTriangleUp: function(a) {","        var b = this.fontSize + 7;","        return this.drawRealPolygon(a, [0, b / 2, -b / 2, 0], [0, b, b, 0])","    },","    drawArrowUp: function(a) {","        var b = this.size,","            c = b / 2,","            d = b / 4;","        return this.drawRealPolygon(a, [0, c, d, d, -d, -d, -c, 0], [0, c, c, b, b, c, c, 0])","    },","    drawArrowDown: function(a) {","        var b = this.size,","            c = b / 2,","            d = b / 4;","        return this.drawRealPolygon(a, [0, c, d, d, -d, -d, -c, 0], [0, -c, -c, -b, -b, -c, -c, 0])","    },","    drawTriangleDown: function(a) {","        var b = this.fontSize + 7;","        return this.drawRealPolygon(a, [0, b / 2, -b / 2, 0], [0, -b, -b, 0])","    },","    drawTriangleLeft: function(a) {","        var b = this.fontSize + 7;","        return this.drawRealPolygon(a, [0, b, b, 0], [0, -b / 2, b / 2])","    },","    drawTriangleRight: function(a) {","        var b = this.fontSize + 7;","        return this.drawRealPolygon(a, [0, -b, -b, 0], [0, -b / 2, b / 2, 0])","    },","    drawRealPolygon: function(a,","        b, c) {","        b = AmCharts.polygon(this.container, b, c, this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);","        a.push(b);","        this.set.push(a);","        return b","    },","    drawCircle: function(a) {","        shape = AmCharts.circle(this.container, this.fontSize / 2, this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);","        a.push(shape);","        this.set.push(a);","        return shape","    },","    drawTextBackground: function(a, b) {","        var c = b.getBBox(),","            d = -c.width / 2 - 5,","            e = c.width / 2 + 5,","            c = -c.height - 12;","        return this.drawRealPolygon(a, [d, -5, 0, 5, e, e, d, d], [-5, -5, 0, -5, -5, c, c, -5])","    },","    handleMouseOver: function(a, b) {","        b || this.bullets[a].attr({","            fill: this.rollOverColors[a]","        });","        var c = this.eventObjects[a],","            d = {","                type: \"rollOverStockEvent\",","                eventObject: c,","                graph: this.graph,","                date: this.date","            },","            e = this.bulletConfig.eventDispatcher;","        d.chart = e;","        e.fire(d.type, d);","        c.url && this.bullets[a].setAttr(\"cursor\", \"pointer\");","        this.chart.showBalloon(AmCharts.fixNewLines(c.description), e.stockEventsSettings.balloonColor, !0)","    },","    handleClick: function(a) {","        a = this.eventObjects[a];","        var b = {","                type: \"clickStockEvent\",","                eventObject: a,","                graph: this.graph,","                date: this.date","            },","            c = this.bulletConfig.eventDispatcher;","        b.chart = c;","        c.fire(b.type, b);","        b = a.urlTarget;","        b || (b = c.stockEventsSettings.urlTarget);","        AmCharts.getURL(a.url, b)","    },","    handleMouseOut: function(a) {","        this.bullets[a].attr({","            fill: this.backgroundColors[a]","        });","        a = {","            type: \"rollOutStockEvent\",","            eventObject: this.eventObjects[a],","            graph: this.graph,","            date: this.date","        };","        var b = this.bulletConfig.eventDispatcher;","        a.chart = b;","        b.fire(a.type, a)","    }"]}]}]]},"ace":{"folds":[],"scrolltop":608,"scrollleft":0,"selection":{"start":{"row":79,"column":33},"end":{"row":79,"column":33},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":27,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1413380655251}