{"changed":true,"filter":false,"title":"scrape.js","tooltip":"/scrape.js","value":"var fs = require('fs');\nvar request = require('request');\nvar cheerio = require('cheerio');\n\n//console.log(date.format(\"dd MMM yyyy\"));\n\n//console.log(getFormattedDate(date));\n\nurl = 'http://marketdata.set.or.th/mkt/sectorquotation.do?sector=SET50&language=th&country=TH';\nrequest(url, function(error, response, html) {\n    if (!error) {\n        var $ = cheerio.load(html);\n\n        var title, release, rating;\n\n        var json = [];\n\n        // $('.bodytext').each(function(day) {\n        $('table.bodytext tr td[align=left]').each(function(day) {\n           \n            if (day > 4) {\n                console.log(day);\n                var stock = {\n                    name: \"\",\n                    date: \"\",\n                    open: \"\",\n                    high: \"\",\n                    low: \"\",\n                    close: \"\"\n                };\n                var current = $(this);\n                var name = $(this).text().trim();\n                console.log(name);\n                var open = $(this).next().next().text().trim();\n                console.log(open);\n                var high = $(this).next().next().next().text().trim();\n                var low = $(this).next().next().next().next().text().trim();\n                var close = $(this).next().next().next().next().next().text().trim();\n\n                stock.name = name;\n                stock.open = open;\n                stock.high = high;\n                stock.low = low;\n                stock.close = close;\n\n                json.push(stock);\n\n            }\n        });\n\n    }\n    // To write to the system we will use the built in 'fs' library.\n    // In this example we will pass 3 parameters to the writeFile function\n    // Parameter 1 :  output.json - this is what the created filename will be called\n    // Parameter 2 :  JSON.stringify(json, null, 4) - the data to write, here we do an extra step by calling JSON.stringify to make our JSON easier to read\n    // Parameter 3 :  callback function - a callback function to let us know the status of our function\n\n    fs.writeFile('output.json', JSON.stringify(json, null, 4), function(err) {\n\n        console.log('File successfully written! - Check your project directory for the output.json file');\n\n    })\n\n    // Finally, we'll just send out a message to the browser reminding you that this app does not have a UI.\n})\n","undoManager":{"mark":4,"position":7,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":20,"column":0},"end":{"row":20,"column":1}},"text":"}"},{"action":"removeLines","range":{"start":{"row":9,"column":0},"end":{"row":20,"column":0}},"nl":"\n","lines":["","var now=new Intl.DateTimeFormat(\"en-US\").format(date);","console.log(now);","","function getFormattedDate(input){","    var pattern=/(.*?)\\/(.*?)\\/(.*?)$/;","    var result = input.replace(pattern,function(match,p1,p2,p3){","        var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];","        return (p2<10?\"0\"+p2:p2)+\" \"+months[(p1-1)]+\" \"+p3;","    });","    return result;"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":23,"column":11},"end":{"row":23,"column":29}},"text":" console.log(day);"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":24,"column":26},"end":{"row":25,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":25,"column":0},"end":{"row":25,"column":16}},"text":"                "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":16},"end":{"row":25,"column":34}},"text":" console.log(day);"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":16},"end":{"row":25,"column":17}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":27}},"text":"var year=date.getFullYear()"},{"action":"removeLines","range":{"start":{"row":4,"column":0},"end":{"row":7,"column":0}},"nl":"\n","lines":["var date = new Date();","var today=date.getDate();","var month=date.getMonth();"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"nl":"\n","lines":[""]}]}]]},"ace":{"folds":[],"scrolltop":600,"scrollleft":0,"selection":{"start":{"row":28,"column":29},"end":{"row":28,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":40,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1416215560624}