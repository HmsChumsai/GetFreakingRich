{"changed":true,"filter":false,"title":"exampleChart.js","tooltip":"/exampleChart.js","value":"/**\n * Loads the external CSV file\n */\nAmCharts.loadCSV = function(file) {\n  if (window.XMLHttpRequest) {\n    // IE7+, Firefox, Chrome, Opera, Safari\n    var request = new XMLHttpRequest();\n  }\n  else {\n    // code for IE6, IE5\n    var request = new ActiveXObject('Microsoft.XMLHTTP');\n  }\n  // load\n  try {\n    request.open('GET', file, false);\n    request.send();\n    if (200 != request.status)\n      return [];\n  }\n  catch (e) {\n    return [];\n  }\n  return AmCharts.parseCSV(request.responseText);\n}\n\n/**\n * Parses CSV file\n */\nAmCharts.parseCSV = function(data) {\n  // init empty data array\n  var chartData = []\n\n  //replace UNIX new lines\n  data = data.replace(/\\r\\n/g, \"\\n\");\n  //replace MAC new lines\n  data = data.replace(/\\r/g, \"\\n\");\n  //split into rows\n  var rows = data.split(\"\\n\");\n\n  // first line contains field names\n  var fields = rows.shift().split(\",\");\n\n  // loop through all rows\n  var row;\n  while (row = rows.pop()) {\n    // our columns are separated by comma\n    var column = row.split(\",\");\n\n    // init data object\n    var dataObject = {};\n\n    // add data for all the fields\n    for (var x in column) {\n      dataObject[fields[x]] = column[x];\n    }\n\n    // add object to chartData array\n    chartData.push(dataObject);\n  }\n\n  return chartData;\n}\n\n/**\n * Delay loading by a few moments so that the page has a chace to build itself\n */\n\nsetTimeout(function() {\n\n  /**\n   * Define all data sets\n   */\n  var indices = ['MSFT', 'INTC', 'TXN', 'AAPL'];\n  var dataSets = [];\n  for (var x in indices) {\n    // load events\n    var events = AmCharts.loadCSV('/wp-content/uploads/demos/stock/optimized2/' + indices[x] + '_events.csv');\n    for (var e in events) {\n      switch (events[e].Type) {\n        case 'A':\n          var color = \"#85CDE6\";\n          break;\n        default:\n          var color = \"#cccccc\";\n          break;\n      }\n      events[e].Description = events[e].Description.replace(\"Upgrade\", \"<strong style=\\\"color: #0c0\\\">Upgrade</strong>\").replace(\"Downgrade\", \"<strong style=\\\"color: #c00\\\">Downgrade</strong>\");\n      events[e] = {\n        type: \"pin\",\n        graph: \"g1\",\n        backgroundColor: color,\n        date: events[e].Date,\n        text: events[e].Type,\n        description: \"<strong>\" + events[e].Title + \"</strong><br />\" + events[e].Description\n      };\n    }\n\n    // add data set\n    dataSets.push({\n      title: indices[x],\n      fieldMappings: [{\n        fromField: \"Adj Close\",\n        toField: \"value\"\n      }, {\n        fromField: \"Open\",\n        toField: \"open\"\n      }, {\n        fromField: \"High\",\n        toField: \"high\"\n      }, {\n        fromField: \"Low\",\n        toField: \"low\"\n      }, {\n        fromField: \"Close\",\n        toField: \"close\"\n      }, {\n        fromField: \"Volume\",\n        toField: \"volume\"\n      }],\n      compared: (x > 0) && (x < 3),\n      dataProvider: AmCharts.loadCSV('/wp-content/uploads/demos/stock/optimized2/' + indices[x] + '.csv'),\n      categoryField: \"Date\",\n      stockEvents: events\n    });\n  }\n\n  /**\n   * Build the chart\n   */\n  var chart = AmCharts.makeChart(\"chartdiv-0\", {\n    type: \"stock\",\n    theme: \"dark\",\n    pathToImages: \"http://www.amcharts.com/lib/3/images/\",\n    color: \"#fff\",\n    dataSets: dataSets,\n    dataDateFormat: \"YYYY-MM-DD\",\n\n    panels: [{\n        title: \"Value\",\n        percentHeight: 70,\n\n        stockGraphs: [{\n          type: \"candlestick\",\n          id: \"g1\",\n          openField: \"open\",\n          closeField: \"close\",\n          highField: \"high\",\n          lowField: \"low\",\n          valueField: \"value\",\n          lineColor: \"#fff\",\n          fillColors: \"#fff\",\n          negativeLineColor: \"#db4c3c\",\n          negativeFillColors: \"#db4c3c\",\n          fillAlphas: 1,\n          comparedGraphLineThickness: 2,\n          columnWidth: 0.7,\n          useDataSetColors: false,\n          comparable: true,\n          compareField: \"value\",\n          showBalloon: false,\n          proCandlesticks: true\n        }],\n\n        stockLegend: {\n          valueTextRegular: undefined,\n          periodValueTextComparing: \"[[percents.value.close]]%\"\n        }\n\n      },\n\n      {\n        title: \"Volume\",\n        percentHeight: 30,\n        marginTop: 1,\n        columnWidth: 0.6,\n        showCategoryAxis: false,\n\n        stockGraphs: [{\n          valueField: \"volume\",\n          openField: \"open\",\n          type: \"column\",\n          showBalloon: false,\n          fillAlphas: 1,\n          lineColor: \"#fff\",\n          fillColors: \"#fff\",\n          negativeLineColor: \"#db4c3c\",\n          negativeFillColors: \"#db4c3c\",\n          useDataSetColors: false\n        }],\n\n        stockLegend: {\n          markerType: \"none\",\n          markerSize: 0,\n          labelText: \"\",\n          periodValueTextRegular: \"[[value.close]]\"\n        },\n\n        valueAxes: [{\n          usePrefixes: true\n        }]\n      }\n    ],\n\n    dataSetSelector: {\n      position: \"left\"\n    },\n\n    panelsSettings: {\n      color: \"#fff\",\n      plotAreaFillColors: \"#000\",\n      plotAreaFillAlphas: 0.2,\n      marginLeft: 60,\n      marginTop: 5,\n      marginBottom: 5\n    },\n\n    chartScrollbarSettings: {\n      graph: \"g1\",\n      graphType: \"line\",\n      usePeriod: \"WW\"\n\n    },\n\n    categoryAxesSettings: {\n      equalSpacing: true,\n      gridColor: \"#FFFFFF\",\n      gridAlpha: 0.1,\n      dashLength: 0\n    },\n\n    valueAxesSettings: {\n      gridColor: \"#FFFFFF\",\n      gridAlpha: 0.1,\n      inside: false,\n      showLastLabel: true,\n      dashLength: 0\n    },\n\n    chartCursorSettings: {\n      pan: true,\n      valueLineEnabled: true,\n      valueLineBalloonEnabled: true\n    },\n\n    legendSettings: {\n      color: \"#fff\"\n    },\n\n    stockEventsSettings: {\n      showAt: \"high\"\n    },\n\n    balloon: {\n      textAlign: \"left\",\n      offsetY: 10\n    },\n\n    periodSelector: {\n      position: \"left\",\n      periodsText: \"\",\n      periods: [{\n        period: \"DD\",\n        count: 10,\n        label: \"10D\"\n      }, {\n        period: \"MM\",\n        count: 6,\n        label: \"6M\"\n      }, {\n        period: \"YYYY\",\n        count: 1,\n        label: \"1Y\"\n      }, {\n        period: \"YYYY\",\n        count: 2,\n        selected: true,\n        label: \"2Y\"\n      }, {\n        period: \"YTD\",\n        label: \"YTD\"\n      }, {\n        period: \"MAX\",\n        label: \"MAX\"\n      }]\n    }\n  });\n\n}, 1000);","undoManager":{"mark":0,"position":1,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":287,"column":0}},"lines":["\t/**"," * Loads the external CSV file"," */","AmCharts.loadCSV = function (file) {","  if (window.XMLHttpRequest) {","    // IE7+, Firefox, Chrome, Opera, Safari","    var request = new XMLHttpRequest();","  } else {","    // code for IE6, IE5","    var request = new ActiveXObject('Microsoft.XMLHTTP');","  }","  // load","  try {","    request.open('GET', file, false);","    request.send();","    if (200 != request.status)","      return [];","  }","  catch(e) {","    return [];","  }","  return AmCharts.parseCSV(request.responseText);","}","","/**"," * Parses CSV file"," */","AmCharts.parseCSV = function (data) {","  // init empty data array","  var chartData = []","","  //replace UNIX new lines","  data = data.replace(/\\r\\n/g, \"\\n\");","  //replace MAC new lines","  data = data.replace(/\\r/g, \"\\n\");","  //split into rows","  var rows = data.split(\"\\n\");","","  // first line contains field names","  var fields = rows.shift().split(\",\");","","  // loop through all rows","  var row;","  while( row = rows.pop()) {","    // our columns are separated by comma","    var column = row.split(\",\");","","    // init data object","    var dataObject = {};","","    // add data for all the fields","    for(var x in column) {","      dataObject[fields[x]] = column[x];","    }","","    // add object to chartData array","    chartData.push(dataObject);","  }","","  return chartData;","}","","/**"," * Delay loading by a few moments so that the page has a chace to build itself"," */","","setTimeout(function () {","","  /**","   * Define all data sets","   */","  var indices = ['MSFT', 'INTC', 'TXN', 'AAPL'];","  var dataSets = [];","  for (var x in indices) {","    // load events","    var events = AmCharts.loadCSV('/wp-content/uploads/demos/stock/optimized2/'+indices[x]+'_events.csv');","    for(var e in events) {","      switch(events[e].Type) {","        case 'A':","          var color = \"#85CDE6\";","          break;","        default:","          var color = \"#cccccc\";","          break;","      }","      events[e].Description = events[e].Description.replace(\"Upgrade\", \"<strong style=\\\"color: #0c0\\\">Upgrade</strong>\").replace(\"Downgrade\", \"<strong style=\\\"color: #c00\\\">Downgrade</strong>\");","      events[e] = {","        type: \"pin\",","        graph: \"g1\",","        backgroundColor: color,","        date: events[e].Date,","        text: events[e].Type,","        description: \"<strong>\" + events[e].Title + \"</strong><br />\" + events[e].Description","      };","    }","","    // add data set","    dataSets.push({","      title: indices[x],","      fieldMappings: [{","        fromField: \"Adj Close\",","        toField: \"value\"","      }, {","        fromField: \"Open\",","        toField: \"open\"","      }, {","        fromField: \"High\",","        toField: \"high\"","      }, {","        fromField: \"Low\",","        toField: \"low\"","      }, {","        fromField: \"Close\",","        toField: \"close\"","      }, {","        fromField: \"Volume\",","        toField: \"volume\"","      }],","      compared: (x > 0) && (x < 3),","      dataProvider: AmCharts.loadCSV('/wp-content/uploads/demos/stock/optimized2/'+indices[x]+'.csv'),","      categoryField: \"Date\",","      stockEvents: events","    });","  }","","  /**","   * Build the chart","   */","  var chart = AmCharts.makeChart(\"chartdiv-0\", {","    type: \"stock\",","    theme: \"dark\",","    pathToImages: \"http://www.amcharts.com/lib/3/images/\",","    color: \"#fff\",","    dataSets: dataSets,","    dataDateFormat: \"YYYY-MM-DD\",","","    panels: [{","        title: \"Value\",","        percentHeight: 70,","","        stockGraphs: [{","          type: \"candlestick\",","          id: \"g1\",","          openField: \"open\",","          closeField: \"close\",","          highField: \"high\",","          lowField: \"low\",","          valueField: \"value\",","          lineColor: \"#fff\",","          fillColors: \"#fff\",","          negativeLineColor: \"#db4c3c\",","          negativeFillColors: \"#db4c3c\",","          fillAlphas: 1,","          comparedGraphLineThickness: 2,","          columnWidth: 0.7,","          useDataSetColors: false,","          comparable: true,","          compareField: \"value\",","          showBalloon: false,","          proCandlesticks: true","        }],","","        stockLegend: {","          valueTextRegular: undefined,","          periodValueTextComparing: \"[[percents.value.close]]%\"","        }","","      },","","      {","        title: \"Volume\",","        percentHeight: 30,","        marginTop: 1,","        columnWidth: 0.6,","        showCategoryAxis: false,","","        stockGraphs: [{","          valueField: \"volume\",","          openField: \"open\",","          type: \"column\",","          showBalloon: false,","          fillAlphas: 1,","          lineColor: \"#fff\",","          fillColors: \"#fff\",","          negativeLineColor: \"#db4c3c\",","          negativeFillColors: \"#db4c3c\",","          useDataSetColors: false","        }],","","        stockLegend: {","          markerType: \"none\",","          markerSize: 0,","          labelText: \"\",","          periodValueTextRegular: \"[[value.close]]\"","        },","","        valueAxes: [{","          usePrefixes: true","        }]","      }","    ],","            ","    dataSetSelector: {","      position: \"left\"","    },","","    panelsSettings: {","      color: \"#fff\",","      plotAreaFillColors: \"#000\",","      plotAreaFillAlphas: 0.2,","      marginLeft: 60,","      marginTop: 5,","      marginBottom: 5","    },","","    chartScrollbarSettings: {","      graph: \"g1\",","      graphType: \"line\",","      usePeriod: \"WW\"","","    },","","    categoryAxesSettings: {","      equalSpacing: true,","      gridColor: \"#FFFFFF\",","      gridAlpha: 0.1,","      dashLength: 0","    },","","    valueAxesSettings: {","      gridColor: \"#FFFFFF\",","      gridAlpha: 0.1,","      inside: false,","      showLastLabel: true,","      dashLength: 0","    },","","    chartCursorSettings: {","      pan: true,","      valueLineEnabled: true,","      valueLineBalloonEnabled: true","    },","","    legendSettings: {","      color: \"#fff\"","    },","","    stockEventsSettings: {","      showAt: \"high\"","    },","","    balloon: {","      textAlign: \"left\",","      offsetY: 10","    },","","    periodSelector: {","      position: \"left\",","      periodsText: \"\",","      periods: [{","        period: \"DD\",","        count: 10,","        label: \"10D\"","      }, {","        period: \"MM\",","        count: 6,","        label: \"6M\"","      }, {","        period: \"YYYY\",","        count: 1,","        label: \"1Y\"","      }, {","        period: \"YYYY\",","        count: 2,","        selected: true,","        label: \"2Y\"","      }, {","        period: \"YTD\",","        label: \"YTD\"","      }, {","        period: \"MAX\",","        label: \"MAX\"","      }]","    }","  });",""]},{"action":"insertText","range":{"start":{"row":287,"column":0},"end":{"row":287,"column":9}},"text":"}, 1000);"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":1,"column":0},"end":{"row":1,"column":1}},"text":"\t"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"nl":"\n","lines":[""]},{"action":"removeText","range":{"start":{"row":3,"column":27},"end":{"row":3,"column":28}},"text":" "},{"action":"insertText","range":{"start":{"row":7,"column":3},"end":{"row":8,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":1}},"text":" "},{"action":"insertText","range":{"start":{"row":19,"column":7},"end":{"row":19,"column":8}},"text":" "},{"action":"removeText","range":{"start":{"row":28,"column":28},"end":{"row":28,"column":29}},"text":" "},{"action":"removeText","range":{"start":{"row":44,"column":7},"end":{"row":44,"column":8}},"text":"("},{"action":"insertText","range":{"start":{"row":44,"column":8},"end":{"row":44,"column":9}},"text":"("},{"action":"insertText","range":{"start":{"row":52,"column":7},"end":{"row":52,"column":8}},"text":" "},{"action":"removeText","range":{"start":{"row":67,"column":19},"end":{"row":67,"column":20}},"text":" "},{"action":"insertText","range":{"start":{"row":76,"column":79},"end":{"row":76,"column":80}},"text":" "},{"action":"insertText","range":{"start":{"row":76,"column":81},"end":{"row":76,"column":82}},"text":" "},{"action":"insertText","range":{"start":{"row":76,"column":92},"end":{"row":76,"column":93}},"text":" "},{"action":"insertText","range":{"start":{"row":76,"column":94},"end":{"row":76,"column":95}},"text":" "},{"action":"insertText","range":{"start":{"row":77,"column":7},"end":{"row":77,"column":8}},"text":" "},{"action":"insertText","range":{"start":{"row":78,"column":12},"end":{"row":78,"column":13}},"text":" "},{"action":"insertText","range":{"start":{"row":120,"column":82},"end":{"row":120,"column":83}},"text":" "},{"action":"insertText","range":{"start":{"row":120,"column":84},"end":{"row":120,"column":85}},"text":" "},{"action":"insertText","range":{"start":{"row":120,"column":95},"end":{"row":120,"column":96}},"text":" "},{"action":"insertText","range":{"start":{"row":120,"column":97},"end":{"row":120,"column":98}},"text":" "},{"action":"removeText","range":{"start":{"row":202,"column":0},"end":{"row":202,"column":12}},"text":"            "}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":67,"column":0},"end":{"row":67,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1413452006204}