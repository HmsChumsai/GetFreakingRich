{"changed":true,"filter":false,"title":"app.js","tooltip":"/app.js","value":"var express = require('express');\nvar path = require('path');\nvar favicon = require('static-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar app = express();\n//---For parsing\n\n// New Code\n//var mongo = require('mongodb');\nvar mongo = require('mongoskin');\nvar monk = require('monk');\n//var db = monk('localhost:27017/nodetest1');\nvar db = mongo.db(process.env.MONGOLAB_URI, {native_parser:true});\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar ip = require(\"ip\");\n//console.dir ( ip.address() );\n\n// view engine setup\napp.set('view engine', 'ejs');\n//app.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.engine('html', require('ejs').renderFile);\n\napp.use(favicon());\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded());\napp.use(cookieParser());\n//app.use(express.static(path.join(__dirname, 'public')));\napp.use(express.static(__dirname));\n\n// Make our db accessible to our router\napp.use(function(req, res, next) {\n    req.db = db;\n    next();\n});\n\napp.use('/', routes);\napp.use('/users', users);\n\n\n/// catch 404 and forwarding to error handler\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n/// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use(function(err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n\n    res.status(err.status || 500);\n    res.render('error', {\n        message: err.message,\n        error: {}\n    });\n});\n\n\nconsole.log('Magic happens on port 8081');\nmodule.exports = app;\n","undoManager":{"mark":7,"position":7,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":1}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":1},"end":{"row":11,"column":2}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":33},"end":{"row":12,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":33}},"text":"var mongo = require('mongoskin');"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":1}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":1},"end":{"row":14,"column":2}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":45},"end":{"row":15,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":66}},"text":"var db = mongo.db(process.env.MONGOLAB_URI, {native_parser:true});"}]}]]},"ace":{"folds":[],"scrolltop":83,"scrollleft":0,"selection":{"start":{"row":13,"column":27},"end":{"row":13,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":4,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1413215034074}